# Generated by Django 3.1.8 on 2021-06-08 23:01

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("DataRepo", "0001_initial"),
    ]

    operations = [
        migrations.AlterField(
            model_name="animal",
            name="age",
            field=models.DurationField(
                blank=True,
                help_text="The age of the animal at the time the samples were collected (weeks).",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="diet",
            field=models.CharField(
                blank=True,
                help_text='The feeding descriptor for the animal [e.g. "LabDiet Rodent 5001"].',
                max_length=256,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="feeding_status",
            field=models.CharField(
                blank=True,
                help_text='The laboratory coded dietary state for the animal (e.g. "fasted").',
                max_length=256,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="name",
            field=models.CharField(
                help_text="A unique name or lab identifier of the source animal for a series of studied samples.",
                max_length=256,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="sex",
            field=models.CharField(
                blank=True,
                choices=[("F", "female"), ("M", "male")],
                help_text='The sex of the animal (e.g. "M", "F").',
                max_length=1,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="state",
            field=models.CharField(
                blank=True,
                help_text='A laboratory\'s standardized code used to indicate the state of the studied animal (e.g. "fasted").',
                max_length=256,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="studies",
            field=models.ManyToManyField(
                help_text="The experimental study(ies) the the animal is associated with.",
                related_name="animals",
                to="DataRepo.Study",
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="tracer_compound",
            field=models.ForeignKey(
                help_text="The compound which was used as the tracer (i.e. infusate). The tracer is the labeled compound that is infused into the animal.",
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="DataRepo.compound",
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="tracer_infusion_concentration",
            field=models.FloatField(
                blank=True,
                help_text="The millimolar concentration of the tracer in the solution that was infused (mM).",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="tracer_infusion_rate",
            field=models.FloatField(
                blank=True,
                help_text="The rate of tracer infusion in microliters/min/gram of body weight of the animal (ul/min/g).",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="tracer_labeled_atom",
            field=models.CharField(
                blank=True,
                choices=[
                    ("C", "Carbon"),
                    ("N", "Nitrogen"),
                    ("H", "Hydrogen"),
                    ("O", "Oxygen"),
                    ("S", "Sulfur"),
                ],
                default="C",
                help_text='The type of atom that is labeled in the tracer compound (e.g. "C", "H", "O").',
                max_length=1,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="animal",
            name="treatment",
            field=models.ForeignKey(
                blank=True,
                help_text="The laboratory controlled label of the actions taken on an animal.",
                limit_choices_to={"category": "animal_treatment"},
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="animals",
                to="DataRepo.protocol",
            ),
        ),
        migrations.AlterField(
            model_name="compound",
            name="formula",
            field=models.CharField(
                help_text='The molecular formula of the compound (e.g. "C6H12O6", "C16H32O2", etc.).',
                max_length=256,
            ),
        ),
        migrations.AlterField(
            model_name="compound",
            name="hmdb_id",
            field=models.CharField(
                help_text="A unique identifier for this compound in the Human Metabolome Database (https://hmdb.ca/metabolites).",
                max_length=11,
                unique=True,
                verbose_name="HMDB ID",
            ),
        ),
        migrations.AlterField(
            model_name="compound",
            name="name",
            field=models.CharField(
                help_text='The compound name that is commonly used in the laboratory (e.g. "glucose", "C16:0", etc.).',
                max_length=256,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="msrun",
            name="date",
            field=models.DateField(
                help_text="The date that the mass spectrometer was run."
            ),
        ),
        migrations.AlterField(
            model_name="msrun",
            name="protocol",
            field=models.ForeignKey(
                help_text="The protocol that was used for this mass spectrometer run.",
                limit_choices_to={"category": "msrun_protocol"},
                on_delete=django.db.models.deletion.RESTRICT,
                to="DataRepo.protocol",
            ),
        ),
        migrations.AlterField(
            model_name="msrun",
            name="researcher",
            field=models.CharField(
                help_text="The name of the researcher who ran the mass spectrometer.",
                max_length=256,
            ),
        ),
        migrations.AlterField(
            model_name="msrun",
            name="sample",
            field=models.ForeignKey(
                help_text="The sample that was run on the mass spectrometer.",
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="msruns",
                to="DataRepo.sample",
            ),
        ),
        migrations.AlterField(
            model_name="peakdata",
            name="corrected_abundance",
            field=models.FloatField(
                help_text="The ion counts corrected for natural abundance of isotopomers.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="peakdata",
            name="labeled_element",
            field=models.CharField(
                blank=True,
                choices=[
                    ("C", "Carbon"),
                    ("N", "Nitrogen"),
                    ("H", "Hydrogen"),
                    ("O", "Oxygen"),
                    ("S", "Sulfur"),
                ],
                default="C",
                help_text='The type of element that is labeled in this observation (e.g. "C", "H", "O").',
                max_length=1,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="peakdata",
            name="med_mz",
            field=models.FloatField(
                help_text="The median mass/charge value of this measurement.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="peakdata",
            name="med_rt",
            field=models.FloatField(
                help_text="The median retention time value of this measurement.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="peakdata",
            name="raw_abundance",
            field=models.FloatField(
                help_text='The ion count of this observation, also referred to as "raw abundance".',
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="peakgroup",
            name="compounds",
            field=models.ManyToManyField(
                help_text="The compound(s) that this PeakGroup is presumed to represent.",
                related_name="peak_groups",
                to="DataRepo.Compound",
            ),
        ),
        migrations.AlterField(
            model_name="peakgroup",
            name="formula",
            field=models.CharField(
                help_text='The molecular formula of the compound (e.g. "C6H12O6").',
                max_length=256,
            ),
        ),
        migrations.AlterField(
            model_name="peakgroup",
            name="ms_run",
            field=models.ForeignKey(
                help_text="The MS Run this PeakGroup belongs to.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="peak_groups",
                to="DataRepo.msrun",
            ),
        ),
        migrations.AlterField(
            model_name="peakgroup",
            name="name",
            field=models.CharField(
                help_text='The compound or isomer group name (e.g. "citrate/isocitrate", "glucose").',
                max_length=256,
            ),
        ),
        migrations.AlterField(
            model_name="peakgroup",
            name="peak_group_set",
            field=models.ForeignKey(
                help_text="The source file this PeakGroup came from.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="peak_groups",
                to="DataRepo.peakgroupset",
            ),
        ),
        migrations.AlterField(
            model_name="peakgroupset",
            name="filename",
            field=models.CharField(
                help_text="The unique name of the source-file or dataset containing a researcher-defined set of peak groups and their associated data",
                max_length=256,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="peakgroupset",
            name="imported_timestamp",
            field=models.DateTimeField(
                auto_now_add=True,
                help_text="The timestamp for when the source datafile was imported.",
            ),
        ),
        migrations.AlterField(
            model_name="protocol",
            name="description",
            field=models.TextField(
                blank=True, help_text="Full text of the protocol's methods."
            ),
        ),
        migrations.AlterField(
            model_name="protocol",
            name="name",
            field=models.CharField(
                help_text="Unique name of the protocol.", max_length=256, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="sample",
            name="animal",
            field=models.ForeignKey(
                help_text="The source animal from which the sample was extracted.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="samples",
                to="DataRepo.animal",
            ),
        ),
        migrations.AlterField(
            model_name="sample",
            name="name",
            field=models.CharField(
                help_text="The unique name of the biological sample.",
                max_length=256,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="sample",
            name="researcher",
            field=models.CharField(
                help_text='The name of the researcher who prepared the sample (e.g. "Alex Medina").',
                max_length=256,
            ),
        ),
        migrations.AlterField(
            model_name="sample",
            name="tissue",
            field=models.ForeignKey(
                help_text="The tissue type this sample was taken from.",
                on_delete=django.db.models.deletion.RESTRICT,
                to="DataRepo.tissue",
            ),
        ),
        migrations.AlterField(
            model_name="study",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="A long form description for the study which may include the experimental design process, citations, and other relevant details.",
            ),
        ),
        migrations.AlterField(
            model_name="study",
            name="name",
            field=models.CharField(
                help_text="A succinct name for the study, which is a collection of one or more series of animals and their associated data.",
                max_length=256,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="tissue",
            name="name",
            field=models.CharField(
                help_text='The laboratory standardized name for this tissue type (e.g. "serum", "brain", "liver").',
                max_length=256,
                unique=True,
            ),
        ),
    ]

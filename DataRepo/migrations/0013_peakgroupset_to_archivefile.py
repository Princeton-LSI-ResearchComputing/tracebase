# Generated by Django 4.2.4 on 2023-08-09 16:25

import hashlib

from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations


def peakgroupset_to_archivefile(apps, schema_editor):
    # We can't import the models directly as there may be a newer
    # version than this migration expects. We use the historical version.
    PeakGroupSet = apps.get_model("DataRepo", "PeakGroupSet")
    ArchiveFile = apps.get_model("DataRepo", "ArchiveFile")
    DataType = apps.get_model("DataRepo", "DataType")
    DataFormat = apps.get_model("DataRepo", "DataFormat")

    # If a pre-existing DataType is not found, create the default
    try:
        ms_peak_annotation = DataType.objects.get(code="ms_peak_annotation")
    except ObjectDoesNotExist:
        ms_peak_annotation = DataType.objects.create(
            code="ms_peak_annotation",
            name="Mass Spectrometry Peak Annotation",
            description="Annotated peak data from one or more mass spectrometry runs",
        )

    # If a pre-existing DataFormat is not found, create the default
    try:
        accucor_format = DataFormat.objects.get(code="accucor")
    except ObjectDoesNotExist:
        accucor_format = DataFormat.objects.create(
            code="accucor", name="AccuCor", description="AccuCor corrected peak data"
        )

    for peakgroupset in PeakGroupSet.objects.all():
        # Here we assume the data fixtures were used

        # encode the filename
        encoded_filename = peakgroupset.filename.encode()

        # create a sha1 hash object initialized with the encoded filename
        hash_obj = hashlib.sha1(encoded_filename)

        # convert the hash object to a hexadecimal value
        hexa_value = hash_obj.hexdigest()
        archive_file = ArchiveFile.objects.create(
            filename=peakgroupset.filename,
            file_location=None,
            checksum=hexa_value,
            data_type=ms_peak_annotation,
            # Assume accucor format since we can't reliably determine without the files
            data_format=accucor_format,
        )
        archive_file.save()


def remove_peakgroupset_from_archivefile(apps, schema_editor):
    PeakGroupSet = apps.get_model("DataRepo", "PeakGroupSet")
    ArchiveFile = apps.get_model("DataRepo", "ArchiveFile")

    for peakgroupset in PeakGroupSet.objects.all():
        archive_file = ArchiveFile.objects.get(filename=peakgroupset.filename)
        archive_file.delete()


class Migration(migrations.Migration):
    dependencies = [
        ("DataRepo", "0012_alter_archivefile_file_location"),
    ]

    operations = [
        migrations.RunPython(
            peakgroupset_to_archivefile, remove_peakgroupset_from_archivefile
        ),
    ]

{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"TraceBase TraceBase is a mass spectrometry data repository and analysis tool for isotopic tracing studies used to quantify in vivo metabolism. It is designed to be downloaded and installed for individual labs so that lab members can make their natural isotopic abundance corrected data (along with associated experimental metadata) available to the rest of the lab. It currently supports data imported from AccuCor , IsoCor , and Iso-AutoCor . It also loads RAW and mzXML files for raw data retrieval. TraceBase organizes this data and computes useful metrics such as enrichment, normalized labeling, and FCirc. TraceBase data is easy to browse, collate, compare, and download. About Slideshow Introduction How TraceBase Handles Data Calculated Values Glossary Navigating TraceBase TraceBase Design Under the Hood Team Upload How to Upload Data What Inputs Does TraceBase Take Submission Template How to Name Your Studies, Animals, and Samples Errors and Warnings Reference Download How to Download Downloaded Data Formats How do I analyze data downloaded from TraceBase? Contact Team GitHub Repository Report a bug Request a feature Contribute General Feedback","title":"TraceBase"},{"location":"#tracebase","text":"TraceBase is a mass spectrometry data repository and analysis tool for isotopic tracing studies used to quantify in vivo metabolism. It is designed to be downloaded and installed for individual labs so that lab members can make their natural isotopic abundance corrected data (along with associated experimental metadata) available to the rest of the lab. It currently supports data imported from AccuCor , IsoCor , and Iso-AutoCor . It also loads RAW and mzXML files for raw data retrieval. TraceBase organizes this data and computes useful metrics such as enrichment, normalized labeling, and FCirc. TraceBase data is easy to browse, collate, compare, and download.","title":"TraceBase"},{"location":"#about","text":"Slideshow Introduction How TraceBase Handles Data Calculated Values Glossary Navigating TraceBase TraceBase Design Under the Hood Team","title":"About"},{"location":"#upload","text":"How to Upload Data What Inputs Does TraceBase Take Submission Template How to Name Your Studies, Animals, and Samples Errors and Warnings Reference","title":"Upload"},{"location":"#download","text":"How to Download Downloaded Data Formats How do I analyze data downloaded from TraceBase?","title":"Download"},{"location":"#contact","text":"Team GitHub Repository Report a bug Request a feature Contribute General Feedback","title":"Contact"},{"location":"About/How%20TraceBase%20Handles%20Data/","text":"How TraceBase Handles Data Types of Values TraceBase consists of three basic types of information: Experimental Standardized Calculated Experimental information is the metadata that describes the conditions of the experiment. It provides context for the Calculated values, without which, the results are meaningless. This data is organized hierarchically by Study , Animal , and Sample , each of which is associated with a globally unique name/identifier. I.e. Individual Samples are associated with an Animal, which is itself part of one or more Studies. A Study is a collection of Animals as defined by the researcher who uploaded them. This information is provided by the Researcher in the Samples sheet of the Study Doc . Although samples are organized in this way, data from different studies can be searched, browsed, or downloaded together in TraceBase. Standardized data refers to Sample and Compound attributes that are kept consistent across datasets in TraceBase. Examples of these consistent data include compound names, tissue names, researcher names, and key animal attributes including diet, age, sex, and infusion information. This also includes protocols for Animal Treatments and mass spectrometry (MS). This ensures that data can be compiled, compared, and searched across different studies. Consistency is ensured by developers that review data submitted for upload. Standardized data can be added or modified during a study submission to TraceBase by researchers, but is subject to curator review to ensure consistency and a standard nomenclature throughout the database. Calculated data (or \"derived data\") is generated by TraceBase from the originally uploaded data. TraceBase dynamically maintains these calculated values for constant accuracy. Calculated data can be found in three types of output: PeakData , PeakGroups , and FCirc . Some calculations rely on other calculated data (e.g. Normalized Labeling of a measured compound in a PeakGroup from one sample uses the Enrichment Fraction of the tracer compound in the last serum sample from the same animal). Calculated values are comparable across experiments. Calculated values can be affected by changes to or additions of records in the database. For example, a researcher discovers previously overlooked serum sample data after an already completed (and loaded) submission. The researcher then uploads additional data for that serum sample, and TraceBase updates the (previously missing) Fcirc value (and any other calculated values related to the new data). Raw Versus Curated Data TraceBase provides the option to upload raw mass spectrometry files (e.g. .raw and .mzXML files) for each Sample . Importantly, TraceBase does not directly associate the curated data ( PeakData or PeakGroup s) with the exact .mzXML file from which it came. Instead, TraceBase associates the mass spectrometry file(s) with the Sample (which is a description of the biological entity, like the quadricep from animal 123). The exact relationship within the database is more complex but beyond the scope of this description. Practically, you can download mzXML files associated with the Samples found in an Advanced Search of PeakData or PeakGroups . This download is uniformly organized based on the sequence and the information extracted from the mzXML file (e.g. polarity and scan range). Searching for Raw Data Files mzXML files from which curated peaks were derived can be found using the Advanced Search. In the rare case, when a Sample was uploaded without any curated data, the mzXML exists in TraceBase, but cannot be found using the Advanced Search page. However, any mzXML can be found on the Archive Files page. Support for improved access to all mzXML files regardless of the existence of curated peaks will be added in the future.","title":"How TraceBase Handles Data"},{"location":"About/How%20TraceBase%20Handles%20Data/#how-tracebase-handles-data","text":"","title":"How TraceBase Handles Data"},{"location":"About/How%20TraceBase%20Handles%20Data/#types-of-values","text":"TraceBase consists of three basic types of information: Experimental Standardized Calculated Experimental information is the metadata that describes the conditions of the experiment. It provides context for the Calculated values, without which, the results are meaningless. This data is organized hierarchically by Study , Animal , and Sample , each of which is associated with a globally unique name/identifier. I.e. Individual Samples are associated with an Animal, which is itself part of one or more Studies. A Study is a collection of Animals as defined by the researcher who uploaded them. This information is provided by the Researcher in the Samples sheet of the Study Doc . Although samples are organized in this way, data from different studies can be searched, browsed, or downloaded together in TraceBase. Standardized data refers to Sample and Compound attributes that are kept consistent across datasets in TraceBase. Examples of these consistent data include compound names, tissue names, researcher names, and key animal attributes including diet, age, sex, and infusion information. This also includes protocols for Animal Treatments and mass spectrometry (MS). This ensures that data can be compiled, compared, and searched across different studies. Consistency is ensured by developers that review data submitted for upload. Standardized data can be added or modified during a study submission to TraceBase by researchers, but is subject to curator review to ensure consistency and a standard nomenclature throughout the database. Calculated data (or \"derived data\") is generated by TraceBase from the originally uploaded data. TraceBase dynamically maintains these calculated values for constant accuracy. Calculated data can be found in three types of output: PeakData , PeakGroups , and FCirc . Some calculations rely on other calculated data (e.g. Normalized Labeling of a measured compound in a PeakGroup from one sample uses the Enrichment Fraction of the tracer compound in the last serum sample from the same animal). Calculated values are comparable across experiments. Calculated values can be affected by changes to or additions of records in the database. For example, a researcher discovers previously overlooked serum sample data after an already completed (and loaded) submission. The researcher then uploads additional data for that serum sample, and TraceBase updates the (previously missing) Fcirc value (and any other calculated values related to the new data).","title":"Types of Values"},{"location":"About/How%20TraceBase%20Handles%20Data/#raw-versus-curated-data","text":"TraceBase provides the option to upload raw mass spectrometry files (e.g. .raw and .mzXML files) for each Sample . Importantly, TraceBase does not directly associate the curated data ( PeakData or PeakGroup s) with the exact .mzXML file from which it came. Instead, TraceBase associates the mass spectrometry file(s) with the Sample (which is a description of the biological entity, like the quadricep from animal 123). The exact relationship within the database is more complex but beyond the scope of this description. Practically, you can download mzXML files associated with the Samples found in an Advanced Search of PeakData or PeakGroups . This download is uniformly organized based on the sequence and the information extracted from the mzXML file (e.g. polarity and scan range).","title":"Raw Versus Curated Data"},{"location":"About/How%20TraceBase%20Handles%20Data/#searching-for-raw-data-files","text":"mzXML files from which curated peaks were derived can be found using the Advanced Search. In the rare case, when a Sample was uploaded without any curated data, the mzXML exists in TraceBase, but cannot be found using the Advanced Search page. However, any mzXML can be found on the Archive Files page. Support for improved access to all mzXML files regardless of the existence of curated peaks will be added in the future.","title":"Searching for Raw Data Files"},{"location":"About/Navigating%20TraceBase/","text":"Navigating TraceBase TraceBase can be explored in two general ways: Samples First: Browse the list summaries in the sidebar Data First: Advanced Search Both of these methods filter all the data in TraceBase down to what you\u2019re looking for. Browse General exploration and browsing can help you explore the different types of data and studies available on TraceBase. For example, it is easy to check infusion rates and FCirc for a tracer without downloading anything from TraceBase. To begin browsing, select either one of the boxes from the homepage or a table from the sidebar. Each page contains a table where each row represents a unique database record. E.g. Each row on the Samples page is a unique biological sample. In the example below, \"Studies\" was selected. Each table can be viewed fullscreen, searched, downloaded, and columns can be added or removed (note: many tables have some columns hidden by default). Some items within a table include links to see more information. Clicking the first study for example, opens a new page with details for that specific study showing its subset of samples: After browsing to a study's sample subset, the actual data can be interrogated by clicking links to an advanced search specifically for that study's data: PeakGroups PeakData Fcirc Advanced Search The advanced search page provides a method to rapidly find and download a specific set of data. It is especially ideal for collating data from multiple studies (e.g. all data where glucose was a tracer). First, select an output format ( PeakGroups , PeakData , or Fcirc ). Next, filter the sample information. Note this is filtering from all the data in TraceBase. In this example, PeakGroup data is filtered for all infusates including \"glucose\" and tissue names containing \"serum\". This produces a result with 697 PeakGroups. Complex search conditions are accomplished by adding rows to the search form using the green buttons associated with each row. + adds a row ++ adds a row group that allows you to choose whether any or all conditions in the group are required to match - removes a row or row group Each row has a column (i.e. database field) select list, a comparator select list (based on the column's data type, e.g. \"is\" or \"contains\"), and a search term input. Based on some columns' data type, a fourth \"units\" select list may appear. Clicking the Search button generates a table with a small set of columns. To show hidden columns, click the blue columns button at the top of the table. To get an overview of what is included, you can click the blue \"Stats\" button which will open the following box: Note that generating these stats can take up to a minute depending on the size of the result set. The box in the example above shows that the currently filtered data includes 25 Animals, 42 unique measured compounds, 62 unique samples, etc. The Stats tab is especially useful for identifying Diets, Ages, Genotypes, Feeding Statuses, or Animal Treatments found within the currently filtered dataset. Adjust filters and search again, or download the table. To download all of your search results (across all pages), click the blue download button. Note that this downloaded table adheres to strict Downloaded Data Formats .","title":"Navigating TraceBase"},{"location":"About/Navigating%20TraceBase/#navigating-tracebase","text":"TraceBase can be explored in two general ways: Samples First: Browse the list summaries in the sidebar Data First: Advanced Search Both of these methods filter all the data in TraceBase down to what you\u2019re looking for.","title":"Navigating TraceBase"},{"location":"About/Navigating%20TraceBase/#browse","text":"General exploration and browsing can help you explore the different types of data and studies available on TraceBase. For example, it is easy to check infusion rates and FCirc for a tracer without downloading anything from TraceBase. To begin browsing, select either one of the boxes from the homepage or a table from the sidebar. Each page contains a table where each row represents a unique database record. E.g. Each row on the Samples page is a unique biological sample. In the example below, \"Studies\" was selected. Each table can be viewed fullscreen, searched, downloaded, and columns can be added or removed (note: many tables have some columns hidden by default). Some items within a table include links to see more information. Clicking the first study for example, opens a new page with details for that specific study showing its subset of samples: After browsing to a study's sample subset, the actual data can be interrogated by clicking links to an advanced search specifically for that study's data: PeakGroups PeakData Fcirc","title":"Browse"},{"location":"About/Navigating%20TraceBase/#advanced-search","text":"The advanced search page provides a method to rapidly find and download a specific set of data. It is especially ideal for collating data from multiple studies (e.g. all data where glucose was a tracer). First, select an output format ( PeakGroups , PeakData , or Fcirc ). Next, filter the sample information. Note this is filtering from all the data in TraceBase. In this example, PeakGroup data is filtered for all infusates including \"glucose\" and tissue names containing \"serum\". This produces a result with 697 PeakGroups. Complex search conditions are accomplished by adding rows to the search form using the green buttons associated with each row. + adds a row ++ adds a row group that allows you to choose whether any or all conditions in the group are required to match - removes a row or row group Each row has a column (i.e. database field) select list, a comparator select list (based on the column's data type, e.g. \"is\" or \"contains\"), and a search term input. Based on some columns' data type, a fourth \"units\" select list may appear. Clicking the Search button generates a table with a small set of columns. To show hidden columns, click the blue columns button at the top of the table. To get an overview of what is included, you can click the blue \"Stats\" button which will open the following box: Note that generating these stats can take up to a minute depending on the size of the result set. The box in the example above shows that the currently filtered data includes 25 Animals, 42 unique measured compounds, 62 unique samples, etc. The Stats tab is especially useful for identifying Diets, Ages, Genotypes, Feeding Statuses, or Animal Treatments found within the currently filtered dataset. Adjust filters and search again, or download the table. To download all of your search results (across all pages), click the blue download button. Note that this downloaded table adheres to strict Downloaded Data Formats .","title":"Advanced Search"},{"location":"About/Team/","text":"Team TraceBase is developed and maintained by the Research Computing group in the Lewis-Siglar Institute for Integrated Genomics at Princeton University , in collaboration with the laboratory of Joshua Rabinowitz, M.D., Ph.D. Research Software Engineers Fan Kang Robert Leach John Matese Rachid Ounit Lance Parsons Rabinowitz Lab Michael Neinast Joshua Rabinowitz","title":"Team"},{"location":"About/Team/#team","text":"TraceBase is developed and maintained by the Research Computing group in the Lewis-Siglar Institute for Integrated Genomics at Princeton University , in collaboration with the laboratory of Joshua Rabinowitz, M.D., Ph.D.","title":"Team"},{"location":"About/Team/#research-software-engineers","text":"Fan Kang Robert Leach John Matese Rachid Ounit Lance Parsons","title":"Research Software Engineers"},{"location":"About/Team/#rabinowitz-lab","text":"Michael Neinast Joshua Rabinowitz","title":"Rabinowitz Lab"},{"location":"About/TraceBase%20Design/","text":"TraceBase Design The study of metabolism often includes experiments where an animal is infused with a heavy isotope of a nutrient, and biological samples are collected and analyzed using a mass spectrometer. Historically, these costly and time-consuming experiments were only analyzed with a specific experimental question in mind, and much of the data available went unused. TraceBase was designed to capture, organize, and share data generated in these isotope tracing experiments. It is ideal for both the researcher who has completed all of their experiments, as well as the researcher whose work is in progress. Key Motivations Reduce the barrier for scientific data submission. Maintain data integrity and calculation accuracy or curated data, despite changes. Enable holistic analysis across many experiments. Leverage unanalyzed peak data produced in every experiment by making raw data accessible. Reducing the Submission Barrier Metabolomics studies involve lots of complex data, making the organizational burden, high. As such, metabolomics repositories often have exacting submission requirements that create large barriers to data submission. TraceBase was developed around flexible submission requirements and a guided collaborative curation process, while providing tools to empower users to prepare data and easily diagnose problems and fix them iteratively/incrementally. In designing this system, the following guiding principles were used: Incomplete submissions are OK and can be added to later. Imperfect data can be submitted and fixed as you go via the curation process. Data must be private to the laboratory (encouraging submission prior to publication). Focused design on infusions of isotope tracers into animals. Ensure Data Integrity and Accuracy TraceBase monitors the data in its studies in such way that ensures accurate calculations, despite changes to the data as a study is compiled and/or added-to. If data changes can affect how other data calculations are made, calculations are re-done. For example, if a later serum sample is added, it represents a better steady state, so normalized labeling calculations are updated. Enable Holistic Cross-Experiment Analyses TraceBase breaks down common calculations (like FCirc) by labeled element, so that when tracers in different experiments have different numbers of labeled elements, their results can still be compared. This ensures consistent analysis of single experiments and enables holistic analysis across many experiments. Leverage Unanalyzed Raw Data Since LCMS data is expensive and produces more data than is necessary to answer the immediate scientific question at hand, much of its output goes unused, but if made accessible, can be applied to new scientific questions. By linking this raw data to its related experimental data, it can be searched, downloaded, and used in new studies. Goals End User Goals TraceBase was developed with a primary focus the following development goals/features that were determined to be critical to mission success: Ease of Data Submission Robust Search Capabilities Data Accuracy Data Inter-comparability Maintenance Goals And more generally, we expect TraceBase to grow and evolve with ever increasing data, feature requests, data types, and changes to existing data. And we are aware that the curation of complex data can be a slow and difficult task. In order for people to install and maintain their own instance of TraceBase for themselves, overhead needed to be simple and minimized. Thus, this project was also tackled with these core principles in mind: Minimize Overhead Empower researchers to solve their own submission issues (e.g. the validation page) so that they don't have to wait through a time consuming curation process that involves a slow correspondence between the curator and the researcher as they work through issues in the data. By enabling researchers to solve these problems on their own through thoughtfully constructed and streamlined error messages, this reduces the maintenance efforts necessary to keep TraceBase working, shortens the time between submission and load, and reduces the overhead for maintainers to service study submissions. Automate the upkeep of calculated values when data changes. Adaptability TraceBase was made to be largely data-independent. E.g. Add a field to a table in the database and features like the list views, the loading scripts, or the advanced search either automatically adapt or only require relatively simple configuration changes. If data in a study is changed, removed, or added, key changes are monitored to trigger automatic updates of derived/calculated values. Scalability From a development standpoint, this is similar to the adaptability goal. From a database size standpoint, this means ensuring that performance doesn't wane as data is added.","title":"TraceBase Design"},{"location":"About/TraceBase%20Design/#tracebase-design","text":"The study of metabolism often includes experiments where an animal is infused with a heavy isotope of a nutrient, and biological samples are collected and analyzed using a mass spectrometer. Historically, these costly and time-consuming experiments were only analyzed with a specific experimental question in mind, and much of the data available went unused. TraceBase was designed to capture, organize, and share data generated in these isotope tracing experiments. It is ideal for both the researcher who has completed all of their experiments, as well as the researcher whose work is in progress.","title":"TraceBase Design"},{"location":"About/TraceBase%20Design/#key-motivations","text":"Reduce the barrier for scientific data submission. Maintain data integrity and calculation accuracy or curated data, despite changes. Enable holistic analysis across many experiments. Leverage unanalyzed peak data produced in every experiment by making raw data accessible.","title":"Key Motivations"},{"location":"About/TraceBase%20Design/#reducing-the-submission-barrier","text":"Metabolomics studies involve lots of complex data, making the organizational burden, high. As such, metabolomics repositories often have exacting submission requirements that create large barriers to data submission. TraceBase was developed around flexible submission requirements and a guided collaborative curation process, while providing tools to empower users to prepare data and easily diagnose problems and fix them iteratively/incrementally. In designing this system, the following guiding principles were used: Incomplete submissions are OK and can be added to later. Imperfect data can be submitted and fixed as you go via the curation process. Data must be private to the laboratory (encouraging submission prior to publication). Focused design on infusions of isotope tracers into animals.","title":"Reducing the Submission Barrier"},{"location":"About/TraceBase%20Design/#ensure-data-integrity-and-accuracy","text":"TraceBase monitors the data in its studies in such way that ensures accurate calculations, despite changes to the data as a study is compiled and/or added-to. If data changes can affect how other data calculations are made, calculations are re-done. For example, if a later serum sample is added, it represents a better steady state, so normalized labeling calculations are updated.","title":"Ensure Data Integrity and Accuracy"},{"location":"About/TraceBase%20Design/#enable-holistic-cross-experiment-analyses","text":"TraceBase breaks down common calculations (like FCirc) by labeled element, so that when tracers in different experiments have different numbers of labeled elements, their results can still be compared. This ensures consistent analysis of single experiments and enables holistic analysis across many experiments.","title":"Enable Holistic Cross-Experiment Analyses"},{"location":"About/TraceBase%20Design/#leverage-unanalyzed-raw-data","text":"Since LCMS data is expensive and produces more data than is necessary to answer the immediate scientific question at hand, much of its output goes unused, but if made accessible, can be applied to new scientific questions. By linking this raw data to its related experimental data, it can be searched, downloaded, and used in new studies.","title":"Leverage Unanalyzed Raw Data"},{"location":"About/TraceBase%20Design/#goals","text":"","title":"Goals"},{"location":"About/TraceBase%20Design/#end-user-goals","text":"TraceBase was developed with a primary focus the following development goals/features that were determined to be critical to mission success: Ease of Data Submission Robust Search Capabilities Data Accuracy Data Inter-comparability","title":"End User Goals"},{"location":"About/TraceBase%20Design/#maintenance-goals","text":"And more generally, we expect TraceBase to grow and evolve with ever increasing data, feature requests, data types, and changes to existing data. And we are aware that the curation of complex data can be a slow and difficult task. In order for people to install and maintain their own instance of TraceBase for themselves, overhead needed to be simple and minimized. Thus, this project was also tackled with these core principles in mind: Minimize Overhead Empower researchers to solve their own submission issues (e.g. the validation page) so that they don't have to wait through a time consuming curation process that involves a slow correspondence between the curator and the researcher as they work through issues in the data. By enabling researchers to solve these problems on their own through thoughtfully constructed and streamlined error messages, this reduces the maintenance efforts necessary to keep TraceBase working, shortens the time between submission and load, and reduces the overhead for maintainers to service study submissions. Automate the upkeep of calculated values when data changes. Adaptability TraceBase was made to be largely data-independent. E.g. Add a field to a table in the database and features like the list views, the loading scripts, or the advanced search either automatically adapt or only require relatively simple configuration changes. If data in a study is changed, removed, or added, key changes are monitored to trigger automatic updates of derived/calculated values. Scalability From a development standpoint, this is similar to the adaptability goal. From a database size standpoint, this means ensuring that performance doesn't wane as data is added.","title":"Maintenance Goals"},{"location":"About/Under%20the%20Hood/","text":"Under the Hood Given a development plan with the outlined goals , TraceBase contains a number of hidden features that end users don't usually see, but bring enormous value to the TraceBase codebase in terms of maintenance and future development efforts. Search Strategy The advanced search was designed to work on any database table field, and works across numerous tables to construct any desired hybrid representation using a simple configuration file. The current representations include, for example PeakGroups , PeakData , and FCirc . The search is performed independent of the configuration, which means that adding or changing fields/columns is a straightforward and trivial task. Any changes to the configuration are instantly searchable. This design choice is powerful in that the Advanced Search interface is inherently scalable and adaptable. New search formats can be created with minimal effort. Caching Strategy Caching of various expensive-to-calculate values in TraceBase improves performance. Typical caching strategies periodically refresh cached values based on a simple cached value expiration date. However, this strategy has drawbacks. For example, during times of low traffic, the periodic rebuilding of values is susceptible to significantly impacting the performance of a large search results download, for example. Additionally, if new data is loaded or changed, cached values can be incorrect until affected cached values are rebuilt, so a user may occasionally be presented with that inaccurate data. To solve both of these issues, TraceBase employs a caching strategy that sets monitors on specific data that, if it is ever changed, will trigger an immediate cache update of the affected values. That means that as long as a study doesn't change, performance will always be optimal, and the values always accurate. Dynamically Maintained Database Fields While the caching strategy above assures data accuracy and consistent performance, it has one big drawback: cached values are not searchable, which is for example, why you cannot search based on calculated FCirc values. It also has occasional maintenance tasks associated with it, such as generating those cached values after a load. An alternate strategy that improves upon the caching (but has not yet been fully integrated) achieves the same accuracy and performance as caching, but adds search/sort ability, is \"maintained database table fields\". Designed to be scalable and adaptable, it works much in the same way that the caching strategy does, as it triggers updates based on monitored database records, but comes with extra features: Multiple configurable modes that govern when to perform the updates. A mass autoupdate feature integrated with the loading scripts (to eliminate all associated overhead tasks). An extremely small code usage footprint that can Apply field maintenance to a field in a table with as few as 2 lines of code (when given a method to generate a field value), making it highly robust to change. Apply mass autoupdate functionality to load methods with a single line of code. Restricts maintained fields from manual updates to ensure accuracy and proper loading code development. Validation Interface As the most visible under-the-hood feature, the data submission interface's validation page uses the exact same code that is used to load the database on the backend. Designing the validation interface this way dramatically reduces future development efforts and ensures consistency between what users and curators see when working with load data. One typical pitfall of a large complex data loading (or validation) is that the loading process stops at the first error it encounters, thus a load attempt is made, an error occurs, the problem is fixed, then you start over and wait through an entire load attempt again only to encounter another error. This repeated start/stop is inefficient. It would be much more efficient to see all (or as many) of the errors that can be found and then fix them all in one go. Somtimes, subsequent errors are unavoidable, but handling them in groups would at least be a step forward. To reduce the repeated data debugging iterations, the data loading strategy was designed to gather as many errors and warnings as is possible in a single load/validation attempt. A number of components and fine-grained strategies coalesced to contribute to this overall strategy and are described below. Consolidated Input To empower users and expedite the submission building process, eliminating the time consuming back and forth with a curator when the researcher needs new/novel standardized data, all metadata including nomenclature-controlled data can be loaded using a single Excel spreadsheet. A one-stop shop for all data in TraceBase makes the compilation of study data as smooth as possible. An Excel spreadsheet was chosen as the vehicle for the data for a few reasons: Formulas could be used to provide drop-downs for data entry to: Ensure nomenclature consistency of both Uniform controlled terminology Consistent flexible terminology (via inter-sheet-populated drop-downs) Reducing the opportunities for user error Speed up manual data entry Microsoft Excel is Widely available Familiar to the researchers Standardized Loading All loading functionality is inherited from a common source that handles the minutiae of loading data so that individually developed loading scripts can focus on the data. Every loading script is reversible, using a strategy called atomic transactions. This is what allows the loading code to be able to be re-used for the validation page. I.e. the same loading code that a curator runs to load the database is the same code that researchers run on the validation page, so that the errors and warnings that the researcher sees while validating their data is exactly what the curator sees when they attempt to load the submission into the database. This makes it easy for researchers and curators to communicate about problems in the submission. Also, each load data type defines the structure of the associated sheet in the Study Doc (xlsx file), which is constructed dynamically. It uses the database table definitions to populate the column headers and datatype and is thus able to provide tips and information in the spreadsheet itself, while at the same time, making it robust to database changes. If a new database table or field is added or changed, updating the loading code is very straightforward and the Excel sheet update is automatic, making it fast and easy to adapt to change. Customized Errors and Warnings and Handling Database errors on the validation interface can be cryptic and hard to interpret to understand what change is needed to make in the data to fix it, even for developers, so particular attention was given to creating helpful errors for common or not-so-common but difficult-to-solve errors. Anytime an error was encountered, what was learned from the debug process was saved in a custom error that explains what the issue is and when possible, a suggestion is made as to the likely fix. These errors and warnings are aggregated and organized into categorical groups to streamline the submission building process. Plus, since repeated similar errors can hamper the process of fixing a submission, similar errors are collected and summarized in a master error, including the collation and summarization of similar errors from multiple load scripts. All of these error features come together to make it possible for researchers to be able to fix data issues on their own, ensuring that data is loaded as quickly as possible and that researchers, who are the closest to the data, feel empowered to handle things on their own, and retain a sense of ownership and control over their data, instead of waiting for a curator to address the issues in a fashion that impeeds the researcher's input. Template Creation and Autofill The most time consuming task in building a TraceBase submission is manual data entry. To boost the study submission building process, a custom template can be built by simply submitting all of the peak annotation files, along with optional mass spec metadata associated with each file. Samples and compounds will be parsed from those files and as much metadata as is possible will be automatically entered into a downloaded template. Standardized data from the database will be included as well. Additionally, every time a study doc is validated, any partially entered data will be propagated to other sheets. For example, if a novel tissue name is entered in the Samples sheet or a compound name is added to the Tracers sheet that does not exist in the corresponding Tissues or Compounds sheets, that name will be added to the corresponding sheet in the resulting download. Universal Peak Annotation Format TraceBase currently supports the following peak annotation file types (in Excel, tsv, and csv format): AccuCor IsoCor Iso-AutoCor However, TraceBase also supports its own internal format called UniCorr , which contains only the common portions of each of the above formats that are relevant to TraceBase. Each of those formats is automatically converted to the UniCorr format so that the same loading code is used for every peak annotation data source. Thus, to support a new data type, all that needs to be developed is a converter to the UniCorr format, which is faster to do and easier to maintain than dealing with a series of largely redundant loaders. This makes TraceBase more robust to change and scalable, as support for new data types/formats are requested. Architecture TraceBase is built on: Django PostgreSQL As a Django application, you can use any web server to deploy TraceBase that is compatible with: WSGI (Web Server Gateway Interface) ASGI (Asynchronous Server Gateway Interface) for asynchronous features like WebSockets TraceBase deployments have only been tested on Linux. Database While Django supports multiple database architectures, we selected PostgreSQL due to its robust features and reliability. While not extensively used, there are a few fields and functions used in TraceBase that are specific to PostgreSQL. For example, the positions of labels in a tracer compound are kept in a Postgres ArrayField and the format of the display of date-related fields is performed using Postgres-specific functions. One key PostgreSQL feature we rely on is its unique ability to perform DISTINCT ON queries. For these reasons, an installation of TraceBase using a database architecture other than PostgreSQL is not supported. Data Submission via Shared Drive Some of the data that TraceBase consumes can be rather large, even for a small study. Most of the bulk of that data comes from RAW and mzXML files . The data is too large to be submitted via a web form, so the transfer of study data is up to the maintainers of any instance of TraceBase. For the submission of all study data, we recommend setting up a shared drive of your preference that lab researchers own and can edit and organize however they wish. The location is described on the Upload Submit page, whose content (e.g. shared drive link) is controlled by environment variables (see TraceBase/.env.example ). Storage and Backup TraceBase has no built-in backup functionality. Each instance of TraceBase has its own archive (configured via an environment variable), but the archive is not a backup. The database creates and controls the archive. And all file download activity on the TraceBase site come directly from that archive. But note that backing up the archive does not backup the PostgreSQL database. In order for the database to function correctly, the archive and database need to be synchronized. We recommend backing up both the archive and the PostgreSQL database for a complete backup plan. Tracking data corrections and changes in the submission process is outside of that recommended backup plan, so it is up to the curators responsible for loading data to track any changes made to user submitted studies. For that, we recommend using a private GitHub repository to house the study doc, peak annotation files, and metadata documentation (such as a text document describing changes that the curator makes when resolving problems in a submission.) Deployment and Data Privacy TraceBase was designed to be lab-specific. It has no user-accounts and no data ownership control, so it is up to systems administrators to employ authentication processes to govern access. Anyone with access to TraceBase has access to all of its data. If you would like a subset of data to be public, you must setup and load publicly accessible studies on a separate public instance of TraceBase, with its own database and web server. For help on deploying TraceBase, reach out to the development Team . Maintenance All loading and database maintenance of TraceBase happens on the command-line utilizing django management commands. Those who install TraceBase are responsible for its maintenance and the curation process (with the assistance of a responsible party in the lab, familiar with the scientific data). For information on managing TraceBase, reach out to the development Team .","title":"Under the Hood"},{"location":"About/Under%20the%20Hood/#under-the-hood","text":"Given a development plan with the outlined goals , TraceBase contains a number of hidden features that end users don't usually see, but bring enormous value to the TraceBase codebase in terms of maintenance and future development efforts.","title":"Under the Hood"},{"location":"About/Under%20the%20Hood/#search-strategy","text":"The advanced search was designed to work on any database table field, and works across numerous tables to construct any desired hybrid representation using a simple configuration file. The current representations include, for example PeakGroups , PeakData , and FCirc . The search is performed independent of the configuration, which means that adding or changing fields/columns is a straightforward and trivial task. Any changes to the configuration are instantly searchable. This design choice is powerful in that the Advanced Search interface is inherently scalable and adaptable. New search formats can be created with minimal effort.","title":"Search Strategy"},{"location":"About/Under%20the%20Hood/#caching-strategy","text":"Caching of various expensive-to-calculate values in TraceBase improves performance. Typical caching strategies periodically refresh cached values based on a simple cached value expiration date. However, this strategy has drawbacks. For example, during times of low traffic, the periodic rebuilding of values is susceptible to significantly impacting the performance of a large search results download, for example. Additionally, if new data is loaded or changed, cached values can be incorrect until affected cached values are rebuilt, so a user may occasionally be presented with that inaccurate data. To solve both of these issues, TraceBase employs a caching strategy that sets monitors on specific data that, if it is ever changed, will trigger an immediate cache update of the affected values. That means that as long as a study doesn't change, performance will always be optimal, and the values always accurate.","title":"Caching Strategy"},{"location":"About/Under%20the%20Hood/#dynamically-maintained-database-fields","text":"While the caching strategy above assures data accuracy and consistent performance, it has one big drawback: cached values are not searchable, which is for example, why you cannot search based on calculated FCirc values. It also has occasional maintenance tasks associated with it, such as generating those cached values after a load. An alternate strategy that improves upon the caching (but has not yet been fully integrated) achieves the same accuracy and performance as caching, but adds search/sort ability, is \"maintained database table fields\". Designed to be scalable and adaptable, it works much in the same way that the caching strategy does, as it triggers updates based on monitored database records, but comes with extra features: Multiple configurable modes that govern when to perform the updates. A mass autoupdate feature integrated with the loading scripts (to eliminate all associated overhead tasks). An extremely small code usage footprint that can Apply field maintenance to a field in a table with as few as 2 lines of code (when given a method to generate a field value), making it highly robust to change. Apply mass autoupdate functionality to load methods with a single line of code. Restricts maintained fields from manual updates to ensure accuracy and proper loading code development.","title":"Dynamically Maintained Database Fields"},{"location":"About/Under%20the%20Hood/#validation-interface","text":"As the most visible under-the-hood feature, the data submission interface's validation page uses the exact same code that is used to load the database on the backend. Designing the validation interface this way dramatically reduces future development efforts and ensures consistency between what users and curators see when working with load data. One typical pitfall of a large complex data loading (or validation) is that the loading process stops at the first error it encounters, thus a load attempt is made, an error occurs, the problem is fixed, then you start over and wait through an entire load attempt again only to encounter another error. This repeated start/stop is inefficient. It would be much more efficient to see all (or as many) of the errors that can be found and then fix them all in one go. Somtimes, subsequent errors are unavoidable, but handling them in groups would at least be a step forward. To reduce the repeated data debugging iterations, the data loading strategy was designed to gather as many errors and warnings as is possible in a single load/validation attempt. A number of components and fine-grained strategies coalesced to contribute to this overall strategy and are described below.","title":"Validation Interface"},{"location":"About/Under%20the%20Hood/#consolidated-input","text":"To empower users and expedite the submission building process, eliminating the time consuming back and forth with a curator when the researcher needs new/novel standardized data, all metadata including nomenclature-controlled data can be loaded using a single Excel spreadsheet. A one-stop shop for all data in TraceBase makes the compilation of study data as smooth as possible. An Excel spreadsheet was chosen as the vehicle for the data for a few reasons: Formulas could be used to provide drop-downs for data entry to: Ensure nomenclature consistency of both Uniform controlled terminology Consistent flexible terminology (via inter-sheet-populated drop-downs) Reducing the opportunities for user error Speed up manual data entry Microsoft Excel is Widely available Familiar to the researchers","title":"Consolidated Input"},{"location":"About/Under%20the%20Hood/#standardized-loading","text":"All loading functionality is inherited from a common source that handles the minutiae of loading data so that individually developed loading scripts can focus on the data. Every loading script is reversible, using a strategy called atomic transactions. This is what allows the loading code to be able to be re-used for the validation page. I.e. the same loading code that a curator runs to load the database is the same code that researchers run on the validation page, so that the errors and warnings that the researcher sees while validating their data is exactly what the curator sees when they attempt to load the submission into the database. This makes it easy for researchers and curators to communicate about problems in the submission. Also, each load data type defines the structure of the associated sheet in the Study Doc (xlsx file), which is constructed dynamically. It uses the database table definitions to populate the column headers and datatype and is thus able to provide tips and information in the spreadsheet itself, while at the same time, making it robust to database changes. If a new database table or field is added or changed, updating the loading code is very straightforward and the Excel sheet update is automatic, making it fast and easy to adapt to change.","title":"Standardized Loading"},{"location":"About/Under%20the%20Hood/#customized-errors-and-warnings-and-handling","text":"Database errors on the validation interface can be cryptic and hard to interpret to understand what change is needed to make in the data to fix it, even for developers, so particular attention was given to creating helpful errors for common or not-so-common but difficult-to-solve errors. Anytime an error was encountered, what was learned from the debug process was saved in a custom error that explains what the issue is and when possible, a suggestion is made as to the likely fix. These errors and warnings are aggregated and organized into categorical groups to streamline the submission building process. Plus, since repeated similar errors can hamper the process of fixing a submission, similar errors are collected and summarized in a master error, including the collation and summarization of similar errors from multiple load scripts. All of these error features come together to make it possible for researchers to be able to fix data issues on their own, ensuring that data is loaded as quickly as possible and that researchers, who are the closest to the data, feel empowered to handle things on their own, and retain a sense of ownership and control over their data, instead of waiting for a curator to address the issues in a fashion that impeeds the researcher's input.","title":"Customized Errors and Warnings and Handling"},{"location":"About/Under%20the%20Hood/#template-creation-and-autofill","text":"The most time consuming task in building a TraceBase submission is manual data entry. To boost the study submission building process, a custom template can be built by simply submitting all of the peak annotation files, along with optional mass spec metadata associated with each file. Samples and compounds will be parsed from those files and as much metadata as is possible will be automatically entered into a downloaded template. Standardized data from the database will be included as well. Additionally, every time a study doc is validated, any partially entered data will be propagated to other sheets. For example, if a novel tissue name is entered in the Samples sheet or a compound name is added to the Tracers sheet that does not exist in the corresponding Tissues or Compounds sheets, that name will be added to the corresponding sheet in the resulting download.","title":"Template Creation and Autofill"},{"location":"About/Under%20the%20Hood/#universal-peak-annotation-format","text":"TraceBase currently supports the following peak annotation file types (in Excel, tsv, and csv format): AccuCor IsoCor Iso-AutoCor However, TraceBase also supports its own internal format called UniCorr , which contains only the common portions of each of the above formats that are relevant to TraceBase. Each of those formats is automatically converted to the UniCorr format so that the same loading code is used for every peak annotation data source. Thus, to support a new data type, all that needs to be developed is a converter to the UniCorr format, which is faster to do and easier to maintain than dealing with a series of largely redundant loaders. This makes TraceBase more robust to change and scalable, as support for new data types/formats are requested.","title":"Universal Peak Annotation Format"},{"location":"About/Under%20the%20Hood/#architecture","text":"TraceBase is built on: Django PostgreSQL As a Django application, you can use any web server to deploy TraceBase that is compatible with: WSGI (Web Server Gateway Interface) ASGI (Asynchronous Server Gateway Interface) for asynchronous features like WebSockets TraceBase deployments have only been tested on Linux.","title":"Architecture"},{"location":"About/Under%20the%20Hood/#database","text":"While Django supports multiple database architectures, we selected PostgreSQL due to its robust features and reliability. While not extensively used, there are a few fields and functions used in TraceBase that are specific to PostgreSQL. For example, the positions of labels in a tracer compound are kept in a Postgres ArrayField and the format of the display of date-related fields is performed using Postgres-specific functions. One key PostgreSQL feature we rely on is its unique ability to perform DISTINCT ON queries. For these reasons, an installation of TraceBase using a database architecture other than PostgreSQL is not supported.","title":"Database"},{"location":"About/Under%20the%20Hood/#data-submission-via-shared-drive","text":"Some of the data that TraceBase consumes can be rather large, even for a small study. Most of the bulk of that data comes from RAW and mzXML files . The data is too large to be submitted via a web form, so the transfer of study data is up to the maintainers of any instance of TraceBase. For the submission of all study data, we recommend setting up a shared drive of your preference that lab researchers own and can edit and organize however they wish. The location is described on the Upload Submit page, whose content (e.g. shared drive link) is controlled by environment variables (see TraceBase/.env.example ).","title":"Data Submission via Shared Drive"},{"location":"About/Under%20the%20Hood/#storage-and-backup","text":"TraceBase has no built-in backup functionality. Each instance of TraceBase has its own archive (configured via an environment variable), but the archive is not a backup. The database creates and controls the archive. And all file download activity on the TraceBase site come directly from that archive. But note that backing up the archive does not backup the PostgreSQL database. In order for the database to function correctly, the archive and database need to be synchronized. We recommend backing up both the archive and the PostgreSQL database for a complete backup plan. Tracking data corrections and changes in the submission process is outside of that recommended backup plan, so it is up to the curators responsible for loading data to track any changes made to user submitted studies. For that, we recommend using a private GitHub repository to house the study doc, peak annotation files, and metadata documentation (such as a text document describing changes that the curator makes when resolving problems in a submission.)","title":"Storage and Backup"},{"location":"About/Under%20the%20Hood/#deployment-and-data-privacy","text":"TraceBase was designed to be lab-specific. It has no user-accounts and no data ownership control, so it is up to systems administrators to employ authentication processes to govern access. Anyone with access to TraceBase has access to all of its data. If you would like a subset of data to be public, you must setup and load publicly accessible studies on a separate public instance of TraceBase, with its own database and web server. For help on deploying TraceBase, reach out to the development Team .","title":"Deployment and Data Privacy"},{"location":"About/Under%20the%20Hood/#maintenance","text":"All loading and database maintenance of TraceBase happens on the command-line utilizing django management commands. Those who install TraceBase are responsible for its maintenance and the curation process (with the assistance of a responsible party in the lab, familiar with the scientific data). For information on managing TraceBase, reach out to the development Team .","title":"Maintenance"},{"location":"Analysis/How%20to%20analyze%20data%20downloaded%20from%20TraceBase/","text":"How do I analyze data downloaded from TraceBase? See Format of Downloaded Data for details on the datatypes available. Analyze in Excel TSV files can be opened in Excel in multiple ways: Open a blank workbook, drag and drop the TSV file into the workbook. Excel > Open > Browse > select tsv file (you may need to enable \"all files\") > follow import wizard using \"Delimited\" settings Excel PivotTables are a powerful tool to quickly browse TraceBase data. To create a PivotTable, follow these recommended steps: Select all > copy and paste to a second worksheet In the new worksheet, delete the header rows so that only column names remain Select all > Insert > PivotChart > OK This generates a new worksheet with the PivotTable and PivotChart Select the fields you are interested in, drag and drop them into the 'Filters', 'Legend', 'Axis', or 'Values' areas. Notice how Excel PivotTables can be used to quickly reorganize data in a format amenable to copying and pasting into a GraphPad table. Analyze in R Downloaded data is formatted in a 'tidy' way where each observation is in one row. Examples FCirc barplot PeakGroup plots comparing normalized labeling from glucose across studies and serine labeling within and across studies.","title":"How do I analyze data downloaded from TraceBase?"},{"location":"Analysis/How%20to%20analyze%20data%20downloaded%20from%20TraceBase/#how-do-i-analyze-data-downloaded-from-tracebase","text":"See Format of Downloaded Data for details on the datatypes available.","title":"How do I analyze data downloaded from TraceBase?"},{"location":"Analysis/How%20to%20analyze%20data%20downloaded%20from%20TraceBase/#analyze-in-excel","text":"TSV files can be opened in Excel in multiple ways: Open a blank workbook, drag and drop the TSV file into the workbook. Excel > Open > Browse > select tsv file (you may need to enable \"all files\") > follow import wizard using \"Delimited\" settings Excel PivotTables are a powerful tool to quickly browse TraceBase data. To create a PivotTable, follow these recommended steps: Select all > copy and paste to a second worksheet In the new worksheet, delete the header rows so that only column names remain Select all > Insert > PivotChart > OK This generates a new worksheet with the PivotTable and PivotChart Select the fields you are interested in, drag and drop them into the 'Filters', 'Legend', 'Axis', or 'Values' areas. Notice how Excel PivotTables can be used to quickly reorganize data in a format amenable to copying and pasting into a GraphPad table.","title":"Analyze in Excel"},{"location":"Analysis/How%20to%20analyze%20data%20downloaded%20from%20TraceBase/#analyze-in-r","text":"Downloaded data is formatted in a 'tidy' way where each observation is in one row.","title":"Analyze in R"},{"location":"Analysis/How%20to%20analyze%20data%20downloaded%20from%20TraceBase/#examples","text":"FCirc barplot PeakGroup plots comparing normalized labeling from glucose across studies and serine labeling within and across studies.","title":"Examples"},{"location":"Download/How%20to%20Download/","text":"How to Download TraceBase data can be downloaded in three ways, using: The Download button in the top menu bar The TSV and mzXML buttons in the Advanced Search results The export menu above summary tables accessible via the left side bar All the table data in TraceBase can be downloaded by clicking the \"Download\" button in the top menu bar. This has strictly defined Format of Downloaded Data , which can be used for analysis outside of TraceBase. Data found in the Advanced Search page can also be downloaded in the same format by clicking the blue download button. Additionally, download of the source data (i.e. the mzXML files) can only be obtained from the Advanced Search page by clicking the blue mzXMLs download button. The mzXMLs download button on the advanced search downloads a ZIP archive containing a TSV file listing the mzXML files with associated metadata and mzXML files organized into subsirectories. See the ZIP format description for details. TraceBase metadata found in other pages (e.g. \"Studies\" table) can be downloaded in multiple formats by clicking the blue download button. These are typically sample information tables that do not contain the underlying PeakGroups, PeakData, or Fcirc data. For example, the Compounds table can be downloaded as a CSV, TXT, or XLS file.","title":"How to Download"},{"location":"Download/How%20to%20Download/#how-to-download","text":"TraceBase data can be downloaded in three ways, using: The Download button in the top menu bar The TSV and mzXML buttons in the Advanced Search results The export menu above summary tables accessible via the left side bar All the table data in TraceBase can be downloaded by clicking the \"Download\" button in the top menu bar. This has strictly defined Format of Downloaded Data , which can be used for analysis outside of TraceBase. Data found in the Advanced Search page can also be downloaded in the same format by clicking the blue download button. Additionally, download of the source data (i.e. the mzXML files) can only be obtained from the Advanced Search page by clicking the blue mzXMLs download button. The mzXMLs download button on the advanced search downloads a ZIP archive containing a TSV file listing the mzXML files with associated metadata and mzXML files organized into subsirectories. See the ZIP format description for details. TraceBase metadata found in other pages (e.g. \"Studies\" table) can be downloaded in multiple formats by clicking the blue download button. These are typically sample information tables that do not contain the underlying PeakGroups, PeakData, or Fcirc data. For example, the Compounds table can be downloaded as a CSV, TXT, or XLS file.","title":"How to Download"},{"location":"Download/About%20the%20Data/Format%20of%20Downloaded%20Data/","text":"Format of Downloaded Data Downloaded data is available in 2 formats: Table data in TSV format (Tab Separated Values) Compressed ZIP format containing mzXML files The data contained in the downloads are available in 5 basic varieties: From the Download menu at the top of every page, and from the TSV download button in the advanced search : PeakData (TSV) PeakGroups (TSV) FCirc (TSV) From the mzXMLs download button in the advanced search when performing PeakGroups and PeakData searches only : mzXMLs (ZIP of mzXML files and TSV containing metadata - See the ZIP heading, below) From summary tables, accessed via the links in the left sidebar^ See How to Download for more information on accessing these downloads. TSV The column inclusion of every TSV download is always the same, regardless of any column visibility settings that may have been applied on the Advanced Search page. This has a couple advantages: It makes downloaded data amenable to repeatable application of analysis tools outside of TraceBase. It makes it possible to share data between researchers in a consistent fashion. Three header rows containing download-related metadata are always included in any downloaded TSV data and are preceded by the comment character # . # Download Time # Advanced Search Query used to generate the downloaded data # Blank row Column Names data, where one row = 1 observation ZIP The mzXMLs download button on the advanced search downloads a ZIP archive containing a TSV file listing the mzXML files with associated metadata and mzXML files organized into the following directory structure: Mass Spec Run Date Mass Spec Operator Name Instrument Name Liquid Chromatography Protocol Name Polarity Scan Range *.mzXML mzXML metadata in TSV format Note that mzXML files are optional when submitting data to TraceBase, so not all rows in the PeakGroups and PeakData searches have them. Thus, mzXML downloads can contain a subset of the displayed rows: The ZIP file will include only those rows that have mzXML files available. mzXML The mzXML format is an external format described in this paper .","title":"Format of Downloaded Data"},{"location":"Download/About%20the%20Data/Format%20of%20Downloaded%20Data/#format-of-downloaded-data","text":"Downloaded data is available in 2 formats: Table data in TSV format (Tab Separated Values) Compressed ZIP format containing mzXML files The data contained in the downloads are available in 5 basic varieties: From the Download menu at the top of every page, and from the TSV download button in the advanced search : PeakData (TSV) PeakGroups (TSV) FCirc (TSV) From the mzXMLs download button in the advanced search when performing PeakGroups and PeakData searches only : mzXMLs (ZIP of mzXML files and TSV containing metadata - See the ZIP heading, below) From summary tables, accessed via the links in the left sidebar^ See How to Download for more information on accessing these downloads.","title":"Format of Downloaded Data"},{"location":"Download/About%20the%20Data/Format%20of%20Downloaded%20Data/#tsv","text":"The column inclusion of every TSV download is always the same, regardless of any column visibility settings that may have been applied on the Advanced Search page. This has a couple advantages: It makes downloaded data amenable to repeatable application of analysis tools outside of TraceBase. It makes it possible to share data between researchers in a consistent fashion. Three header rows containing download-related metadata are always included in any downloaded TSV data and are preceded by the comment character # . # Download Time # Advanced Search Query used to generate the downloaded data # Blank row Column Names data, where one row = 1 observation","title":"TSV"},{"location":"Download/About%20the%20Data/Format%20of%20Downloaded%20Data/#zip","text":"The mzXMLs download button on the advanced search downloads a ZIP archive containing a TSV file listing the mzXML files with associated metadata and mzXML files organized into the following directory structure: Mass Spec Run Date Mass Spec Operator Name Instrument Name Liquid Chromatography Protocol Name Polarity Scan Range *.mzXML mzXML metadata in TSV format Note that mzXML files are optional when submitting data to TraceBase, so not all rows in the PeakGroups and PeakData searches have them. Thus, mzXML downloads can contain a subset of the displayed rows: The ZIP file will include only those rows that have mzXML files available.","title":"ZIP"},{"location":"Download/About%20the%20Data/Format%20of%20Downloaded%20Data/#mzxml","text":"The mzXML format is an external format described in this paper .","title":"mzXML"},{"location":"Download/About%20the%20Data/Data%20Types/FCirc/","text":"FCirc FCirc data has a row for every combination of serum sample, tracer, and labeled element. Downloaded FCirc data has a standard format . See For Multiple Tracers or Labeled Elements . Definition Circulatory Flux (FCirc) is defined as the steady-state flux of metabolite between tissues and bloodstream(see Bartman, TeSlaa, and Rabinowitz ). Typically, FCirc is measured by infusing a labeled tracer to a steady state and measuring its dilution in the animal. The labeling of the tracer compound in serum and the known rate of tracer infusion are used to calculate FCirc. There are key assumptions of steady state and minimal perturbation in typical calculations of FCirc - see the above reference for details. Types of FCirc A researcher may wish to calculate multiple forms of FCirc depending on their experimental goals. These forms are based on whether the tracer infusion is included in the flux (Ra vs Rd, or \"rates of appearance versus disappearance\" of the fully labeled tracer) and whether the intact or atom-averaged flux is preferred. TraceBase calculates all of four of these and automates the standard calculations for FCirc without making any assumptions. (from Bartman, TeSlaa, and Rabinowitz) It's important to note however that serum samples are collected at multiple points before sacrifice and TraceBase calculates FCirc values for every serum/plasma sample, regardless of steady-state. So be aware that for that reason, TraceBase makes a distinction between FCirc values calculated from the last serum sample and all prior Serum Samples, but note that the best value may sometimes be the average of the last few, thus TraceBase presents FCirc calculations for every individual Serum Sample, regardless of timepoint. The FCirc view in the Advanced Search can be filtered for the \"last serum sample\" manually, as a row in the search or using the checkbox shortcut above the results: It's also important to note that TraceBase will report an Ra value in an infusion that was perturbative. This can still be a useful and valid measurement, but it should not be interpreted as the normal circulatory flux (FCirc). Finally, FCirc can either be normalized to animal body weight (reported as nmol/minute/gram body weight) or not (nmol/minute/animal). TraceBase calculates all of these so that the researcher can select the appropriate measurement. For Multiple Tracers or Labeled Elements An animal can be infused with multiple tracers and any tracer can have multiple different labeled elements. FCirc values are calculated separately for each labeled element in each tracer compound. This was a specific design choice made to enable comparison of tracer infusions across different studies. For example, FCirc-intact for carbon can be directly compared between an animal given U13C-alanine infusion and another animal given U13C-15N-alanine infusion. Note that for \"intact\" FCirc values, this is different than \"any transformation\". (e.g. the FCirc-intact for U13C-15N-alanine infusion counts U13C-alanine and U13C-15N-alanine as un-transformed). Calculations See FCirc Rates","title":"FCirc"},{"location":"Download/About%20the%20Data/Data%20Types/FCirc/#fcirc","text":"FCirc data has a row for every combination of serum sample, tracer, and labeled element. Downloaded FCirc data has a standard format . See For Multiple Tracers or Labeled Elements .","title":"FCirc"},{"location":"Download/About%20the%20Data/Data%20Types/FCirc/#definition","text":"Circulatory Flux (FCirc) is defined as the steady-state flux of metabolite between tissues and bloodstream(see Bartman, TeSlaa, and Rabinowitz ). Typically, FCirc is measured by infusing a labeled tracer to a steady state and measuring its dilution in the animal. The labeling of the tracer compound in serum and the known rate of tracer infusion are used to calculate FCirc. There are key assumptions of steady state and minimal perturbation in typical calculations of FCirc - see the above reference for details.","title":"Definition"},{"location":"Download/About%20the%20Data/Data%20Types/FCirc/#types-of-fcirc","text":"A researcher may wish to calculate multiple forms of FCirc depending on their experimental goals. These forms are based on whether the tracer infusion is included in the flux (Ra vs Rd, or \"rates of appearance versus disappearance\" of the fully labeled tracer) and whether the intact or atom-averaged flux is preferred. TraceBase calculates all of four of these and automates the standard calculations for FCirc without making any assumptions. (from Bartman, TeSlaa, and Rabinowitz) It's important to note however that serum samples are collected at multiple points before sacrifice and TraceBase calculates FCirc values for every serum/plasma sample, regardless of steady-state. So be aware that for that reason, TraceBase makes a distinction between FCirc values calculated from the last serum sample and all prior Serum Samples, but note that the best value may sometimes be the average of the last few, thus TraceBase presents FCirc calculations for every individual Serum Sample, regardless of timepoint. The FCirc view in the Advanced Search can be filtered for the \"last serum sample\" manually, as a row in the search or using the checkbox shortcut above the results: It's also important to note that TraceBase will report an Ra value in an infusion that was perturbative. This can still be a useful and valid measurement, but it should not be interpreted as the normal circulatory flux (FCirc). Finally, FCirc can either be normalized to animal body weight (reported as nmol/minute/gram body weight) or not (nmol/minute/animal). TraceBase calculates all of these so that the researcher can select the appropriate measurement.","title":"Types of FCirc"},{"location":"Download/About%20the%20Data/Data%20Types/FCirc/#for-multiple-tracers-or-labeled-elements","text":"An animal can be infused with multiple tracers and any tracer can have multiple different labeled elements. FCirc values are calculated separately for each labeled element in each tracer compound. This was a specific design choice made to enable comparison of tracer infusions across different studies. For example, FCirc-intact for carbon can be directly compared between an animal given U13C-alanine infusion and another animal given U13C-15N-alanine infusion. Note that for \"intact\" FCirc values, this is different than \"any transformation\". (e.g. the FCirc-intact for U13C-15N-alanine infusion counts U13C-alanine and U13C-15N-alanine as un-transformed).","title":"For Multiple Tracers or Labeled Elements"},{"location":"Download/About%20the%20Data/Data%20Types/FCirc/#calculations","text":"See FCirc Rates","title":"Calculations"},{"location":"Download/About%20the%20Data/Data%20Types/PeakData/","text":"PeakData PeakData is a table of TraceBase output analagous to an AccuCor input file labeled with sample information. It contains sample metadata and two basic values: Corrected Abundance - the abundance of each observed isotopomer for each compound (corrected for natural isotope abundance). (ion counts) Fraction - the simple fraction of this isotopomer vs all others for this observed compound. Downloaded PeakData has a standard format . PeakData is used to construct PeakGroups .","title":"PeakData"},{"location":"Download/About%20the%20Data/Data%20Types/PeakData/#peakdata","text":"PeakData is a table of TraceBase output analagous to an AccuCor input file labeled with sample information. It contains sample metadata and two basic values: Corrected Abundance - the abundance of each observed isotopomer for each compound (corrected for natural isotope abundance). (ion counts) Fraction - the simple fraction of this isotopomer vs all others for this observed compound. Downloaded PeakData has a standard format . PeakData is used to construct PeakGroups .","title":"PeakData"},{"location":"Download/About%20the%20Data/Data%20Types/PeakGroups/","text":"PeakGroups PeakGroups report the abundance and enrichment summated from each isotope associated with a measured compound (as listed in PeakData ). Thus, they report values for the entire \"group\" of peaks for each compound. PeakGroup values are almost always reported in a single row for each observed compound. Multiple PeakGroups rows are generated when the animal was infused with a tracer(s) that contains multiple labeled elements. For example, a mouse could be infused with a single amino acid labeled with both 13C and 15N. In this case, TraceBase reports a separate PeakGroup for each labeled element. This ensures that PeakGroups are always comparable between experiments, even when comparing a mouse infused with 13C-15N tracers to a mouse given only 13C. Any analysis that relies on considering both labeled elements simultaneously can be performed on PeakData . See this example for a measured compound with multiple labeled elements. Some key values reported in PeakGroups are: Total Abundance Enrichment Fraction Enrichment Abundance Normalized Labeling Downloaded PeakGroups data has a standard format .","title":"PeakGroups"},{"location":"Download/About%20the%20Data/Data%20Types/PeakGroups/#peakgroups","text":"PeakGroups report the abundance and enrichment summated from each isotope associated with a measured compound (as listed in PeakData ). Thus, they report values for the entire \"group\" of peaks for each compound. PeakGroup values are almost always reported in a single row for each observed compound. Multiple PeakGroups rows are generated when the animal was infused with a tracer(s) that contains multiple labeled elements. For example, a mouse could be infused with a single amino acid labeled with both 13C and 15N. In this case, TraceBase reports a separate PeakGroup for each labeled element. This ensures that PeakGroups are always comparable between experiments, even when comparing a mouse infused with 13C-15N tracers to a mouse given only 13C. Any analysis that relies on considering both labeled elements simultaneously can be performed on PeakData . See this example for a measured compound with multiple labeled elements. Some key values reported in PeakGroups are: Total Abundance Enrichment Fraction Enrichment Abundance Normalized Labeling Downloaded PeakGroups data has a standard format .","title":"PeakGroups"},{"location":"Upload/Errors%20and%20Warnings%20Reference/","text":"Errors and Warnings Reference The process of building a Study Submission happens on The Upload page. The Upload page has 2 tabs where you can encounter errors and/or warnings about your study submission: the Start and Validate tabs. This documentation is intended to serve as a reference to help researchers figure out how to address any errors or warnings (collectively: exceptions ) that can arise during the study submission building process. The TraceBase submission interface was built with researchers in mind, to empower users to be able to fix their data on their own, thereby speeding up the curation and loading process. It also is intended to give users a sense of ownership over their own data. Not every possible exception you can encounter is here. If you see an exception that is not listed here, leave it for the curator to solve and proceed with your upload. How to Use this Exception Lookup Reference If a custom exception listed here is encountered and its language is difficult to understand or more context is needed, look up the exception's name on this page to get hints on what the exception means, the context surrounding it, and potentially, a more in depth suggestion on how to fix the issues in the submission that lead to the error. If you have any suggestions on improving the wording in any exception you encounter in the submission process, please share feedback using the Feedback link at the top of the page where you encountered it. It is important to note that if you discover an overlooked peak annotation file, it should be submitted on the Start page with all other peak annotation files. That is the only way to identify some issues and it auto-fills multiple sheets with the data it extracts. The best strategy to save work already done up to that point (until the ability to add an existing stay doc on the start page for updating has been added), is to copy it over to a newly generated study doc template. Exceptions AnimalWithoutSamples ( AnimalsWithoutSamples ) An animal was detected without any samples associated with it in the Samples sheet. If the animal has samples in the Samples sheet, it is likely that the load of every sample associated with the animal encountered a separate error. Fixing those errors will resolve this warning. If however, there are no samples associated with the animal in the Samples sheet, it is likely that one or more peak annotation files associated with the animal was omitted when generating the Study Doc on the Upload Start page. In this case, to address the issue, it is recommended that you generate a new Study Doc from all peak annotation files combined and copy over all of your work from the current file, being careful to account for new ordered samples rows and all auto-filled sheets, like Peak Annotation File/Details and Compounds. This is recommended for a number of reasons that are covered elsewhere in the TraceBase documentation, but to summarize, the Upload Start page performs checks that are not performed elsewhere to find conflicting issues between peak annotation files, and it fills in all inter-sheet references (including hidden sheets and columns and peak group conflicts) that are laborious and error-prone to attempt manually. You may alternatively elect to add the forgotten peak annotation files in a separate submission after the current data has been loaded. You may keep the animal records and ignore this warning. The subsequent submission should include the complete animal record and associated study record. AnimalWithoutSerumSamples ( AnimalsWithoutSerumSamples ) An animal with a tracer infusion was detected without any serum samples associated with it in the Samples sheet. Serum samples are necessary in order for TraceBase to report FCirc calculations. If the animal has serum samples in the Samples sheet, it is possible that the load of every serum sample associated with the animal encountered a separate error. Fixing those errors will resolve this warning. If however, there are no serum samples associated with the animal in the Samples sheet, it is possible that a peak annotation file associated with the animal was omitted when generating the Study Doc on the Upload Start page. In this case, to address the issue, it is recommended that you generate a new Study Doc from all peak annotation files combined and copy over all of your work from the current file, being careful to account for new ordered samples rows and all auto-filled sheets, like Peak Annotation File/Details and Compounds. This is recommended for a number of reasons that are covered elsewhere in the TraceBase documentation, but to summarize, the Upload Start page performs checks that are not performed elsewhere to find conflicting issues between peak annotation files, and it fills in all inter-sheet references (including hidden sheets and columns and peak group conflicts) that are laborious and error-prone to attempt manually. You may alternatively elect to add the forgotten peak annotation files in a separate submission after the current data has been loaded. You may keep the animal records and ignore this warning. The subsequent submission should include the complete animal record and associated study record. AssumedMzxmlSampleMatch ( AssumedMzxmlSampleMatches ) The sample name embedded in the mzXML filename uniquely but imperfectly matches. This exception is only ever raised as a warning. Some peak abundance correction tools have certain character restrictions applied to sample headers. Some such restrictions are: Sample names cannot start with a number No dashes ( - ) allowed Length limits Those restritions are not the same as those of the mass spec instrument software or the tools that generate the mzXML files from RAW files. To get around those restrictions when they are encountered, the sample headers are often modified, but the mzXML filenames remain the original value. The loading code accommodates these peculiarities in order to be able to dynamically match the mzXML files with the corresponding peak annotation file sample header. This warning serves to simply be transparent about the association being automatically made, in order to catch any potential authentic mismatches. In every known case, this warning can be safely ignored. CompoundDoesNotExist The compound from the input file does not exist as either a primary compound name or synonym. There are 2 possible resolutions to this exception. Both involve updates to the Compounds sheet. Add the name as a synonym to an existing matching compound record. Add a new row to the Compounds sheet. In either case, if no matching compound exists in the Compounds sheet of the Study Doc, be sure to check TraceBase\u2019s Compounds page for a matching compound record (missing the current name as a synonym). The Upload Start page which generates the Study Doc populates the sheet with existing compounds from TraceBase whose formulas exactly match the formula obtained from the peak annotation file(s). But the formula derived from a peak annotation file may represent an ionized version of the compound record in TraceBase and thus, may not have been auto-added^, which is why the TraceBase site should be consulted. ^ Note that pre-populating the Compounds sheet with ionization variants is a proposed feature. See GitHub issue #1195 . CompoundExistsAsMismatchedSynonym A compound row was added to the Compounds sheet whose name exists as a synonym of another compound. This exception can arise automatically in the downloaded study doc template all on its own. TraceBase tries to add rows in the Compounds sheet for both compounds that already exist in TraceBase and novel compounds that do not yet exist in TraceBase. However, the compound name and formula must both match. When they do not match, a new row for a novel compound is added to the sheet, whether or not it creates a conflict. Such a conflict can arise due to the formula (derived from the peak annotation file) representing the ionized state of the compound, e.g. with 1 less or 1 more proton (H). A researcher can also cause this exception if they were to assign an HMDB ID that is already assigned to another compound existing in TraceBase. This can often happen after fixing the issue described above caused by an ionized formula, because TraceBase did not pre-fill the existing compound due to the formula difference. Lastly, this issue can arise if the conflicting compound record simply has a synonym associated with a compound record that is just wrong. To resolve this issue, either merge the compound records (editing them to fix the formula) or remove the synonym from the differing compound record so that peak groups (and tracers) are associated with the other compound record. If the compound from the peak annotation file(s) differs from the existing TraceBase compound record (e.g. different formula or HMDB ID), and the new record represents a distinctly different compound, reach out to the curators. The existing compound synonym may already be associated with a different compound in other studies, so either changes would need to be made to those other studies or the new study would need to be edited to distinguish the different compounds. Either way, a curator will need to coordinate the fix to ensure database-wide consistency. ConflictingValueError ( ConflictingValueErrors ) A conflicting value was encountered between previously loaded data and data being loaded from an input file. The loading code does not currently support database model record updates, but it does support adding data to an existing (and previously loaded) input file. Some of those additions can look like updates. Values on a previously loaded row in delimited columns like the Synonyms column in the Compounds sheet, can receive additional delimited values without error. But when values in a column (outside of columns containing delimited values) change in a file that has been previously loaded, you will get a ConflictingValueError exception. Note that formatted columns (e.g. an infusate name) may use delimiters, but are not treated as delimited columns. DateParseError Unable to parse date string. Date string not in the expected format. To resolve this exception, reformat the date using the format reported in the error. DefaultSequenceNotFound An MS Run Sequence record, expected to exist in the database, could not be found. Note that each sheet in the study doc is loaded independently, but the order in which they are loaded matters. For example, the Sequences sheet must be loaded before the Peak Annotation Files sheet. If there was an error when loading any rows on the Sequences sheet, this error would be encountered when attempting to find that sequence that was just loaded. Alternatively, this exception could have arisen because a Sequences sheet row was edited and values in the Default Sequence column in the Peak Annotation Files sheet (or other linking column) was not similarly updated and became unlinked. To resolve this exception, either the previous error must be fixed, or the Default Sequence column\u2019s value in the Peak Annotation Files sheet must be updated to match a row in the Sequence Name column in the Sequences sheet. DuplicateCompoundIsotopes Summary of DuplicateValues exceptions specific to the peak annotation files. It does not report the affected samples because all such errors always affect all samples, as peak annotation files typically have a column for each sample and a row for each compound\u2019s isotopic state. This error occurs when a compound\u2019s unique isotopic makeup appears in multiple rows. DuplicateHeaders Duplicate headers encountered in the input file. No duplicate headers are allowed. DuplicatePeakAnnotationFileName Multiple peak annotation files appear to have the same name. This exception is raised as an error on the Upload Start page only. To resolve this issue, either resubmit the files to exclude a truly duplicate file or rename one or both of the files to make their names unique. TraceBase requires that peak annotation filenames be globally unique to avoid ambiguities when sharing or referencing data files. DuplicatePeakGroupResolutions A row in the Peak Group Conflicts sheet is duplicated, and may contain conflicting resolutions. A row in the Peak Group Conflicts sheet is a duplicate if it contains the same (case insensitive) compound synonym (or / -delimited synonyms in any order) and the same^ samples. Refer to the documentation of the MultiplePeakGroupRepresentation exception for an explanation of multiple peak group representations and the Peak Group Conflicts sheet\u2019s involvement in resolving them. This exception is a warning when the resolution is the same on each row, but an error if the resolution (i.e. the selected representation - the peak annotation file) is different on each row. ^ The same samples means all samples. There is assumed to be no partial overlap between sample sets for the same compounds because the automated construction of this file separates them programmatically, so be careful editing the Peak Group Conflicts sheet, to make sure you do not introduce partial sample overlap between rows. DuplicateValues ( DuplicateValueErrors ) A duplicate value (or value combination) was found in an input file column (or columns) that requires unique values (or a unique combination of values with 1 or more other columns). Fixing this issue typically involves either deleting a duplicate row or editing the duplicate to make it unique. DurationError Invalid time duration value. Must be a number. To resolve this exception, edit the value to only be a number (no units symbol). EmptyColumns The data import encountered empty columns that were expected to have data. If there are sample columns present and all expected samples are accounted for, this will be a warning. If any of the expected sample columns are missing, this will be an error. In the warning case, this issue usually occurs when columns in Excel have been removed (or some unknown file manipulation has occurred). Whatever the case may be, the excel reader package that the loading code uses treats these empty columns as populated and names them with an arbitrary column header that starts with \u2018Unnamed: \u2018. In the error case, no sample headers were found. The file either contains no sample data and should be either repaired or excluded from loading, meaning that it will need to be removed from the Peak Annotation Details and Peak Annotation Files sheets. ExcelSheetNotFound Expected Excel file sheet not found. Ensure the correct file was supplied. FileFromInputNotFound A report of filenames obtained from an input file that could not be found. InfileDatabaseError An unexpected internal database error has been encountered when trying to load specific input from an input file. Exceptions like these are often hard to interpret, but the error was caught so that metadata about the related input could be provided, such as the file, sheet, row, and column values that were being loaded when the exception occurred. However, the cause could be hard to determine if it is related to previously loaded data that did not report an error. If the cause of the error is not easily discernible, feel free to leave it for a curator to figure out. These exceptions, when they occur on a somewhat regular basis, are figured out and the work in figuring out the cause and likely solution is saved in a custom exception class to make them easier to fix when they crop up again. InfusateParsingError An error was encountered when reading (parsing) your Infusate. The format or completeness of the infusate name must be manually corrected. Consult formatting guidelines in the Study Doc Infusate column header's comment. InvalidHeaders Unexpected headers encountered in the input file. No unexpected headers are allowed. InvalidMSRunName Unable to parse Sequence Name. Must be 4 comma-delimited values of Operator , LC Protocol , Instrument , and Date . InvalidPeakAnnotationFileFormat The peak annotation file format code is either unrecognized, or doesn\u2019t appear to match the auto-detected format of the supplied file. This exception is raised as an error on the Upload Start page only. To resolve this issue, select the format code using the dropdown menus in the File Format column of the Peak Annotation Files sheet in the Study Doc that corresponds to the reported file. Note that this error is more likely to occur when supplying CSV or TSV versions of peak annotation files. Automatic format determination is based on the Excel sheet and/or column names, and there is a lot of overlap in the column names of the different formats. IsotopeParsingError A regular expression or other parsing error was encountered when parsing an Isotope string. The formatting or completeness of the string must be manually fixed. Consult formatting guidelines (check the file\u2019s header comment). IsotopeStringDupe The formatted isotope string matches the same labeled element more than once. Strings defining isotopes are formatted with multiple element symbols paired with mass numbers concatenated together, followed by their dash-delimited counts in the same relative order. This error occurs when that isotope string matches the same element multiple times. Unfortunately, the only way to address this error would be to edit the peak annotation file to eliminate the duplicate. Example: C13N15C13-label-2-1-1 would match C13 twice, resulting in this error. MissingC12ParentPeak ( MissingC12ParentPeaks ) No C12 PARENT row was found for this compound in the peak annotation file. This exception occurs (as a warning) in 2 cases: The C12 PARENT peak exists, but was not picked in El-Maven. In this case, the best solution is to redo the peak annotation file starting from re-picked peaks from El-Maven that include the parent peak. Alternatively, the peak annotation file could be edited to remove all of that compound\u2019s peaks and a subsequent file could be loaded using the complete peak group. The C12 PARENT peak was below the detection threshold. In this case, the warning can be ignored and a 0-count will be assumed. MissingCompounds ( AllMissingCompounds ) Summary of compounds expected to exist in the database that were not found, while loading a single input file. MissingDataAdded Different sheets in the Study Doc reference other sheets. When a user enters data in one of those referential columns without using the supplied drop-down menu, the interface autofills the entered value into the related sheet, and reports this warning to transparently let the user know when repairs have occurred. Examples: Novel animal treatment: A novel animal treatment is entered into the Treatment column of the Animals sheet in the Study Doc, but not into the Treatments sheet. The TraceBase Upload Validate page will autofill the new treatment name in a new row added to the Treatments sheet of the Study Doc. Novel tissue: A novel tissue is entered into the Tissue column of the Samples sheet in the Study Doc, but not into the Tissues sheet. The TraceBase Upload Validate page will autofill the new tissue name in a new row added to the Tissues sheet of the Study Doc. This warning is an indicator that there is new data to potentially fill in in the mentioned sheet. MissingFCircCalculationValue ( MissingFCircCalculationValues ) A value, while not required, but necessary for (accurate) FCirc calculations, is missing. TraceBase does not require values for some database model fields because it supports animals that have not been infused with tracers, but when an animal does have a tracer infusion, certain values are necessary to accurately compute FCirc. If any of those values have not been filled in, and the animal has an infusate, you will see this exception as a warning. While your data can be loaded without these values, it is highly recommended that all such values be supplied in order to show FCirc records with calculated values and without associated errors or warnings. MissingSamples ( AllMissingSamples ) Summary of samples expected to exist in the database that were not found, while loading a single input file. MissingStudies ( AllMissingStudies ) Summary of studies expected to exist in the database that were not found, while loading a single input file. MissingTissues ( AllMissingTissues ) Summary of tissues expected to exist in the database that were not found, while loading a single input file. MissingTreatments ( AllMissingTreatments ) Summary of treatments expected to exist in the database that were not found, while loading a single input file. MixedPolarityErrors A mix of positive and negative polarities were found in an mzXML file. TraceBase does not support mixed polarity mzXML files. MultiplePeakAnnotationFileFormats The peak annotation file format could not be uniquely determined. This exception is raised as an error on the Upload Start page only. To resolve this issue, select the format code using the dropdown menus in the File Format column of the Peak Annotation Files sheet in the Study Doc that corresponds to the reported file. Note that this error is more likely to occur when supplying CSV or TSV versions of peak annotation files. Automatic format determination is based on the Excel sheet and/or column names, and there is a lot of overlap in the column names of the different formats. MultiplePeakGroupRepresentation ( MultiplePeakGroupRepresentations , AllMultiplePeakGroupRepresentations ) A peak group for a measured compound was picked multiple times and abundance corrected for 1 or more samples. TraceBase requires that the single best representation of a peak group compound be loaded for any one sample. Certain compounds can show up in both positive and negative scans, or in abutting scan ranges of the same polarity. While neither representation may be perfect, this simple requirement prevents inaccuracies or mistakes when using the data from TraceBase. Be wary however that your compound names in your peak annotation files are consistently named, because different synonyms are not detected as multiple peak group representations. This was a design decision to support succinct compound records while also supporting stereo-isomers. (Note: This distinction may go away in a future version of TraceBase, where synonyms are treated as the same compound in the context of peak groups.) Multiple peak group representations are only detected and reported on the Upload Start page, when the peak annotation files have their compounds and samples extracted. The multiple representations are recorded in an otherwise hidden sheet in the Study Doc named Peak Group Conflicts . For every row in the conflicts sheet, a peak annotation file drop-down is supplied to pick the file from which the peak group should be loaded. The same peak group compound from the other file(s) will be skipped. If you forgot a peak annotation file when generating your study doc template, start over with a complete generated Study Doc in order to catch these issues. But note, previously loaded Peak Group records are included in the detection of multiple representations, so alternatively, you may choose to add forgotten peak annotation files in a separate submission, keeping in mind that if you select the new peak annotation file as the peak group representation to load, the old previously loaded peak group will be deleted. Note that while manual editing of this sheet is discouraged, you can manually edit it as long as you preserve the hidden column. There is a hidden sample column containing delimited sample names. This column is required to accurately update all multiple representations. MultipleRecordsReturned The record search was expected to match exactly 1 record, but multiple records were found. This issue can arise for various reasons, but usually are related to conflicting sample naming conventions in the MS instrument that produces the RAW (and by implication, the mzXML) filenames, the abundance correction software that produces the peak annotation files (e.g. AccuCor), and TraceBase\u2019s unique biological sample naming constraints related to scan labels. TraceBase\u2019s attempts to map differing sample names in differing contexts to a single biological Sample record can yield this exception in one case when there exists a biological sample duplicate in the Study Doc\u2019s Samples sheet. This can happen due to the retention of scan labels in sample names when populating that sheet. So one possible resolution may be to merge duplicate sample records in the Samples sheet that happen to be different scans of the same biological sample. Another possibility could be misidentified \u201cscan labels\u201d that for example do not refer to polarity that were manually fixed, but which cause issues when trying to map mzXML filenames or peak annotation file sample headers to those Sample records. Each issue should be handled on a case-by-case basis. MultipleStudyDocVersions The study doc version could not be automatically narrowed down to a single matching version. This exception is accompanied by version determination metadata intended to highlight the supplied versus expected sheet and column names. Note however, that the only column names that will be reported as missing are required columns. Missing optional columns may be reported as \u201cunknown\u201d. TraceBase is backward compatible with older versions of the Study Doc and the Upload Validate page automatically detects the version based on sheet and column names. This exception could arise if various sheets have been removed, leaving sheets whose required column names do not differ between versions. There is currently no fix for this issue on the Upload Validate page and validation must happen on the command-line where a version number can be supplied. In this case, it is recommended that you skip validation and if you think the data is complete, move on to the Submit step. MzXMLSkipRowError ( AllMzXMLSkipRowErrors , AllMzXMLSkipRowErrors ) Could not determine which mzXML file loads to skip. When the mzXML file paths are not supplied and the number of mzXML files of the same name exceed number of skipped sample data headers in the peak annotation files (i.e. some of the same-named files are to be loaded and others are to be skipped), it may be impossible to tell which ones are which. The loading code can infer which are which if the files are divided into directories with their peak annotation files in which they were used, but if that cannot be figured out, this error will be raised. This can be resolved either by accounting for all mzXML files in the Peak Annotation Details sheet with their paths or by organizing the mzXML files with the peak annotation files they were used to produce. MzxmlColocatedWithMultipleAnnot mzXML files are in a directory that has multiple peak annotation files somewhere along its path. This exception has to do with determining which MS Run Sequence produced the mzXML file, which is dynamically determined when there are multiple sequences containing the same sample names. mzXML files are assigned an MS Run Sequence based on either the value in the Sequence column in the Peak Annotation Details sheet or (if that\u2019s empty), the Default Sequence defined in the Peak Annotation Files sheet and the Peak Annotation File Name column in the Peak Annotation Details sheet. If the default is used, this exception is a warning. However, if there is no default and no Sequence in the Peak Annotation Details sheet\u2019s Sequence column, the association is inferred by the directory structure. By travelling up the path from the mzXML file to the study directory, the first peak annotation file encountered is the one that is associated with the mzXML file. The simplest case is when the mzXML file is in the same directory as a single peak annotation file. The loading code only raises this as an error when the mzXML filename matches headers in multiple peak annotation files from different sequences and the specific one in which it was used was not explicitly assigned and it could not be inferred from the directory structure. The easiest fix is to put peak annotation files in a directory along with only the mzXML files that were used in its production. The more laborious (but more versatile) solution is to add the file path of every mzXML reported in the error to the Peak Annotation Details sheet along with the Sequence . MzxmlNotColocatedWithAnnot mzXML files are not in a directory under an unambiguously associated peak annotation file in which they were used. This exception has to do with determining which MS Run Sequence produced the mzXML file, which is dynamically determined when there are multiple sequences containing the same sample names. mzXML files are assigned an MS Run Sequence based on either the value in the Sequence column in the Peak Annotation Details sheet or (if that\u2019s empty), the Default Sequence defined in the Peak Annotation Files sheet and the Peak Annotation File Name column in the Peak Annotation Details sheet. If the default is used, this exception is a warning. However, if there is no default and no Sequence in the Peak Annotation Details sheet\u2019s Sequence column, the association is inferred by the directory structure. By travelling up the path from the mzXML file to the study directory, the first peak annotation file encountered is the one that is associated with the mzXML file. The simplest case is when the mzXML file is in the same directory as a single peak annotation file. The loading code only raises this as an error when the mzXML filename matches headers in multiple peak annotation files from different sequences and the specific one in which it was used was not explicitly assigned and it could not be inferred from the directory structure. The easiest fix is to put peak annotation files in a directory along with only the mzXML files that were used in its production. The more laborious (but more versatile) solution is to add the file path of every mzXML reported in the error to the Peak Annotation Details sheet along with the Sequence . MzxmlParseError The structure of the mzXML file is not as expected. An expected XML element or element attribute was not found. This could be due to an mzXML version change or a malformed or truncated file. TraceBase supports mzXML version 3.2. MzxmlSampleHeaderMismatch The mzXML filename does not match the sample header in the peak annotation file. This situation can arise either if the filename has been (knowingly) manually modified or when the mzXML File Name entered into the Peak Annotation Details sheet was mistakenly associated with the wrong Sample Data Header . This exception is only ever raised as a warning and is not inspected by curators, so confirm the association and either make a correction or ignore, if the association is correct. MzxmlSequenceUnknown ( AllMzxmlSequenceUnknown ) Unable to reliably match an mzXML file with an MSRunSequence. This exception is raised as a warning when the number of mzXML files with the same name are not all accounted for in the Peak Annotation Details sheet of the Study Doc. I.e. there are more mzXML files than peak annotation files with sample headers of this name. There are a number of ways this can happen: - The extra files are empty (and are reported in NoScans warnings). - A peak annotation file for the extras has not been included in the load. - The sample was re-analyzed in a subsequence MS Run because there was a problem with the first run. - There are 2 different biological samples with the same name and one is not included in the current submission. The first case is handled automatically and can be safely ignored. In fact, if it is any other case, an error would be raised after this warning, so in any case, this can be ignored, but if subsequent error does occur, this warning provides information that can help figure out the problem. In all of the other cases, there are 2 ways to resolve the warning: Add rows to the Peak Annotation Details sheet that account for all the files (adding \u2018skip\u2019 to the Skip column for any files that should be ignored). This is the preferred solution. Add the relative path from the study folder to the specific mzXML file in the existing mzXML File Name column (not including the study folder name). Despite the \u2018required columns\u2019 highlighted in blue indicating that \u2018Sample Name\u2019 and \u2018Sample Data Header\u2019 are required, when there is no associated peak annotation file, the mzXML File Name , Sequence , and Skip columns are all that\u2019s required. This is a special case. If all of the files are for the same MS Run, nothing further is needed. But if they are from different MS Runs, the mzXML File Name column must contain the relative path from the study folder to the mzXML file (not including the study folder name). NewResearcher ( NewResearchers , AllNewResearchers ) When an as-yet unencountered researcher name is encountered, this exception is raised as a warning to ensure it is not a spelling variant of an existing researcher name. NoSamples None of the samples in the indicated file, required to exist in the database, were found. Each sheet in an excel file is loaded independently and the loads proceed in the order of those dependencies. Errors like this usually only happen when related dependent data failed to load (due to some other error) and is evidenced by the fact that the indicated columns/rows have values. Fixing errors that appear above this will fix this error. For example, an Animal record must be loaded and exist in the database before a Sample record (which links to an Animal record) can be loaded. If the loading of the Animal record encountered an error, anytime a Sample record that links to that animal is loaded, this error will occur. The loading code tries to avoid these \u201credundant\u201d errors, but it also tries to gather as many errors as possible to reduce repeated validate/edit iterations. NoScans ( AllNoScans ) An mzXML file was encountered that contains no scan data. This exception is raised as a warning and can be safely ignored. Empty mzXML files are produced as a side-effect of the way they are produced. Such files could be excluded from a study submission, but are hard to distinguish without looking inside the same-named files. It is recommended that the files be left as-is. NoTracerLabeledElements ( NoTracerLabeledElementsError ) A compound in a peak annotation file was encountered that does not contain any of the labeled elements from any of the tracers. The purpose of a peak group (which the loading code populates) is to group a compound\u2019s peaks that result from various isotopic states (the incorporation of labeled elements from the tracer compounds). If the formula of the measured compound does not contain any of the elements that are labeled in the tracers, this suggests a potential problem, such as the animal\u2019s infusate from the Animals sheet was incorrectly selected or omits a tracer with labels that are in this compound. Resolutions to this issue can involve either updating the associated animal\u2019s infusate/tracers to include a tracer with the labeled elements it shares with this compound or simply ignoring this warning noting that the compound will not be loaded as a peak group.^ ^ TraceBase was not designed to support non-isotopic mass spectrometry data. Adding support for non-isotopic data is a planned feature. See GitHub issue #1192 . NoTracers An operation that requires an animal to have been infused with tracers encountered an animal that was not infused with tracers, such as FCirc calculations. This error occurs when an animal is associated with an infusate record, but that infusate is not linked to any tracers. This is likely because an error occurred during infusate/tracer loading and arises when validating a serum sample. ObservedIsotopeParsingError A regular expression or other parsing error was encountered when parsing an Isotope observation string. The formatting or completeness of the string must be manually fixed. Consult formatting guidelines (check the file\u2019s header comment). ObservedIsotopeUnbalancedError The number of elements, mass numbers, and counts parsed from the isotope string differ. A single (fully labeled) isotope must include each value in the order of mass number, element symbol, and count. E.g. 13C5 means that there are 5 heavy carbons of mass number 13 in a compound. Examples: 13C would cause this error because there is no count. C5 would cause this error because there is no mass number. 135 would cause this error because there is no element and there\u2019s no way to tell where the count begins. PossibleDuplicateSample ( PossibleDuplicateSamples ) Multiple peak annotation files have an identical sample header, but are associated with distinctly different TraceBase biological Sample records. This exception is always raised as a warning as a check to ensure that the distinction is intentional, and not just a copy/paste error. If there do exist different biological samples that happen to have the exact same name, this warning can be safely ignored. If they are the same biological sample, the Sample Name column in the Peak Annotation Details sheet must be updated. You may also need to delete or update the associated row in the Samples sheet, if no other verified rows in the Peak Annotation Details sheet refers to it. ProhibitedCompoundName ( ProhibitedCompoundNames ) The compound name or synonym contains disallowed characters that were replaced with similar allowed characters. This exception is always raised as a warning. Disallowed characters are either compound name/synonym delimiters or Peak Group name delimiters that are used during loading. While the offending characters are automatically replaced, you may elect to use an alternate character. If you go with the automatic replacement, nothing further needs to be done, but if you edit the values in the Study Doc, but be sure to make the edit everywhere, including the Compounds sheet, the Tracers / Infusates sheet (and in the Infusate column in the Animals sheet), the Peak Group Conflicts sheet. Also, all peak annotation files will need to be updated as well. RecordDoesNotExist The expected record from the indicated database model was not found. ReplacingPeakGroupRepresentation A previously loaded peak group from a previous submission (for a measured compound was picked multiple times and abundance corrected for 1 or more samples) will be replaced with a new representation from a new peak annotation file that includes this compound for the same 1 or more samples. Refer to the documentation of the MultiplePeakGroupRepresentation exception for an explanation of multiple peak group representations and TraceBase\u2019s requirements related to them. This exception is always raised as a warning, to be transparent about the replacement of previously loaded Peak Group records. By selecting the new peak annotation file as the peak group representation to load in the Peak Group Conflicts sheet, this warning informs you that an old previously loaded peak group will be deleted. This exception is expected when a selection has been made that supercedes a selection made in a previous load relating to the same samples and compound. RequiredColumnValue ( RequiredColumnValues ) A value, required to exist in the input table, was not supplied. RequiredHeadersError Supplies a list of missing required column headers in the input file. RequiredValueError ( RequiredValueErrors ) A value, required to exist in the database, was found to be missing. Each sheet in an excel file is loaded independently and the loads proceed in the order of those dependencies. Errors like this usually only happen when related dependent data failed to load (due to some other error) and is evidenced by the fact that the indicated columns/rows have values. Fixing errors that appear above this will fix this error. For example, an Animal record must be loaded and exist in the database before a Sample record (which links to an Animal record) can be loaded. If the loading of the Animal record encountered an error, anytime a Sample record that links to that animal is loaded, this error will occur. The loading code tries to avoid these \u201credundant\u201d errors, but it also tries to gather as many errors as possible to reduce repeated validate/edit iterations. SynonymExistsAsMismatchedCompound A compound row was added to the Compounds sheet whose synonym exists as a primary name of another compound. This exception can arise automatically in the downloaded study doc template all on its own. TraceBase tries to add rows in the Compounds sheet for both compounds that already exist in TraceBase and novel compounds that do not yet exist in TraceBase. However, the compound name and formula must both match. When they do not match, a new row for a novel compound is added to the sheet, whether or not it creates a conflict. Such a conflict can arise due to the formula (derived from the peak annotation file) representing the ionized state of the compound, e.g. with 1 less or 1 more proton (H). A researcher can also cause this exception if they were to assign an HMDB ID that is already assigned to another compound existing in TraceBase. This can often happen after fixing the issue described above caused by an ionized formula, because TraceBase did not pre-fill the existing compound due to the formula difference. Lastly, this issue can arise if the conflicting compound record simply has a synonym associated with a compound record that is just wrong. To resolve this issue, either merge the compound records (editing them to fix the formula) or remove the synonym from the differing compound record so that peak groups (and tracers) are associated with the other compound record. If the compound from the peak annotation file(s) differs from the existing TraceBase compound record (e.g. different formula or HMDB ID), and the new record represents a distinctly different compound, reach out to the curators. The existing compound name may already be associated with a different compound in other studies, so either changes would need to be made to those other studies or the new study would need to be edited to distinguish the different compounds. Either way, a curator will need to coordinate the fix to ensure database-wide consistency. TracerCompoundNameInconsistent The compound name used in the tracer name is not the primary compound name. TraceBase requires that tracer names use the primary compound name so that searches yield complete and consistent results. It automatically changes the tracer name to use the primary compound and raises this exception as a warning, to be transparent about the modification of the user-entered compound name. If the established primary compound name is problematic, reach out to a TraceBase curator to propose a change of a compound\u2019s primary name. Note that such a change will affect all studies that use this tracer (if any). TracerGroupsInconsistent An infusate is either a duplicate or exists with a conflicting tracer group name. A duplicate infusate can trigger this exception due to concentration value precision. In other words, it\u2019s not technically a true duplicate, but is treated as such due to the fact that concentration values may exceed a precision threshold. Excel and the underlying Postgres database have slightly different levels of precision. TraceBase saves what you enter, but when it is entered into the database, the precision may change and end up matching another record. It\u2019s also important to note that while TraceBase saves the value you enter, it searches for infusates using significant figures, which can also lead to a duplicate exception. See the tracer column headers in the Infusates sheet in the Study Doc for details of what significant figures are used. The resolution in the duplicate case is to use existing records whose concentration values insignificantly differ. The other reason this exception may be raised could be due to nomenclature control over the Tracer Group Name , which must be the same across all infusates that that include the same tracer compounds, regardless of concentration and isotopic inclusion. If the tracer group name differs, you must use the pre-existing group name already in TraceBase. If the group name is problematic, reach out to a TraceBase curator to fix it. TracerParsingError A regular expression or other parsing error was encountered when parsing a Tracer string. The formatting or completeness of the string must be manually fixed. Consult formatting guidelines (check the file\u2019s header comment). UnexpectedInput The value in the indicated column is optional, but is required to be supplied with another neighboring column value, that was found to be absent. This exception can be resolved either by supplying the neighboring column\u2019s value or by removing this column\u2019s value. Example: If an infusion rate is supplied, but there was no infusate supplied, the infusion rate will cause an UnexpectedInput exception, because an infusion rate without an infusate makes no sense. UnexpectedLabel ( UnexpectedLabels , AllUnexpectedLabels ) An isotope label, e.g. nitrogen ( N ) was detected in a measured compound, but that labeled element was not in any of the tracers. This is reported as a warning to suggest that there could be contamination or the wrong infusate was selected for an animal, but this is often the result of naturally occurring isotopes and can be ignored. UnexpectedSamples Sample headers found in a peak annotations file were not in the Study Doc\u2019s Peak Annotation Details sheet. This could either be due to a sample header omission in the Peak Annotation Details sheet or due to the wrong peak annotation file being associated with one or more sample headers in the Peak Annotation Details sheet. UnknownHeader A column header was encountered that is not a part of the file specification. UnknownHeaders A list of column headers encountered that are not a part of the file specification. UnknownPeakAnnotationFileFormat The peak annotation file format is unrecognized. This exception is raised as an error on the Upload Start page only. To resolve this issue, select the format code using the dropdown menus in the File Format column of the Peak Annotation Files sheet in the Study Doc that corresponds to the reported file. If none of the supported formats in the dropdown match the file format, reach out to the TraceBase team to request adding support for the new format. In the meantime, it is recommended that you use one of the supported natural abundance correction tools to regenerate the file in a TraceBase-compatible format. UnknownStudyDocVersion The study doc version could not be automatically determined. This exception is accompanied by version determination metadata intended to highlight the supplied versus expected sheet and column names. Note however, that the only column names that will be reported as missing are required columns. Missing optional columns may be reported as \u201cunknown\u201d. TraceBase is backward compatible with older versions of the Study Doc and the Upload Validate page automatically detects the version based on sheet and column names. This exception could arise if the sheet names and/or column names were modified. Try generating a new study doc from the Upload Start page and compare the sheet and column names to ensure they were not inadvertently altered. If there are differences, fix them so that the version can be identified by the Upload Validate interface. UnmatchedBlankMzXML ( UnmatchedBlankMzXMLs ) This exception is the same as UnmatchedMzXML , but is a warning because the files have \u201cblank\u201d in their sample names and are assumed to have been intentionally excluded. UnskippedBlanks A sample, slated for loading, appears to be a blank. Loading of blank samples should be skipped. Blank samples should be entirely excluded from the Samples sheet, but listed in the Peak Annotation Details sheet with a non-empty value in the Skip column. This tells the peak annotations loader that loads the peak annotations file to ignore the sample column with this sample name. Blank samples are automatically skipped in the Upload Start page\u2019s Study Doc download, based on the sample name containing \u201cblank\u201d in its name. About This Document This document is partially auto-generated using docstrings from the traceBase codebase. The content under Errors and Warnings (Exceptions) Reference is completely auto-generated, with minor edits. Consult the TraceBaseDocs/README.md file before making any updates.","title":"Errors and Warnings Reference"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#errors-and-warnings-reference","text":"The process of building a Study Submission happens on The Upload page. The Upload page has 2 tabs where you can encounter errors and/or warnings about your study submission: the Start and Validate tabs. This documentation is intended to serve as a reference to help researchers figure out how to address any errors or warnings (collectively: exceptions ) that can arise during the study submission building process. The TraceBase submission interface was built with researchers in mind, to empower users to be able to fix their data on their own, thereby speeding up the curation and loading process. It also is intended to give users a sense of ownership over their own data. Not every possible exception you can encounter is here. If you see an exception that is not listed here, leave it for the curator to solve and proceed with your upload.","title":"Errors and Warnings Reference"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#how-to-use-this-exception-lookup-reference","text":"If a custom exception listed here is encountered and its language is difficult to understand or more context is needed, look up the exception's name on this page to get hints on what the exception means, the context surrounding it, and potentially, a more in depth suggestion on how to fix the issues in the submission that lead to the error. If you have any suggestions on improving the wording in any exception you encounter in the submission process, please share feedback using the Feedback link at the top of the page where you encountered it. It is important to note that if you discover an overlooked peak annotation file, it should be submitted on the Start page with all other peak annotation files. That is the only way to identify some issues and it auto-fills multiple sheets with the data it extracts. The best strategy to save work already done up to that point (until the ability to add an existing stay doc on the start page for updating has been added), is to copy it over to a newly generated study doc template.","title":"How to Use this Exception Lookup Reference"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#exceptions","text":"","title":"Exceptions"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#animalwithoutsamples-animalswithoutsamples","text":"An animal was detected without any samples associated with it in the Samples sheet. If the animal has samples in the Samples sheet, it is likely that the load of every sample associated with the animal encountered a separate error. Fixing those errors will resolve this warning. If however, there are no samples associated with the animal in the Samples sheet, it is likely that one or more peak annotation files associated with the animal was omitted when generating the Study Doc on the Upload Start page. In this case, to address the issue, it is recommended that you generate a new Study Doc from all peak annotation files combined and copy over all of your work from the current file, being careful to account for new ordered samples rows and all auto-filled sheets, like Peak Annotation File/Details and Compounds. This is recommended for a number of reasons that are covered elsewhere in the TraceBase documentation, but to summarize, the Upload Start page performs checks that are not performed elsewhere to find conflicting issues between peak annotation files, and it fills in all inter-sheet references (including hidden sheets and columns and peak group conflicts) that are laborious and error-prone to attempt manually. You may alternatively elect to add the forgotten peak annotation files in a separate submission after the current data has been loaded. You may keep the animal records and ignore this warning. The subsequent submission should include the complete animal record and associated study record.","title":"AnimalWithoutSamples (AnimalsWithoutSamples)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#animalwithoutserumsamples-animalswithoutserumsamples","text":"An animal with a tracer infusion was detected without any serum samples associated with it in the Samples sheet. Serum samples are necessary in order for TraceBase to report FCirc calculations. If the animal has serum samples in the Samples sheet, it is possible that the load of every serum sample associated with the animal encountered a separate error. Fixing those errors will resolve this warning. If however, there are no serum samples associated with the animal in the Samples sheet, it is possible that a peak annotation file associated with the animal was omitted when generating the Study Doc on the Upload Start page. In this case, to address the issue, it is recommended that you generate a new Study Doc from all peak annotation files combined and copy over all of your work from the current file, being careful to account for new ordered samples rows and all auto-filled sheets, like Peak Annotation File/Details and Compounds. This is recommended for a number of reasons that are covered elsewhere in the TraceBase documentation, but to summarize, the Upload Start page performs checks that are not performed elsewhere to find conflicting issues between peak annotation files, and it fills in all inter-sheet references (including hidden sheets and columns and peak group conflicts) that are laborious and error-prone to attempt manually. You may alternatively elect to add the forgotten peak annotation files in a separate submission after the current data has been loaded. You may keep the animal records and ignore this warning. The subsequent submission should include the complete animal record and associated study record.","title":"AnimalWithoutSerumSamples (AnimalsWithoutSerumSamples)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#assumedmzxmlsamplematch-assumedmzxmlsamplematches","text":"The sample name embedded in the mzXML filename uniquely but imperfectly matches. This exception is only ever raised as a warning. Some peak abundance correction tools have certain character restrictions applied to sample headers. Some such restrictions are: Sample names cannot start with a number No dashes ( - ) allowed Length limits Those restritions are not the same as those of the mass spec instrument software or the tools that generate the mzXML files from RAW files. To get around those restrictions when they are encountered, the sample headers are often modified, but the mzXML filenames remain the original value. The loading code accommodates these peculiarities in order to be able to dynamically match the mzXML files with the corresponding peak annotation file sample header. This warning serves to simply be transparent about the association being automatically made, in order to catch any potential authentic mismatches. In every known case, this warning can be safely ignored.","title":"AssumedMzxmlSampleMatch (AssumedMzxmlSampleMatches)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#compounddoesnotexist","text":"The compound from the input file does not exist as either a primary compound name or synonym. There are 2 possible resolutions to this exception. Both involve updates to the Compounds sheet. Add the name as a synonym to an existing matching compound record. Add a new row to the Compounds sheet. In either case, if no matching compound exists in the Compounds sheet of the Study Doc, be sure to check TraceBase\u2019s Compounds page for a matching compound record (missing the current name as a synonym). The Upload Start page which generates the Study Doc populates the sheet with existing compounds from TraceBase whose formulas exactly match the formula obtained from the peak annotation file(s). But the formula derived from a peak annotation file may represent an ionized version of the compound record in TraceBase and thus, may not have been auto-added^, which is why the TraceBase site should be consulted. ^ Note that pre-populating the Compounds sheet with ionization variants is a proposed feature. See GitHub issue #1195 .","title":"CompoundDoesNotExist"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#compoundexistsasmismatchedsynonym","text":"A compound row was added to the Compounds sheet whose name exists as a synonym of another compound. This exception can arise automatically in the downloaded study doc template all on its own. TraceBase tries to add rows in the Compounds sheet for both compounds that already exist in TraceBase and novel compounds that do not yet exist in TraceBase. However, the compound name and formula must both match. When they do not match, a new row for a novel compound is added to the sheet, whether or not it creates a conflict. Such a conflict can arise due to the formula (derived from the peak annotation file) representing the ionized state of the compound, e.g. with 1 less or 1 more proton (H). A researcher can also cause this exception if they were to assign an HMDB ID that is already assigned to another compound existing in TraceBase. This can often happen after fixing the issue described above caused by an ionized formula, because TraceBase did not pre-fill the existing compound due to the formula difference. Lastly, this issue can arise if the conflicting compound record simply has a synonym associated with a compound record that is just wrong. To resolve this issue, either merge the compound records (editing them to fix the formula) or remove the synonym from the differing compound record so that peak groups (and tracers) are associated with the other compound record. If the compound from the peak annotation file(s) differs from the existing TraceBase compound record (e.g. different formula or HMDB ID), and the new record represents a distinctly different compound, reach out to the curators. The existing compound synonym may already be associated with a different compound in other studies, so either changes would need to be made to those other studies or the new study would need to be edited to distinguish the different compounds. Either way, a curator will need to coordinate the fix to ensure database-wide consistency.","title":"CompoundExistsAsMismatchedSynonym"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#conflictingvalueerror-conflictingvalueerrors","text":"A conflicting value was encountered between previously loaded data and data being loaded from an input file. The loading code does not currently support database model record updates, but it does support adding data to an existing (and previously loaded) input file. Some of those additions can look like updates. Values on a previously loaded row in delimited columns like the Synonyms column in the Compounds sheet, can receive additional delimited values without error. But when values in a column (outside of columns containing delimited values) change in a file that has been previously loaded, you will get a ConflictingValueError exception. Note that formatted columns (e.g. an infusate name) may use delimiters, but are not treated as delimited columns.","title":"ConflictingValueError (ConflictingValueErrors)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#dateparseerror","text":"Unable to parse date string. Date string not in the expected format. To resolve this exception, reformat the date using the format reported in the error.","title":"DateParseError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#defaultsequencenotfound","text":"An MS Run Sequence record, expected to exist in the database, could not be found. Note that each sheet in the study doc is loaded independently, but the order in which they are loaded matters. For example, the Sequences sheet must be loaded before the Peak Annotation Files sheet. If there was an error when loading any rows on the Sequences sheet, this error would be encountered when attempting to find that sequence that was just loaded. Alternatively, this exception could have arisen because a Sequences sheet row was edited and values in the Default Sequence column in the Peak Annotation Files sheet (or other linking column) was not similarly updated and became unlinked. To resolve this exception, either the previous error must be fixed, or the Default Sequence column\u2019s value in the Peak Annotation Files sheet must be updated to match a row in the Sequence Name column in the Sequences sheet.","title":"DefaultSequenceNotFound"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#duplicatecompoundisotopes","text":"Summary of DuplicateValues exceptions specific to the peak annotation files. It does not report the affected samples because all such errors always affect all samples, as peak annotation files typically have a column for each sample and a row for each compound\u2019s isotopic state. This error occurs when a compound\u2019s unique isotopic makeup appears in multiple rows.","title":"DuplicateCompoundIsotopes"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#duplicateheaders","text":"Duplicate headers encountered in the input file. No duplicate headers are allowed.","title":"DuplicateHeaders"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#duplicatepeakannotationfilename","text":"Multiple peak annotation files appear to have the same name. This exception is raised as an error on the Upload Start page only. To resolve this issue, either resubmit the files to exclude a truly duplicate file or rename one or both of the files to make their names unique. TraceBase requires that peak annotation filenames be globally unique to avoid ambiguities when sharing or referencing data files.","title":"DuplicatePeakAnnotationFileName"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#duplicatepeakgroupresolutions","text":"A row in the Peak Group Conflicts sheet is duplicated, and may contain conflicting resolutions. A row in the Peak Group Conflicts sheet is a duplicate if it contains the same (case insensitive) compound synonym (or / -delimited synonyms in any order) and the same^ samples. Refer to the documentation of the MultiplePeakGroupRepresentation exception for an explanation of multiple peak group representations and the Peak Group Conflicts sheet\u2019s involvement in resolving them. This exception is a warning when the resolution is the same on each row, but an error if the resolution (i.e. the selected representation - the peak annotation file) is different on each row. ^ The same samples means all samples. There is assumed to be no partial overlap between sample sets for the same compounds because the automated construction of this file separates them programmatically, so be careful editing the Peak Group Conflicts sheet, to make sure you do not introduce partial sample overlap between rows.","title":"DuplicatePeakGroupResolutions"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#duplicatevalues-duplicatevalueerrors","text":"A duplicate value (or value combination) was found in an input file column (or columns) that requires unique values (or a unique combination of values with 1 or more other columns). Fixing this issue typically involves either deleting a duplicate row or editing the duplicate to make it unique.","title":"DuplicateValues (DuplicateValueErrors)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#durationerror","text":"Invalid time duration value. Must be a number. To resolve this exception, edit the value to only be a number (no units symbol).","title":"DurationError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#emptycolumns","text":"The data import encountered empty columns that were expected to have data. If there are sample columns present and all expected samples are accounted for, this will be a warning. If any of the expected sample columns are missing, this will be an error. In the warning case, this issue usually occurs when columns in Excel have been removed (or some unknown file manipulation has occurred). Whatever the case may be, the excel reader package that the loading code uses treats these empty columns as populated and names them with an arbitrary column header that starts with \u2018Unnamed: \u2018. In the error case, no sample headers were found. The file either contains no sample data and should be either repaired or excluded from loading, meaning that it will need to be removed from the Peak Annotation Details and Peak Annotation Files sheets.","title":"EmptyColumns"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#excelsheetnotfound","text":"Expected Excel file sheet not found. Ensure the correct file was supplied.","title":"ExcelSheetNotFound"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#filefrominputnotfound","text":"A report of filenames obtained from an input file that could not be found.","title":"FileFromInputNotFound"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#infiledatabaseerror","text":"An unexpected internal database error has been encountered when trying to load specific input from an input file. Exceptions like these are often hard to interpret, but the error was caught so that metadata about the related input could be provided, such as the file, sheet, row, and column values that were being loaded when the exception occurred. However, the cause could be hard to determine if it is related to previously loaded data that did not report an error. If the cause of the error is not easily discernible, feel free to leave it for a curator to figure out. These exceptions, when they occur on a somewhat regular basis, are figured out and the work in figuring out the cause and likely solution is saved in a custom exception class to make them easier to fix when they crop up again.","title":"InfileDatabaseError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#infusateparsingerror","text":"An error was encountered when reading (parsing) your Infusate. The format or completeness of the infusate name must be manually corrected. Consult formatting guidelines in the Study Doc Infusate column header's comment.","title":"InfusateParsingError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#invalidheaders","text":"Unexpected headers encountered in the input file. No unexpected headers are allowed.","title":"InvalidHeaders"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#invalidmsrunname","text":"Unable to parse Sequence Name. Must be 4 comma-delimited values of Operator , LC Protocol , Instrument , and Date .","title":"InvalidMSRunName"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#invalidpeakannotationfileformat","text":"The peak annotation file format code is either unrecognized, or doesn\u2019t appear to match the auto-detected format of the supplied file. This exception is raised as an error on the Upload Start page only. To resolve this issue, select the format code using the dropdown menus in the File Format column of the Peak Annotation Files sheet in the Study Doc that corresponds to the reported file. Note that this error is more likely to occur when supplying CSV or TSV versions of peak annotation files. Automatic format determination is based on the Excel sheet and/or column names, and there is a lot of overlap in the column names of the different formats.","title":"InvalidPeakAnnotationFileFormat"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#isotopeparsingerror","text":"A regular expression or other parsing error was encountered when parsing an Isotope string. The formatting or completeness of the string must be manually fixed. Consult formatting guidelines (check the file\u2019s header comment).","title":"IsotopeParsingError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#isotopestringdupe","text":"The formatted isotope string matches the same labeled element more than once. Strings defining isotopes are formatted with multiple element symbols paired with mass numbers concatenated together, followed by their dash-delimited counts in the same relative order. This error occurs when that isotope string matches the same element multiple times. Unfortunately, the only way to address this error would be to edit the peak annotation file to eliminate the duplicate. Example: C13N15C13-label-2-1-1 would match C13 twice, resulting in this error.","title":"IsotopeStringDupe"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#missingc12parentpeak-missingc12parentpeaks","text":"No C12 PARENT row was found for this compound in the peak annotation file. This exception occurs (as a warning) in 2 cases: The C12 PARENT peak exists, but was not picked in El-Maven. In this case, the best solution is to redo the peak annotation file starting from re-picked peaks from El-Maven that include the parent peak. Alternatively, the peak annotation file could be edited to remove all of that compound\u2019s peaks and a subsequent file could be loaded using the complete peak group. The C12 PARENT peak was below the detection threshold. In this case, the warning can be ignored and a 0-count will be assumed.","title":"MissingC12ParentPeak (MissingC12ParentPeaks)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#missingcompounds-allmissingcompounds","text":"Summary of compounds expected to exist in the database that were not found, while loading a single input file.","title":"MissingCompounds (AllMissingCompounds)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#missingdataadded","text":"Different sheets in the Study Doc reference other sheets. When a user enters data in one of those referential columns without using the supplied drop-down menu, the interface autofills the entered value into the related sheet, and reports this warning to transparently let the user know when repairs have occurred. Examples: Novel animal treatment: A novel animal treatment is entered into the Treatment column of the Animals sheet in the Study Doc, but not into the Treatments sheet. The TraceBase Upload Validate page will autofill the new treatment name in a new row added to the Treatments sheet of the Study Doc. Novel tissue: A novel tissue is entered into the Tissue column of the Samples sheet in the Study Doc, but not into the Tissues sheet. The TraceBase Upload Validate page will autofill the new tissue name in a new row added to the Tissues sheet of the Study Doc. This warning is an indicator that there is new data to potentially fill in in the mentioned sheet.","title":"MissingDataAdded"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#missingfcirccalculationvalue-missingfcirccalculationvalues","text":"A value, while not required, but necessary for (accurate) FCirc calculations, is missing. TraceBase does not require values for some database model fields because it supports animals that have not been infused with tracers, but when an animal does have a tracer infusion, certain values are necessary to accurately compute FCirc. If any of those values have not been filled in, and the animal has an infusate, you will see this exception as a warning. While your data can be loaded without these values, it is highly recommended that all such values be supplied in order to show FCirc records with calculated values and without associated errors or warnings.","title":"MissingFCircCalculationValue (MissingFCircCalculationValues)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#missingsamples-allmissingsamples","text":"Summary of samples expected to exist in the database that were not found, while loading a single input file.","title":"MissingSamples (AllMissingSamples)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#missingstudies-allmissingstudies","text":"Summary of studies expected to exist in the database that were not found, while loading a single input file.","title":"MissingStudies (AllMissingStudies)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#missingtissues-allmissingtissues","text":"Summary of tissues expected to exist in the database that were not found, while loading a single input file.","title":"MissingTissues (AllMissingTissues)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#missingtreatments-allmissingtreatments","text":"Summary of treatments expected to exist in the database that were not found, while loading a single input file.","title":"MissingTreatments (AllMissingTreatments)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#mixedpolarityerrors","text":"A mix of positive and negative polarities were found in an mzXML file. TraceBase does not support mixed polarity mzXML files.","title":"MixedPolarityErrors"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#multiplepeakannotationfileformats","text":"The peak annotation file format could not be uniquely determined. This exception is raised as an error on the Upload Start page only. To resolve this issue, select the format code using the dropdown menus in the File Format column of the Peak Annotation Files sheet in the Study Doc that corresponds to the reported file. Note that this error is more likely to occur when supplying CSV or TSV versions of peak annotation files. Automatic format determination is based on the Excel sheet and/or column names, and there is a lot of overlap in the column names of the different formats.","title":"MultiplePeakAnnotationFileFormats"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#multiplepeakgrouprepresentation-multiplepeakgrouprepresentations-allmultiplepeakgrouprepresentations","text":"A peak group for a measured compound was picked multiple times and abundance corrected for 1 or more samples. TraceBase requires that the single best representation of a peak group compound be loaded for any one sample. Certain compounds can show up in both positive and negative scans, or in abutting scan ranges of the same polarity. While neither representation may be perfect, this simple requirement prevents inaccuracies or mistakes when using the data from TraceBase. Be wary however that your compound names in your peak annotation files are consistently named, because different synonyms are not detected as multiple peak group representations. This was a design decision to support succinct compound records while also supporting stereo-isomers. (Note: This distinction may go away in a future version of TraceBase, where synonyms are treated as the same compound in the context of peak groups.) Multiple peak group representations are only detected and reported on the Upload Start page, when the peak annotation files have their compounds and samples extracted. The multiple representations are recorded in an otherwise hidden sheet in the Study Doc named Peak Group Conflicts . For every row in the conflicts sheet, a peak annotation file drop-down is supplied to pick the file from which the peak group should be loaded. The same peak group compound from the other file(s) will be skipped. If you forgot a peak annotation file when generating your study doc template, start over with a complete generated Study Doc in order to catch these issues. But note, previously loaded Peak Group records are included in the detection of multiple representations, so alternatively, you may choose to add forgotten peak annotation files in a separate submission, keeping in mind that if you select the new peak annotation file as the peak group representation to load, the old previously loaded peak group will be deleted. Note that while manual editing of this sheet is discouraged, you can manually edit it as long as you preserve the hidden column. There is a hidden sample column containing delimited sample names. This column is required to accurately update all multiple representations.","title":"MultiplePeakGroupRepresentation (MultiplePeakGroupRepresentations, AllMultiplePeakGroupRepresentations)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#multiplerecordsreturned","text":"The record search was expected to match exactly 1 record, but multiple records were found. This issue can arise for various reasons, but usually are related to conflicting sample naming conventions in the MS instrument that produces the RAW (and by implication, the mzXML) filenames, the abundance correction software that produces the peak annotation files (e.g. AccuCor), and TraceBase\u2019s unique biological sample naming constraints related to scan labels. TraceBase\u2019s attempts to map differing sample names in differing contexts to a single biological Sample record can yield this exception in one case when there exists a biological sample duplicate in the Study Doc\u2019s Samples sheet. This can happen due to the retention of scan labels in sample names when populating that sheet. So one possible resolution may be to merge duplicate sample records in the Samples sheet that happen to be different scans of the same biological sample. Another possibility could be misidentified \u201cscan labels\u201d that for example do not refer to polarity that were manually fixed, but which cause issues when trying to map mzXML filenames or peak annotation file sample headers to those Sample records. Each issue should be handled on a case-by-case basis.","title":"MultipleRecordsReturned"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#multiplestudydocversions","text":"The study doc version could not be automatically narrowed down to a single matching version. This exception is accompanied by version determination metadata intended to highlight the supplied versus expected sheet and column names. Note however, that the only column names that will be reported as missing are required columns. Missing optional columns may be reported as \u201cunknown\u201d. TraceBase is backward compatible with older versions of the Study Doc and the Upload Validate page automatically detects the version based on sheet and column names. This exception could arise if various sheets have been removed, leaving sheets whose required column names do not differ between versions. There is currently no fix for this issue on the Upload Validate page and validation must happen on the command-line where a version number can be supplied. In this case, it is recommended that you skip validation and if you think the data is complete, move on to the Submit step.","title":"MultipleStudyDocVersions"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#mzxmlskiprowerror-allmzxmlskiprowerrors-allmzxmlskiprowerrors","text":"Could not determine which mzXML file loads to skip. When the mzXML file paths are not supplied and the number of mzXML files of the same name exceed number of skipped sample data headers in the peak annotation files (i.e. some of the same-named files are to be loaded and others are to be skipped), it may be impossible to tell which ones are which. The loading code can infer which are which if the files are divided into directories with their peak annotation files in which they were used, but if that cannot be figured out, this error will be raised. This can be resolved either by accounting for all mzXML files in the Peak Annotation Details sheet with their paths or by organizing the mzXML files with the peak annotation files they were used to produce.","title":"MzXMLSkipRowError (AllMzXMLSkipRowErrors, AllMzXMLSkipRowErrors)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#mzxmlcolocatedwithmultipleannot","text":"mzXML files are in a directory that has multiple peak annotation files somewhere along its path. This exception has to do with determining which MS Run Sequence produced the mzXML file, which is dynamically determined when there are multiple sequences containing the same sample names. mzXML files are assigned an MS Run Sequence based on either the value in the Sequence column in the Peak Annotation Details sheet or (if that\u2019s empty), the Default Sequence defined in the Peak Annotation Files sheet and the Peak Annotation File Name column in the Peak Annotation Details sheet. If the default is used, this exception is a warning. However, if there is no default and no Sequence in the Peak Annotation Details sheet\u2019s Sequence column, the association is inferred by the directory structure. By travelling up the path from the mzXML file to the study directory, the first peak annotation file encountered is the one that is associated with the mzXML file. The simplest case is when the mzXML file is in the same directory as a single peak annotation file. The loading code only raises this as an error when the mzXML filename matches headers in multiple peak annotation files from different sequences and the specific one in which it was used was not explicitly assigned and it could not be inferred from the directory structure. The easiest fix is to put peak annotation files in a directory along with only the mzXML files that were used in its production. The more laborious (but more versatile) solution is to add the file path of every mzXML reported in the error to the Peak Annotation Details sheet along with the Sequence .","title":"MzxmlColocatedWithMultipleAnnot"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#mzxmlnotcolocatedwithannot","text":"mzXML files are not in a directory under an unambiguously associated peak annotation file in which they were used. This exception has to do with determining which MS Run Sequence produced the mzXML file, which is dynamically determined when there are multiple sequences containing the same sample names. mzXML files are assigned an MS Run Sequence based on either the value in the Sequence column in the Peak Annotation Details sheet or (if that\u2019s empty), the Default Sequence defined in the Peak Annotation Files sheet and the Peak Annotation File Name column in the Peak Annotation Details sheet. If the default is used, this exception is a warning. However, if there is no default and no Sequence in the Peak Annotation Details sheet\u2019s Sequence column, the association is inferred by the directory structure. By travelling up the path from the mzXML file to the study directory, the first peak annotation file encountered is the one that is associated with the mzXML file. The simplest case is when the mzXML file is in the same directory as a single peak annotation file. The loading code only raises this as an error when the mzXML filename matches headers in multiple peak annotation files from different sequences and the specific one in which it was used was not explicitly assigned and it could not be inferred from the directory structure. The easiest fix is to put peak annotation files in a directory along with only the mzXML files that were used in its production. The more laborious (but more versatile) solution is to add the file path of every mzXML reported in the error to the Peak Annotation Details sheet along with the Sequence .","title":"MzxmlNotColocatedWithAnnot"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#mzxmlparseerror","text":"The structure of the mzXML file is not as expected. An expected XML element or element attribute was not found. This could be due to an mzXML version change or a malformed or truncated file. TraceBase supports mzXML version 3.2.","title":"MzxmlParseError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#mzxmlsampleheadermismatch","text":"The mzXML filename does not match the sample header in the peak annotation file. This situation can arise either if the filename has been (knowingly) manually modified or when the mzXML File Name entered into the Peak Annotation Details sheet was mistakenly associated with the wrong Sample Data Header . This exception is only ever raised as a warning and is not inspected by curators, so confirm the association and either make a correction or ignore, if the association is correct.","title":"MzxmlSampleHeaderMismatch"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#mzxmlsequenceunknown-allmzxmlsequenceunknown","text":"Unable to reliably match an mzXML file with an MSRunSequence. This exception is raised as a warning when the number of mzXML files with the same name are not all accounted for in the Peak Annotation Details sheet of the Study Doc. I.e. there are more mzXML files than peak annotation files with sample headers of this name. There are a number of ways this can happen: - The extra files are empty (and are reported in NoScans warnings). - A peak annotation file for the extras has not been included in the load. - The sample was re-analyzed in a subsequence MS Run because there was a problem with the first run. - There are 2 different biological samples with the same name and one is not included in the current submission. The first case is handled automatically and can be safely ignored. In fact, if it is any other case, an error would be raised after this warning, so in any case, this can be ignored, but if subsequent error does occur, this warning provides information that can help figure out the problem. In all of the other cases, there are 2 ways to resolve the warning: Add rows to the Peak Annotation Details sheet that account for all the files (adding \u2018skip\u2019 to the Skip column for any files that should be ignored). This is the preferred solution. Add the relative path from the study folder to the specific mzXML file in the existing mzXML File Name column (not including the study folder name). Despite the \u2018required columns\u2019 highlighted in blue indicating that \u2018Sample Name\u2019 and \u2018Sample Data Header\u2019 are required, when there is no associated peak annotation file, the mzXML File Name , Sequence , and Skip columns are all that\u2019s required. This is a special case. If all of the files are for the same MS Run, nothing further is needed. But if they are from different MS Runs, the mzXML File Name column must contain the relative path from the study folder to the mzXML file (not including the study folder name).","title":"MzxmlSequenceUnknown (AllMzxmlSequenceUnknown)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#newresearcher-newresearchers-allnewresearchers","text":"When an as-yet unencountered researcher name is encountered, this exception is raised as a warning to ensure it is not a spelling variant of an existing researcher name.","title":"NewResearcher (NewResearchers, AllNewResearchers)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#nosamples","text":"None of the samples in the indicated file, required to exist in the database, were found. Each sheet in an excel file is loaded independently and the loads proceed in the order of those dependencies. Errors like this usually only happen when related dependent data failed to load (due to some other error) and is evidenced by the fact that the indicated columns/rows have values. Fixing errors that appear above this will fix this error. For example, an Animal record must be loaded and exist in the database before a Sample record (which links to an Animal record) can be loaded. If the loading of the Animal record encountered an error, anytime a Sample record that links to that animal is loaded, this error will occur. The loading code tries to avoid these \u201credundant\u201d errors, but it also tries to gather as many errors as possible to reduce repeated validate/edit iterations.","title":"NoSamples"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#noscans-allnoscans","text":"An mzXML file was encountered that contains no scan data. This exception is raised as a warning and can be safely ignored. Empty mzXML files are produced as a side-effect of the way they are produced. Such files could be excluded from a study submission, but are hard to distinguish without looking inside the same-named files. It is recommended that the files be left as-is.","title":"NoScans (AllNoScans)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#notracerlabeledelements-notracerlabeledelementserror","text":"A compound in a peak annotation file was encountered that does not contain any of the labeled elements from any of the tracers. The purpose of a peak group (which the loading code populates) is to group a compound\u2019s peaks that result from various isotopic states (the incorporation of labeled elements from the tracer compounds). If the formula of the measured compound does not contain any of the elements that are labeled in the tracers, this suggests a potential problem, such as the animal\u2019s infusate from the Animals sheet was incorrectly selected or omits a tracer with labels that are in this compound. Resolutions to this issue can involve either updating the associated animal\u2019s infusate/tracers to include a tracer with the labeled elements it shares with this compound or simply ignoring this warning noting that the compound will not be loaded as a peak group.^ ^ TraceBase was not designed to support non-isotopic mass spectrometry data. Adding support for non-isotopic data is a planned feature. See GitHub issue #1192 .","title":"NoTracerLabeledElements (NoTracerLabeledElementsError)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#notracers","text":"An operation that requires an animal to have been infused with tracers encountered an animal that was not infused with tracers, such as FCirc calculations. This error occurs when an animal is associated with an infusate record, but that infusate is not linked to any tracers. This is likely because an error occurred during infusate/tracer loading and arises when validating a serum sample.","title":"NoTracers"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#observedisotopeparsingerror","text":"A regular expression or other parsing error was encountered when parsing an Isotope observation string. The formatting or completeness of the string must be manually fixed. Consult formatting guidelines (check the file\u2019s header comment).","title":"ObservedIsotopeParsingError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#observedisotopeunbalancederror","text":"The number of elements, mass numbers, and counts parsed from the isotope string differ. A single (fully labeled) isotope must include each value in the order of mass number, element symbol, and count. E.g. 13C5 means that there are 5 heavy carbons of mass number 13 in a compound. Examples: 13C would cause this error because there is no count. C5 would cause this error because there is no mass number. 135 would cause this error because there is no element and there\u2019s no way to tell where the count begins.","title":"ObservedIsotopeUnbalancedError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#possibleduplicatesample-possibleduplicatesamples","text":"Multiple peak annotation files have an identical sample header, but are associated with distinctly different TraceBase biological Sample records. This exception is always raised as a warning as a check to ensure that the distinction is intentional, and not just a copy/paste error. If there do exist different biological samples that happen to have the exact same name, this warning can be safely ignored. If they are the same biological sample, the Sample Name column in the Peak Annotation Details sheet must be updated. You may also need to delete or update the associated row in the Samples sheet, if no other verified rows in the Peak Annotation Details sheet refers to it.","title":"PossibleDuplicateSample (PossibleDuplicateSamples)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#prohibitedcompoundname-prohibitedcompoundnames","text":"The compound name or synonym contains disallowed characters that were replaced with similar allowed characters. This exception is always raised as a warning. Disallowed characters are either compound name/synonym delimiters or Peak Group name delimiters that are used during loading. While the offending characters are automatically replaced, you may elect to use an alternate character. If you go with the automatic replacement, nothing further needs to be done, but if you edit the values in the Study Doc, but be sure to make the edit everywhere, including the Compounds sheet, the Tracers / Infusates sheet (and in the Infusate column in the Animals sheet), the Peak Group Conflicts sheet. Also, all peak annotation files will need to be updated as well.","title":"ProhibitedCompoundName (ProhibitedCompoundNames)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#recorddoesnotexist","text":"The expected record from the indicated database model was not found.","title":"RecordDoesNotExist"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#replacingpeakgrouprepresentation","text":"A previously loaded peak group from a previous submission (for a measured compound was picked multiple times and abundance corrected for 1 or more samples) will be replaced with a new representation from a new peak annotation file that includes this compound for the same 1 or more samples. Refer to the documentation of the MultiplePeakGroupRepresentation exception for an explanation of multiple peak group representations and TraceBase\u2019s requirements related to them. This exception is always raised as a warning, to be transparent about the replacement of previously loaded Peak Group records. By selecting the new peak annotation file as the peak group representation to load in the Peak Group Conflicts sheet, this warning informs you that an old previously loaded peak group will be deleted. This exception is expected when a selection has been made that supercedes a selection made in a previous load relating to the same samples and compound.","title":"ReplacingPeakGroupRepresentation"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#requiredcolumnvalue-requiredcolumnvalues","text":"A value, required to exist in the input table, was not supplied.","title":"RequiredColumnValue (RequiredColumnValues)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#requiredheaderserror","text":"Supplies a list of missing required column headers in the input file.","title":"RequiredHeadersError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#requiredvalueerror-requiredvalueerrors","text":"A value, required to exist in the database, was found to be missing. Each sheet in an excel file is loaded independently and the loads proceed in the order of those dependencies. Errors like this usually only happen when related dependent data failed to load (due to some other error) and is evidenced by the fact that the indicated columns/rows have values. Fixing errors that appear above this will fix this error. For example, an Animal record must be loaded and exist in the database before a Sample record (which links to an Animal record) can be loaded. If the loading of the Animal record encountered an error, anytime a Sample record that links to that animal is loaded, this error will occur. The loading code tries to avoid these \u201credundant\u201d errors, but it also tries to gather as many errors as possible to reduce repeated validate/edit iterations.","title":"RequiredValueError (RequiredValueErrors)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#synonymexistsasmismatchedcompound","text":"A compound row was added to the Compounds sheet whose synonym exists as a primary name of another compound. This exception can arise automatically in the downloaded study doc template all on its own. TraceBase tries to add rows in the Compounds sheet for both compounds that already exist in TraceBase and novel compounds that do not yet exist in TraceBase. However, the compound name and formula must both match. When they do not match, a new row for a novel compound is added to the sheet, whether or not it creates a conflict. Such a conflict can arise due to the formula (derived from the peak annotation file) representing the ionized state of the compound, e.g. with 1 less or 1 more proton (H). A researcher can also cause this exception if they were to assign an HMDB ID that is already assigned to another compound existing in TraceBase. This can often happen after fixing the issue described above caused by an ionized formula, because TraceBase did not pre-fill the existing compound due to the formula difference. Lastly, this issue can arise if the conflicting compound record simply has a synonym associated with a compound record that is just wrong. To resolve this issue, either merge the compound records (editing them to fix the formula) or remove the synonym from the differing compound record so that peak groups (and tracers) are associated with the other compound record. If the compound from the peak annotation file(s) differs from the existing TraceBase compound record (e.g. different formula or HMDB ID), and the new record represents a distinctly different compound, reach out to the curators. The existing compound name may already be associated with a different compound in other studies, so either changes would need to be made to those other studies or the new study would need to be edited to distinguish the different compounds. Either way, a curator will need to coordinate the fix to ensure database-wide consistency.","title":"SynonymExistsAsMismatchedCompound"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#tracercompoundnameinconsistent","text":"The compound name used in the tracer name is not the primary compound name. TraceBase requires that tracer names use the primary compound name so that searches yield complete and consistent results. It automatically changes the tracer name to use the primary compound and raises this exception as a warning, to be transparent about the modification of the user-entered compound name. If the established primary compound name is problematic, reach out to a TraceBase curator to propose a change of a compound\u2019s primary name. Note that such a change will affect all studies that use this tracer (if any).","title":"TracerCompoundNameInconsistent"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#tracergroupsinconsistent","text":"An infusate is either a duplicate or exists with a conflicting tracer group name. A duplicate infusate can trigger this exception due to concentration value precision. In other words, it\u2019s not technically a true duplicate, but is treated as such due to the fact that concentration values may exceed a precision threshold. Excel and the underlying Postgres database have slightly different levels of precision. TraceBase saves what you enter, but when it is entered into the database, the precision may change and end up matching another record. It\u2019s also important to note that while TraceBase saves the value you enter, it searches for infusates using significant figures, which can also lead to a duplicate exception. See the tracer column headers in the Infusates sheet in the Study Doc for details of what significant figures are used. The resolution in the duplicate case is to use existing records whose concentration values insignificantly differ. The other reason this exception may be raised could be due to nomenclature control over the Tracer Group Name , which must be the same across all infusates that that include the same tracer compounds, regardless of concentration and isotopic inclusion. If the tracer group name differs, you must use the pre-existing group name already in TraceBase. If the group name is problematic, reach out to a TraceBase curator to fix it.","title":"TracerGroupsInconsistent"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#tracerparsingerror","text":"A regular expression or other parsing error was encountered when parsing a Tracer string. The formatting or completeness of the string must be manually fixed. Consult formatting guidelines (check the file\u2019s header comment).","title":"TracerParsingError"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#unexpectedinput","text":"The value in the indicated column is optional, but is required to be supplied with another neighboring column value, that was found to be absent. This exception can be resolved either by supplying the neighboring column\u2019s value or by removing this column\u2019s value. Example: If an infusion rate is supplied, but there was no infusate supplied, the infusion rate will cause an UnexpectedInput exception, because an infusion rate without an infusate makes no sense.","title":"UnexpectedInput"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#unexpectedlabel-unexpectedlabels-allunexpectedlabels","text":"An isotope label, e.g. nitrogen ( N ) was detected in a measured compound, but that labeled element was not in any of the tracers. This is reported as a warning to suggest that there could be contamination or the wrong infusate was selected for an animal, but this is often the result of naturally occurring isotopes and can be ignored.","title":"UnexpectedLabel (UnexpectedLabels, AllUnexpectedLabels)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#unexpectedsamples","text":"Sample headers found in a peak annotations file were not in the Study Doc\u2019s Peak Annotation Details sheet. This could either be due to a sample header omission in the Peak Annotation Details sheet or due to the wrong peak annotation file being associated with one or more sample headers in the Peak Annotation Details sheet.","title":"UnexpectedSamples"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#unknownheader","text":"A column header was encountered that is not a part of the file specification.","title":"UnknownHeader"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#unknownheaders","text":"A list of column headers encountered that are not a part of the file specification.","title":"UnknownHeaders"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#unknownpeakannotationfileformat","text":"The peak annotation file format is unrecognized. This exception is raised as an error on the Upload Start page only. To resolve this issue, select the format code using the dropdown menus in the File Format column of the Peak Annotation Files sheet in the Study Doc that corresponds to the reported file. If none of the supported formats in the dropdown match the file format, reach out to the TraceBase team to request adding support for the new format. In the meantime, it is recommended that you use one of the supported natural abundance correction tools to regenerate the file in a TraceBase-compatible format.","title":"UnknownPeakAnnotationFileFormat"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#unknownstudydocversion","text":"The study doc version could not be automatically determined. This exception is accompanied by version determination metadata intended to highlight the supplied versus expected sheet and column names. Note however, that the only column names that will be reported as missing are required columns. Missing optional columns may be reported as \u201cunknown\u201d. TraceBase is backward compatible with older versions of the Study Doc and the Upload Validate page automatically detects the version based on sheet and column names. This exception could arise if the sheet names and/or column names were modified. Try generating a new study doc from the Upload Start page and compare the sheet and column names to ensure they were not inadvertently altered. If there are differences, fix them so that the version can be identified by the Upload Validate interface.","title":"UnknownStudyDocVersion"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#unmatchedblankmzxml-unmatchedblankmzxmls","text":"This exception is the same as UnmatchedMzXML , but is a warning because the files have \u201cblank\u201d in their sample names and are assumed to have been intentionally excluded.","title":"UnmatchedBlankMzXML (UnmatchedBlankMzXMLs)"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#unskippedblanks","text":"A sample, slated for loading, appears to be a blank. Loading of blank samples should be skipped. Blank samples should be entirely excluded from the Samples sheet, but listed in the Peak Annotation Details sheet with a non-empty value in the Skip column. This tells the peak annotations loader that loads the peak annotations file to ignore the sample column with this sample name. Blank samples are automatically skipped in the Upload Start page\u2019s Study Doc download, based on the sample name containing \u201cblank\u201d in its name.","title":"UnskippedBlanks"},{"location":"Upload/Errors%20and%20Warnings%20Reference/#about-this-document","text":"This document is partially auto-generated using docstrings from the traceBase codebase. The content under Errors and Warnings (Exceptions) Reference is completely auto-generated, with minor edits. Consult the TraceBaseDocs/README.md file before making any updates.","title":"About This Document"},{"location":"Upload/How%20to%20Name%20Your%20Studies%2C%20Animals%2C%20and%20Samples/","text":"How to Name Your Studies, Animals, and Samples Recommended Sample Naming Best Practices To make upload easy, we recommend including this key information in your sample names: Animal Name Tissue Time Collected You might also consider including your initials or an abbreviation of your study name, to ensure uniqueness. Here's why: When naming your samples for the mass spectrometer run, making them unique for TraceBase can smooth out your submission experience. The sample names in the RAW files that come off the Mass Spec instrument should map to a unique biological sample in TraceBase. Mass Spec runs are often configured for samples from a single animal, so it makes sense that the sample names entered often embed multiple bits of data to reference a specific tissue plus sometimes the animal name, or even a researcher's initials. When multiple mzXML files are generated from one sample's raw file, to obtain the positive or negative scan data, or a particular m/z (mass/charge) range, the resultant files adopt the same name, and when those files are collated together, sometimes the polarity or scan range (e.g. _neg , _pos , or _scan2 ), or some combination, is added so that the files can exist in the same directory. All of this information gets incorporated into the sample headers of the peak annotation files. TraceBase is designed to extract the biological sample names from the LCMS sample name found in a peak annotation file (e.g. AccuCor ), thus it attempts to identify and remove the scan labels so that the samples listed in each row of the Samples sheet of the Study Doc represent unique biological samples. Thus, most importantly, since samples from multiple animals are collected into a single study, the sample names (and Animal names for that matter) should be unique across that entire study. If the Animal name or Sample name is not unique, upload is still possible, but the names will need to be modified to be unique. And since TraceBase is designed for cross-study analyses, it enforces that all animal and sample names be globally unique, thus a simple sample name like M1_spleen is likely going to need to be modified to avoid colliding with existing TraceBase samples. Suggested Scheme for Unique Study, Animal, and Sample Names For a new study/experiment, create a new identifier counting up from \"study001\", and sometimes include a short identifier or name for the experiment. (e.g. \"study001_hyperthyroid_glucose_infusion\"). Now you can reference this experiment ID (\"study001\") elsewhere. A different experiment may have a new identifier (e.g. \"study002_hypothyroid glucose infusion\"). A related follow up experiment may have an extension to the identifier, e.g. \"study001b_hyperthyroid lactate infusion\". Any text could be used in place of \"study\". Within each experiment, animal name counts up from 001 \"study001_m01, study001_m02...\". A unique sample file can then be created by adding to this animal name: provide full animal identifier, tissue, and sometimes time collected: E.g. \"study001_m01_quad, study001_m01_tailserum_000, study001_m01_tailserum_120\" Some researchers keep a single list of Animal IDs for all experiments (e.g. 0001, 0002, etc) This works well for TraceBase, because each Animal name is unique. Apply this scheme when performing LCMS When loading samples to run LCMS, apply this labeling scheme: Create a folder for each sequence that includes the date of LCMS and experiment identifier. Label samples according to biological entity (e.g. \"study001_plasma_0\") If running the same samples multiple times (e.g. positive mode / negative mode), save each result in a different destination folder. When analyzed in Maven/El-Maven and processed for isotope correction, the resulting sample names will be easy to label for upload to TraceBase. LCMS data for a single biological entity can be generated from multiple LCMS experiments (e.g. \"positive\" vs \"negative\" mass spectrometry, alternative extraction methods, etc). There are two general methods for handling this: Option 1: include method information in the sample name (e.g. append \"hilicPos\") Option 2: leave sample name the same for every biological entity, and generate separate Accucor / Isocorr files for each type of method. This requires saving results into separate folders on the LCMS. This option is easiest to implement for upload to TraceBase because it keeps your Sample Information Sheet simple. Apply this scheme everywhere These labeling schemes can be applied to your general organization of data outside of TraceBase. Data and any other information related to your experiments can be organized into one folder labeled for each study \"study001_my first infusion\", \"study001b_fixing my first infusion\". Put everything related to the experiment in this folder, for example: mouse information sheets Study Doc LCMS data (mzxml) accucor / isocorr files Maven project files R / python scripts for analyzing this data In your lab notebook, create page(s) for each experiment name. When working with samples in the lab, it is not feasible to label every tube with the full identifier, but shorthand can be used for intermediate tubes if everything is from the same study: E.g. when extracting tissue from only study001, label working tubes with minimal info \"Q1, Q2\". Label final tubes with as much information as possible (e.g. \"001_M1_Q\"). Label boxes stored in freezers with study identifier, a relevant date, and your initials (e.g. \"study001_glucose infusion\", \"study001b_lactate infusion\"...) If you are unsure of how to label something, write whatever you think fits and submit anyway. Indicate what you are unsure about in the submission form or on the information sheet. The developer team will check the data and help you label it properly before adding to the live data on TraceBase. The key steps to remember for this sheet are to match sample names and animal IDs:","title":"How to Name Your Studies, Animals, and Samples"},{"location":"Upload/How%20to%20Name%20Your%20Studies%2C%20Animals%2C%20and%20Samples/#how-to-name-your-studies-animals-and-samples","text":"","title":"How to Name Your Studies, Animals, and Samples"},{"location":"Upload/How%20to%20Name%20Your%20Studies%2C%20Animals%2C%20and%20Samples/#recommended-sample-naming-best-practices","text":"To make upload easy, we recommend including this key information in your sample names: Animal Name Tissue Time Collected You might also consider including your initials or an abbreviation of your study name, to ensure uniqueness. Here's why: When naming your samples for the mass spectrometer run, making them unique for TraceBase can smooth out your submission experience. The sample names in the RAW files that come off the Mass Spec instrument should map to a unique biological sample in TraceBase. Mass Spec runs are often configured for samples from a single animal, so it makes sense that the sample names entered often embed multiple bits of data to reference a specific tissue plus sometimes the animal name, or even a researcher's initials. When multiple mzXML files are generated from one sample's raw file, to obtain the positive or negative scan data, or a particular m/z (mass/charge) range, the resultant files adopt the same name, and when those files are collated together, sometimes the polarity or scan range (e.g. _neg , _pos , or _scan2 ), or some combination, is added so that the files can exist in the same directory. All of this information gets incorporated into the sample headers of the peak annotation files. TraceBase is designed to extract the biological sample names from the LCMS sample name found in a peak annotation file (e.g. AccuCor ), thus it attempts to identify and remove the scan labels so that the samples listed in each row of the Samples sheet of the Study Doc represent unique biological samples. Thus, most importantly, since samples from multiple animals are collected into a single study, the sample names (and Animal names for that matter) should be unique across that entire study. If the Animal name or Sample name is not unique, upload is still possible, but the names will need to be modified to be unique. And since TraceBase is designed for cross-study analyses, it enforces that all animal and sample names be globally unique, thus a simple sample name like M1_spleen is likely going to need to be modified to avoid colliding with existing TraceBase samples.","title":"Recommended Sample Naming Best Practices"},{"location":"Upload/How%20to%20Name%20Your%20Studies%2C%20Animals%2C%20and%20Samples/#suggested-scheme-for-unique-study-animal-and-sample-names","text":"For a new study/experiment, create a new identifier counting up from \"study001\", and sometimes include a short identifier or name for the experiment. (e.g. \"study001_hyperthyroid_glucose_infusion\"). Now you can reference this experiment ID (\"study001\") elsewhere. A different experiment may have a new identifier (e.g. \"study002_hypothyroid glucose infusion\"). A related follow up experiment may have an extension to the identifier, e.g. \"study001b_hyperthyroid lactate infusion\". Any text could be used in place of \"study\". Within each experiment, animal name counts up from 001 \"study001_m01, study001_m02...\". A unique sample file can then be created by adding to this animal name: provide full animal identifier, tissue, and sometimes time collected: E.g. \"study001_m01_quad, study001_m01_tailserum_000, study001_m01_tailserum_120\" Some researchers keep a single list of Animal IDs for all experiments (e.g. 0001, 0002, etc) This works well for TraceBase, because each Animal name is unique.","title":"Suggested Scheme for Unique Study, Animal, and Sample Names"},{"location":"Upload/How%20to%20Name%20Your%20Studies%2C%20Animals%2C%20and%20Samples/#apply-this-scheme-when-performing-lcms","text":"When loading samples to run LCMS, apply this labeling scheme: Create a folder for each sequence that includes the date of LCMS and experiment identifier. Label samples according to biological entity (e.g. \"study001_plasma_0\") If running the same samples multiple times (e.g. positive mode / negative mode), save each result in a different destination folder. When analyzed in Maven/El-Maven and processed for isotope correction, the resulting sample names will be easy to label for upload to TraceBase. LCMS data for a single biological entity can be generated from multiple LCMS experiments (e.g. \"positive\" vs \"negative\" mass spectrometry, alternative extraction methods, etc). There are two general methods for handling this: Option 1: include method information in the sample name (e.g. append \"hilicPos\") Option 2: leave sample name the same for every biological entity, and generate separate Accucor / Isocorr files for each type of method. This requires saving results into separate folders on the LCMS. This option is easiest to implement for upload to TraceBase because it keeps your Sample Information Sheet simple.","title":"Apply this scheme when performing LCMS"},{"location":"Upload/How%20to%20Name%20Your%20Studies%2C%20Animals%2C%20and%20Samples/#apply-this-scheme-everywhere","text":"These labeling schemes can be applied to your general organization of data outside of TraceBase. Data and any other information related to your experiments can be organized into one folder labeled for each study \"study001_my first infusion\", \"study001b_fixing my first infusion\". Put everything related to the experiment in this folder, for example: mouse information sheets Study Doc LCMS data (mzxml) accucor / isocorr files Maven project files R / python scripts for analyzing this data In your lab notebook, create page(s) for each experiment name. When working with samples in the lab, it is not feasible to label every tube with the full identifier, but shorthand can be used for intermediate tubes if everything is from the same study: E.g. when extracting tissue from only study001, label working tubes with minimal info \"Q1, Q2\". Label final tubes with as much information as possible (e.g. \"001_M1_Q\"). Label boxes stored in freezers with study identifier, a relevant date, and your initials (e.g. \"study001_glucose infusion\", \"study001b_lactate infusion\"...) If you are unsure of how to label something, write whatever you think fits and submit anyway. Indicate what you are unsure about in the submission form or on the information sheet. The developer team will check the data and help you label it properly before adding to the live data on TraceBase. The key steps to remember for this sheet are to match sample names and animal IDs:","title":"Apply this scheme everywhere"},{"location":"Upload/How%20to%20Upload%20Data%20to%20TraceBase/","text":"How to Upload Data to TraceBase This is a general introduction to the data submission process. For frequently asked specific questions, see the Uploading FAQ . At a high level, you will construct a Study Doc (Excel workbook) which provides the information required for upload. Then, you provide a copy of the Study Doc, peak annotation files, and optionally, mzXML and raw files in the lab's designated shared drive . Finally, a TraceBase curator reviews your submission, works with you to resolve any issues, and then loads the data to TraceBase. The submission process includes helpful instructions both on the Upload pages and in the study doc template itself, so users are encouraged to begin a submission and then consult this documentation if anything is unclear. To get started, click the upload button in the menu bar at the top of the page. Note: uploading can be disabled, in which case there would be no upload option in the menu bar. There are 4 tabs on the Upload Page that proceed from left to right: Upon finishing any one page, you can leave and come back. Your work is saved in the downloaded Study Doc. Step-by-Step Instructions 1. Start - Create a Study Doc Drop your peak annotation file(s) into the dotted outline, or select them using the button. Complete the form fields for each file. A unique biological sample will be created from the sample headers spread across your various peak annotation files. Click \"Download Template\". TraceBase reads the names of samples and compounds in your files, and then provides a template with this information pre-filled. For details on how best to leverage this feature, see How to Start an Upload . 2. Fill In - Enter data into the Study Doc using Excel The \"Fill In\" tab contains specific pointers and tips on how to fill in data in the Study Doc (Excel spreadsheet). You can also find useful information in the header row comments, which will contain tips like the expected units, value format (e.g. date format), and a description of the values. If anything is unclear, know that the next step (Validation) will help identify and correct issues, and your data will not be loaded to TraceBase until the curators have reviewed it. For some general tips to keep in mind that can ensure the process proceeds smoothly and for detailed information, see How To Fill In the Study Doc . 3. Validate - Check your Study doc for warnings and errors At any point (whether your study doc is completely filled in or not), you can check it for errors by validating it on the Upload validate page. It is not required for you to fix any reported issues, but pay particular attention to any warnings (displayed in yellow) because warnings are treated by curators as unnecessary fixes or are issues that are at the discretion of the researcher to resolve. A curator will fix issues for you, but note that any efforts you make to fix errors will speed up the loading of your data, especially if the fixing of any error requires your domain knowledge. After submission, a curator will keep a log of any changes they make for you to review and approve before the load. The validation process is iterative. You can re-validate anytime you fix a single, multiple, or all issues. Every time you fix all issues, you should validate one last time, even if the fix is a simple one, to ensure those fixes didn't reveal previously hidden errors (i.e. errors that will not occur until another dependant error is addressed). As with the previous steps, the validation process is designed to be self explanatory, so feel free to jump right in and start validating. If you'd like to know more, see How to Validate a Study Doc . 4. Submit - Organize your files and notify the curators In short, compile all of your data in a shared drive and submit the short linked Google form. Under the \"Submit\" tab, follow the directions on how to organize and where to deposit your data. Then click the \"Submission Form\" button and fill out the short Google form to let the curators know that your submission is done. For details on organizing and submitting data, see How to Submit Data . What happens next? TraceBase curators will re-validate your study to ensure that everything will load smoothly. If there are any issues, you will be contacted to sort everything out. The study data will be loaded into TraceBase and you will be notified of the load completion via email so you can start browsing your data. Contact us anytime if you would like to check in on the load status or if you have any questions, concerns, comments, or discover any post-load issues.","title":"How to Upload Data to TraceBase"},{"location":"Upload/How%20to%20Upload%20Data%20to%20TraceBase/#how-to-upload-data-to-tracebase","text":"This is a general introduction to the data submission process. For frequently asked specific questions, see the Uploading FAQ . At a high level, you will construct a Study Doc (Excel workbook) which provides the information required for upload. Then, you provide a copy of the Study Doc, peak annotation files, and optionally, mzXML and raw files in the lab's designated shared drive . Finally, a TraceBase curator reviews your submission, works with you to resolve any issues, and then loads the data to TraceBase. The submission process includes helpful instructions both on the Upload pages and in the study doc template itself, so users are encouraged to begin a submission and then consult this documentation if anything is unclear. To get started, click the upload button in the menu bar at the top of the page. Note: uploading can be disabled, in which case there would be no upload option in the menu bar. There are 4 tabs on the Upload Page that proceed from left to right: Upon finishing any one page, you can leave and come back. Your work is saved in the downloaded Study Doc.","title":"How to Upload Data to TraceBase"},{"location":"Upload/How%20to%20Upload%20Data%20to%20TraceBase/#step-by-step-instructions","text":"","title":"Step-by-Step Instructions"},{"location":"Upload/How%20to%20Upload%20Data%20to%20TraceBase/#1-start-create-a-study-doc","text":"Drop your peak annotation file(s) into the dotted outline, or select them using the button. Complete the form fields for each file. A unique biological sample will be created from the sample headers spread across your various peak annotation files. Click \"Download Template\". TraceBase reads the names of samples and compounds in your files, and then provides a template with this information pre-filled. For details on how best to leverage this feature, see How to Start an Upload .","title":"1. Start - Create a Study Doc"},{"location":"Upload/How%20to%20Upload%20Data%20to%20TraceBase/#2-fill-in-enter-data-into-the-study-doc-using-excel","text":"The \"Fill In\" tab contains specific pointers and tips on how to fill in data in the Study Doc (Excel spreadsheet). You can also find useful information in the header row comments, which will contain tips like the expected units, value format (e.g. date format), and a description of the values. If anything is unclear, know that the next step (Validation) will help identify and correct issues, and your data will not be loaded to TraceBase until the curators have reviewed it. For some general tips to keep in mind that can ensure the process proceeds smoothly and for detailed information, see How To Fill In the Study Doc .","title":"2. Fill In - Enter data into the Study Doc using Excel"},{"location":"Upload/How%20to%20Upload%20Data%20to%20TraceBase/#3-validate-check-your-study-doc-for-warnings-and-errors","text":"At any point (whether your study doc is completely filled in or not), you can check it for errors by validating it on the Upload validate page. It is not required for you to fix any reported issues, but pay particular attention to any warnings (displayed in yellow) because warnings are treated by curators as unnecessary fixes or are issues that are at the discretion of the researcher to resolve. A curator will fix issues for you, but note that any efforts you make to fix errors will speed up the loading of your data, especially if the fixing of any error requires your domain knowledge. After submission, a curator will keep a log of any changes they make for you to review and approve before the load. The validation process is iterative. You can re-validate anytime you fix a single, multiple, or all issues. Every time you fix all issues, you should validate one last time, even if the fix is a simple one, to ensure those fixes didn't reveal previously hidden errors (i.e. errors that will not occur until another dependant error is addressed). As with the previous steps, the validation process is designed to be self explanatory, so feel free to jump right in and start validating. If you'd like to know more, see How to Validate a Study Doc .","title":"3. Validate - Check your Study doc for warnings and errors"},{"location":"Upload/How%20to%20Upload%20Data%20to%20TraceBase/#4-submit-organize-your-files-and-notify-the-curators","text":"In short, compile all of your data in a shared drive and submit the short linked Google form. Under the \"Submit\" tab, follow the directions on how to organize and where to deposit your data. Then click the \"Submission Form\" button and fill out the short Google form to let the curators know that your submission is done. For details on organizing and submitting data, see How to Submit Data .","title":"4. Submit - Organize your files and notify the curators"},{"location":"Upload/How%20to%20Upload%20Data%20to%20TraceBase/#what-happens-next","text":"TraceBase curators will re-validate your study to ensure that everything will load smoothly. If there are any issues, you will be contacted to sort everything out. The study data will be loaded into TraceBase and you will be notified of the load completion via email so you can start browsing your data. Contact us anytime if you would like to check in on the load status or if you have any questions, concerns, comments, or discover any post-load issues.","title":"What happens next?"},{"location":"Upload/Uploading%20FAQ/","text":"Uploading FAQ How \"ready\" does my data have to be to upload to TraceBase? Every data submission to TraceBase (sample metadata, peak annotation files ( AccuCor / IsoCor / Iso-AutoCor ), and RAW / mzXML files) is described/organized in a submission template we refer to as a Study Doc (an Excel Spreadsheet). You can create a study doc that contains the samples/animals associated with as few as one peak annotation file, an entire MS Run, a whole Study, or even multiple studies. We recommend that as soon as you have a peak annotation file, you draft a submission to TraceBase. The submission process uses the peak annotation files to automate the entry of a large portion of the metadata when you download the template, such as sample names and compounds, but some manual metadata entry (for example, describing the animals and samples) is required. The required^ columns are highlighted in blue in the downloaded Study Doc. See How to Upload Data to TraceBase for details. ^ Note that in order for FCirc calculations to be displayed on TraceBase, some optional columns described at the top of the FCirc Rates are required. The upload process ensures that the data integrity is preserved from study to study and from sample to sample. For example, the process ensures: Samples are labeled accurately Animal, Sample, and Study names are unique Consistent nomenclature is used Your data is initially uploaded to a private folder, where a curator checks the data to ensure it is formatted correctly before it is loaded. When all checks have passed, the curator adds the data to TraceBase. This means it is OK (and expected) for your data to be imperfectly labeled when you initially submit for upload, however the process provided empowers each user to be able to solve problems on their own. As the author of the data, you are the most knowledgeable person to fix issues that come up. However, you can choose to engage as much as you want in the validation of your data. Do my compound names need to match TraceBase compound names? No. TraceBase maintains a list of primary compound names associated with synonyms. If you upload data with a new compound name, we will contact you to resolve the difference. If it is a new compound, then your name becomes the primary compound name. If your name matches an existing compound in TraceBase, then your name is added as a synonym, and your next upload will not have any issues. Ideally, every new compound will have an HMDB ID associated with it. If HMDB does not have a record for your compound, enter a fake HMDB ID in the form FakeHMDB0000 in order to validate associated data (because it's a required value), and add a compound synonym with the compound's PubChem ID in the form PubChem0000000 .^ Note however that currently, tracer/infusate names are always converted to TraceBase's primary compound name for consistent/uniform search results and that PeakGroup names always use whatever synonym is present in the peak annotation files. The original design thinking was that this would support distinct stereo-isomers, but this may change in the future. ^ Support for PubChem is a planned feature that will make either an HMDB or PubChem ID required, eliminating the need for the \"fake\" HMDB ID. I have a new Tissue. How do I upload? In the sample information workbook, on the Tissues tab, add your new Tissue name to the list. This will update the tissue dropdown in the tissue column of the Samples sheet, allowing you to select your new Tissue name. When you submit the google form, tell the developer you are adding a new Tissue. Can I upload multiple data files at once? Yes! Upload as many data files as you want. Ideally, use only one Study Doc. This will allow the software to catch multiple representations of the same compound picked for the same sample(s) in multiple peak annotation files (e.g. the same compound picked in positive versus negative mode). TraceBase allows only one representation of a compound in a sample. My sample names in one Accucor/Isocorr file are not unique. Can I upload these together? E.g. Samples Mouse1_Q , Mouse2_Q , Mouse3_Q are in one data file for one experiment, and Mouse1_Q , Mouse2_Q , Mouse3_Q in a second data file for a second experiment. Yes, but this may require some special attention. Ideally, every sample name in the data file should correspond to one unique biological sample in a Study . If that's not the case, and the 2 files containing this name collision are uploaded together on the Start page, TraceBase will assume they are the same biological samples and create a single sample row for each in the Samples sheet. This can be fixed manually, but in this case, it is far easier to create separate Study Docs to avoid the errors. If you generate a single Study Doc with this name conflict, you may (or may not) see any errors, despite the existing problem (missing distinct samples). The errors you might see are MultipleRepresentation errors on the Start page and a Peak Group Conflicts sheet in the downloaded Study Doc. Whether this happens or not depends on the compounds in the peak annotation files. If 2 of the same-named different samples analyze the same compounds (i.e. you picked the same peaks), since TraceBase thinks there was a single sample, it assumes that you picked peaks for the same compound twice. Only 1 such compound representation is allowed per sample, so TraceBase issues the error and prompts you to pick one of the 2 compound representations in the Peak Group Conflicts sheet. But since the samples should be different biological samples, picking a representative compound will only make the problem worse. Let us know when you have this issue and a curator can make the sample name modification for you after your submission is received. I added or edited sample rows manually. Can I upload these files? Yes. Any previously unloaded (i.e. new) samples can be manually edited. Note that corresponding edits should be made in related sheets. For example, if you add or edit a sample row, rows in the Peak Annotation Details sheet must also added/edited. If you want to add lots of samples from a peak annotation files (e.g. Accucor ) that was missed when the template was generated, the easiest solution is likely creating a new template and copying over your work. The benefit of this is that all of the extracted data is filled in in multiple sheets, e.g. novel compounds. If you run into errors in the validate step associated with the added samples, let us know. We will help you to load your modified files. Just send us what you have and we will contact you to confirm our solution is OK. Can I upload some data now, and upload more data from the same samples later? Yes. TraceBase will add new data to existing samples. If the same compound is uploaded a second time, TraceBase will use the latest upload. The same is true of all data in the Study Doc. Edited rows (outside of compound synonyms) that were already loaded are a different story and require special curator attention. Let us know if you need to modify any previously loaded data and a TraceBase curator will make the update. What kind of data can be uploaded? See What Inputs Does TraceBase Take","title":"Uploading FAQ"},{"location":"Upload/Uploading%20FAQ/#uploading-faq","text":"","title":"Uploading FAQ"},{"location":"Upload/Uploading%20FAQ/#how-ready-does-my-data-have-to-be-to-upload-to-tracebase","text":"Every data submission to TraceBase (sample metadata, peak annotation files ( AccuCor / IsoCor / Iso-AutoCor ), and RAW / mzXML files) is described/organized in a submission template we refer to as a Study Doc (an Excel Spreadsheet). You can create a study doc that contains the samples/animals associated with as few as one peak annotation file, an entire MS Run, a whole Study, or even multiple studies. We recommend that as soon as you have a peak annotation file, you draft a submission to TraceBase. The submission process uses the peak annotation files to automate the entry of a large portion of the metadata when you download the template, such as sample names and compounds, but some manual metadata entry (for example, describing the animals and samples) is required. The required^ columns are highlighted in blue in the downloaded Study Doc. See How to Upload Data to TraceBase for details. ^ Note that in order for FCirc calculations to be displayed on TraceBase, some optional columns described at the top of the FCirc Rates are required. The upload process ensures that the data integrity is preserved from study to study and from sample to sample. For example, the process ensures: Samples are labeled accurately Animal, Sample, and Study names are unique Consistent nomenclature is used Your data is initially uploaded to a private folder, where a curator checks the data to ensure it is formatted correctly before it is loaded. When all checks have passed, the curator adds the data to TraceBase. This means it is OK (and expected) for your data to be imperfectly labeled when you initially submit for upload, however the process provided empowers each user to be able to solve problems on their own. As the author of the data, you are the most knowledgeable person to fix issues that come up. However, you can choose to engage as much as you want in the validation of your data.","title":"How \"ready\" does my data have to be to upload to TraceBase?"},{"location":"Upload/Uploading%20FAQ/#do-my-compound-names-need-to-match-tracebase-compound-names","text":"No. TraceBase maintains a list of primary compound names associated with synonyms. If you upload data with a new compound name, we will contact you to resolve the difference. If it is a new compound, then your name becomes the primary compound name. If your name matches an existing compound in TraceBase, then your name is added as a synonym, and your next upload will not have any issues. Ideally, every new compound will have an HMDB ID associated with it. If HMDB does not have a record for your compound, enter a fake HMDB ID in the form FakeHMDB0000 in order to validate associated data (because it's a required value), and add a compound synonym with the compound's PubChem ID in the form PubChem0000000 .^ Note however that currently, tracer/infusate names are always converted to TraceBase's primary compound name for consistent/uniform search results and that PeakGroup names always use whatever synonym is present in the peak annotation files. The original design thinking was that this would support distinct stereo-isomers, but this may change in the future. ^ Support for PubChem is a planned feature that will make either an HMDB or PubChem ID required, eliminating the need for the \"fake\" HMDB ID.","title":"Do my compound names need to match TraceBase compound names?"},{"location":"Upload/Uploading%20FAQ/#i-have-a-new-tissue-how-do-i-upload","text":"In the sample information workbook, on the Tissues tab, add your new Tissue name to the list. This will update the tissue dropdown in the tissue column of the Samples sheet, allowing you to select your new Tissue name. When you submit the google form, tell the developer you are adding a new Tissue.","title":"I have a new Tissue.  How do I upload?"},{"location":"Upload/Uploading%20FAQ/#can-i-upload-multiple-data-files-at-once","text":"Yes! Upload as many data files as you want. Ideally, use only one Study Doc. This will allow the software to catch multiple representations of the same compound picked for the same sample(s) in multiple peak annotation files (e.g. the same compound picked in positive versus negative mode). TraceBase allows only one representation of a compound in a sample.","title":"Can I upload multiple data files at once?"},{"location":"Upload/Uploading%20FAQ/#my-sample-names-in-one-accucorisocorr-file-are-not-unique-can-i-upload-these-together","text":"E.g. Samples Mouse1_Q , Mouse2_Q , Mouse3_Q are in one data file for one experiment, and Mouse1_Q , Mouse2_Q , Mouse3_Q in a second data file for a second experiment. Yes, but this may require some special attention. Ideally, every sample name in the data file should correspond to one unique biological sample in a Study . If that's not the case, and the 2 files containing this name collision are uploaded together on the Start page, TraceBase will assume they are the same biological samples and create a single sample row for each in the Samples sheet. This can be fixed manually, but in this case, it is far easier to create separate Study Docs to avoid the errors. If you generate a single Study Doc with this name conflict, you may (or may not) see any errors, despite the existing problem (missing distinct samples). The errors you might see are MultipleRepresentation errors on the Start page and a Peak Group Conflicts sheet in the downloaded Study Doc. Whether this happens or not depends on the compounds in the peak annotation files. If 2 of the same-named different samples analyze the same compounds (i.e. you picked the same peaks), since TraceBase thinks there was a single sample, it assumes that you picked peaks for the same compound twice. Only 1 such compound representation is allowed per sample, so TraceBase issues the error and prompts you to pick one of the 2 compound representations in the Peak Group Conflicts sheet. But since the samples should be different biological samples, picking a representative compound will only make the problem worse. Let us know when you have this issue and a curator can make the sample name modification for you after your submission is received.","title":"My sample names in one Accucor/Isocorr file are not unique.  Can I upload these together?"},{"location":"Upload/Uploading%20FAQ/#i-added-or-edited-sample-rows-manually-can-i-upload-these-files","text":"Yes. Any previously unloaded (i.e. new) samples can be manually edited. Note that corresponding edits should be made in related sheets. For example, if you add or edit a sample row, rows in the Peak Annotation Details sheet must also added/edited. If you want to add lots of samples from a peak annotation files (e.g. Accucor ) that was missed when the template was generated, the easiest solution is likely creating a new template and copying over your work. The benefit of this is that all of the extracted data is filled in in multiple sheets, e.g. novel compounds. If you run into errors in the validate step associated with the added samples, let us know. We will help you to load your modified files. Just send us what you have and we will contact you to confirm our solution is OK.","title":"I added or edited sample rows manually.  Can I upload these files?"},{"location":"Upload/Uploading%20FAQ/#can-i-upload-some-data-now-and-upload-more-data-from-the-same-samples-later","text":"Yes. TraceBase will add new data to existing samples. If the same compound is uploaded a second time, TraceBase will use the latest upload. The same is true of all data in the Study Doc. Edited rows (outside of compound synonyms) that were already loaded are a different story and require special curator attention. Let us know if you need to modify any previously loaded data and a TraceBase curator will make the update.","title":"Can I upload some data now, and upload more data from the same samples later?"},{"location":"Upload/Uploading%20FAQ/#what-kind-of-data-can-be-uploaded","text":"See What Inputs Does TraceBase Take","title":"What kind of data can be uploaded?"},{"location":"Upload/What%20Inputs%20Does%20TraceBase%20Take/","text":"What Inputs Does TraceBase Take TraceBase takes 3 kinds of input data: Raw Mass Spectrometry Peak Data RAW files from the Mass Spec Instrument mzXML files Corrected Mass Spectrometry Peak Data We refer to these inputs as peak annotation files Used initially to extract experimental metadata Included in the final submission with associated raw data Experimental Metadata All experimental metadata (e.g. sample details, compounds, protocols, etc) is entered into a single Excel file We refer to this input file as the Study Doc The experimental metadata includes some nomenclature-controlled metadata to make sure all data is inter-comparable and reliably searchable across studies. See How TraceBase Handles Data for more information on how TraceBase treats both input and output data. Raw Mass Spectrometry Peak Data TraceBase currently supports 2 forms of \"raw\" Mass Spec files: RAW files produced by a Thermo Fisher Mass Spec instrument (proprietary format) mzXML files containing a portion of the RAW data that are typically used in peak correction TraceBase archives each of these file types to make them searchable in order to find unanalyzed peak data for future studies (as opposed to the curated natural abundance-corrected data (generated from Accucor, IsoCor, Iso-AutoCor, etc) that TraceBase provides calculated values for, like FCirc Rates ). A collection of either form of raw file is too large and impractical to provide via upload on the web, so study submissions are delivered for loading using a shared drive, as described on the Upload Submit page. The mzXML files are parsed by TraceBase to extract: Polarity Scan Range For more details on the relationship between raw file data and curated data, see Raw Versus Curated Data in How TraceBase Handles Data . Corrected Mass Spectrometry Peak Data TraceBase supports the output from 3 popular tools for natural abundance correction: AccuCor ( GitHub ) IsoCor ( GitHub ) ^ Iso-AutoCor Therefore, a typical workflow to put data in TraceBase could start with: Create mzXML files from the Mass Spec instrument's RAW files using conversion tools like ProteoWizard's MSConvert OpenMS FileConverter custom scripts Select peaks from a set of mzXML files using peak-picking tools like Maven El-Maven Create a peak annotation file using one of the natural abundance correction tools mentioned above Tracebase can take any of the 3 peak annotation file types (AccuCor, IsoCor, or Iso-AutoCor) in any one of 3 formats: Microsoft Excel Spreadsheet Corrected data sheet only in one of 2 plain text formats (e.g. using NotePad or TextEdit): CSV (comma separated values) TSV (tab separated values) Peak annotation files are included in 2 steps during the upload process: They are used on the Upload Start page to stub out a Study Doc template to get a jump start on experimental metadata entry. They are included in the final submission, organized into folders on a shared drive with their associated raw files. ^ The GitHub version of IsoCor is called isocorr13C15N . These two terms are used interchangeably on TraceBase. Experimental Metadata To empower the user and engender a sense of ownership and control over your data, all experimental metadata (even the nomenclature-controlled metadata that subject to curator oversight), is localized in a single Excel document that you build during the submission process. TraceBase is designed to match an LCMS sample name (carried from the name of the mzXML file to the sample name in a peak annotation file) to a biological sample. Recommended Practices for Organizing Data Some researchers keep a single list of Animal IDs for all experiments. This works well for TraceBase, because each Animal ID is unique. Other researchers keep a list of animal IDs for each experiment (aka \"Study\"). In this example, the study should have a unique identifier and that should be combined with the animal identifier (e.g. study001_mouse001 ). This also works well for TraceBase. If the Animal ID or Sample ID is not unique, upload is more difficult but still achievable. Feel free to enter what you have and TraceBase curators can help make your data compatible. Note that these labeling schemes can be applied to your general organization of data outside of tracebase: * For a new experiment, create a new identifier counting up from study001 * A related follow up experiment may have an extension, e.g. study001b , study001c * Any text could be used in place of \"study\" * Within each experiment, count animal identifiers study001_m01 , study001_m02 ... * When labeling sample files, provide full animal identifier, tissue, and sometimes time collected: * E.g. study001_m01_quad , study001_m01_tailserum_000 , study001_m01_tailserum_120 * When working with samples in the lab, it is not feasible to label every tube with the full identifier, but shorthand can be used for intermediate tubes if everything is from the same study: * E.g. for tissue extraction from study001 , label working tubes Q_1 , Q_2 .... Label final tubes 001_m1_Q * Data and any other information related to your experiments can be organized in folders labeled for each study study001_my first infusion , study001b_fixing my first infusion","title":"What Inputs Does TraceBase Take"},{"location":"Upload/What%20Inputs%20Does%20TraceBase%20Take/#what-inputs-does-tracebase-take","text":"TraceBase takes 3 kinds of input data: Raw Mass Spectrometry Peak Data RAW files from the Mass Spec Instrument mzXML files Corrected Mass Spectrometry Peak Data We refer to these inputs as peak annotation files Used initially to extract experimental metadata Included in the final submission with associated raw data Experimental Metadata All experimental metadata (e.g. sample details, compounds, protocols, etc) is entered into a single Excel file We refer to this input file as the Study Doc The experimental metadata includes some nomenclature-controlled metadata to make sure all data is inter-comparable and reliably searchable across studies. See How TraceBase Handles Data for more information on how TraceBase treats both input and output data.","title":"What Inputs Does TraceBase Take"},{"location":"Upload/What%20Inputs%20Does%20TraceBase%20Take/#raw-mass-spectrometry-peak-data","text":"TraceBase currently supports 2 forms of \"raw\" Mass Spec files: RAW files produced by a Thermo Fisher Mass Spec instrument (proprietary format) mzXML files containing a portion of the RAW data that are typically used in peak correction TraceBase archives each of these file types to make them searchable in order to find unanalyzed peak data for future studies (as opposed to the curated natural abundance-corrected data (generated from Accucor, IsoCor, Iso-AutoCor, etc) that TraceBase provides calculated values for, like FCirc Rates ). A collection of either form of raw file is too large and impractical to provide via upload on the web, so study submissions are delivered for loading using a shared drive, as described on the Upload Submit page. The mzXML files are parsed by TraceBase to extract: Polarity Scan Range For more details on the relationship between raw file data and curated data, see Raw Versus Curated Data in How TraceBase Handles Data .","title":"Raw Mass Spectrometry Peak Data"},{"location":"Upload/What%20Inputs%20Does%20TraceBase%20Take/#corrected-mass-spectrometry-peak-data","text":"TraceBase supports the output from 3 popular tools for natural abundance correction: AccuCor ( GitHub ) IsoCor ( GitHub ) ^ Iso-AutoCor Therefore, a typical workflow to put data in TraceBase could start with: Create mzXML files from the Mass Spec instrument's RAW files using conversion tools like ProteoWizard's MSConvert OpenMS FileConverter custom scripts Select peaks from a set of mzXML files using peak-picking tools like Maven El-Maven Create a peak annotation file using one of the natural abundance correction tools mentioned above Tracebase can take any of the 3 peak annotation file types (AccuCor, IsoCor, or Iso-AutoCor) in any one of 3 formats: Microsoft Excel Spreadsheet Corrected data sheet only in one of 2 plain text formats (e.g. using NotePad or TextEdit): CSV (comma separated values) TSV (tab separated values) Peak annotation files are included in 2 steps during the upload process: They are used on the Upload Start page to stub out a Study Doc template to get a jump start on experimental metadata entry. They are included in the final submission, organized into folders on a shared drive with their associated raw files. ^ The GitHub version of IsoCor is called isocorr13C15N . These two terms are used interchangeably on TraceBase.","title":"Corrected Mass Spectrometry Peak Data"},{"location":"Upload/What%20Inputs%20Does%20TraceBase%20Take/#experimental-metadata","text":"To empower the user and engender a sense of ownership and control over your data, all experimental metadata (even the nomenclature-controlled metadata that subject to curator oversight), is localized in a single Excel document that you build during the submission process. TraceBase is designed to match an LCMS sample name (carried from the name of the mzXML file to the sample name in a peak annotation file) to a biological sample.","title":"Experimental Metadata"},{"location":"Upload/What%20Inputs%20Does%20TraceBase%20Take/#recommended-practices-for-organizing-data","text":"Some researchers keep a single list of Animal IDs for all experiments. This works well for TraceBase, because each Animal ID is unique. Other researchers keep a list of animal IDs for each experiment (aka \"Study\"). In this example, the study should have a unique identifier and that should be combined with the animal identifier (e.g. study001_mouse001 ). This also works well for TraceBase. If the Animal ID or Sample ID is not unique, upload is more difficult but still achievable. Feel free to enter what you have and TraceBase curators can help make your data compatible. Note that these labeling schemes can be applied to your general organization of data outside of tracebase: * For a new experiment, create a new identifier counting up from study001 * A related follow up experiment may have an extension, e.g. study001b , study001c * Any text could be used in place of \"study\" * Within each experiment, count animal identifiers study001_m01 , study001_m02 ... * When labeling sample files, provide full animal identifier, tissue, and sometimes time collected: * E.g. study001_m01_quad , study001_m01_tailserum_000 , study001_m01_tailserum_120 * When working with samples in the lab, it is not feasible to label every tube with the full identifier, but shorthand can be used for intermediate tubes if everything is from the same study: * E.g. for tissue extraction from study001 , label working tubes Q_1 , Q_2 .... Label final tubes 001_m1_Q * Data and any other information related to your experiments can be organized in folders labeled for each study study001_my first infusion , study001b_fixing my first infusion","title":"Recommended Practices for Organizing Data"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/","text":"How to Start an Upload How to Leverage Peak Annotation Files to Jump Start a Data Submission TraceBase accepts mass spectrometry data that has been corrected for the natural abundance of isotopomers. Specifically, TraceBase supports the output from 3 popular tools for natural abundance correction: AccuCor ( AccuCor on GitHub ) IsoCor ( isocorr13C15N on GitHub ) Iso-AutoCor Therefore, a typical workflow to put data on TraceBase could be: Select peaks from a set of .mzXML files using either of these peak-picking tools Maven El-Maven Correct for natural abundance using AccuCor or IsoCor Upload data to TraceBase to generate a submission template TraceBase uses an Excel spreadsheet called a Study Doc to label and organize submission data. The Upload Start page does not save your uploaded peak annotation files in TraceBase. Its only purpose is to create a Study Doc from scratch using your peak annotation files, so feel free to submit any combination of the files mentioned above as either a: Microsoft Excel Spreadsheet Corrected data sheet only in one of 2 plain text formats (e.g. using NotePad or TextEdit): CSV (comma separated values) TSV (tab separated values) The default file name of a study doc generated by the Upload Start page is study.xlsx . It is suggested that you rename this file using the study name (without spaces), but any name is acceptable. Ensure that each peak annotation file is annotated with the Mass Spec Run information using the fields next to each file. How to Label Mass Spec Run Information The Start page interface provides form elements to enter metadata about the MS Run associated with each peak annotation file. Each field has a drop-down, but any value can be entered. MS Operator Instrument LC Protocol Run Date Since it is expected that multiple peak annotation files will have much of the same metadata, you can enter terms common to all the files you intend to drop. After dropping the files, you can enter the specific values relevant to each specific file. The fields next to the drop area will apply to every file dropped, but they must be filled in before you drop them , as the form fields next to the drop area are ignored when the form is submitted. Only the values next to each individually dropped file are submitted in the final form. You can edit those associated with each individual file using the form rows that appear below the drop area for each dropped file. For example: In this example, the operator, instrument, and LC protocol were filled in before dropping and the date was left empty because each was run on a different date, to be filled in after dropping in the forms that appear below the drag and drop area. The metadata entered about each Mass Spectrometry Run is distilled into unique rows and saved in the Sequences sheet in the Study Doc. There is no succinct ID/Name for each of these rows, so an Excel formula is used to generate one that is available in drop-downs in 2 other sheets: The Peak Annotation Files sheet, which denotes a \"default\" associated run associated with a peak annotation file The Peak Annotation Details sheet, whose values can override the default set in the Peak Annotation Files sheet. All of these values will be automatically populated when you supply the metadata on the Upload page's Start tab. Read on for details about each tracked piece of MS Run metadata. Run Date Date that the sequence was run on the mass spec instrument in YYYY-MM-DD format. The drop-down on the Upload Start page provides selections for the past 2 weeks, but any date can be entered. Instrument The instrument (model) that was used for the MS Run. Note that there is no distinction made between 2 instruments of the same model. Current options: HILIC QE QE2 QEPlus QEHF Exploris240 Exploris480 unknown A new instrument model can be entered and the select list will automatically include the new model in the future after the study is loaded. Operator The name of the researcher who prepared samples for MS and ran them on the instrument. A drop-down is provided on the Upload Start page to mitigate name variants. LC Protocol Name of the Liquid Chromatography LS Protocol used. polar-HILIC-25-min polar-reversed-phase-ion-pairing-25-min polar-reversed-phase-25-min lipid-reversed-phase-25-min SCFA-reversed-phase-22-min unknown Any novel LS Protocol can be entered and will appear in the LC Protocols sheet in the Study Doc, but names should have no spaces (only dashes), start with the LC Method, end with -min , have a run length greater than 0 , and appear in the following format: MYNAME-0-min Example: lipid-reversed-phase-25-min This method involves the analysis of lipids using reversed-phase chromatography on C18 columns, coupled with high resolution mass spectrometry. It is mainly used for the analysis of lipids. If you need to edit the protocol in the Study Doc, do not edit the Name column. Edit the other columns in the sheet and copy the formula from the first unpopulated row in the Name column to paste on the edited row. Polarity and Scan Range Note that polarity and scan range are not recorded in the Study Doc. This information is only ever automatically extracted from the mzXML files, if supplied with your final submission. Notes The Study Doc's Sequences sheet has a Notes column if you want to add any extra information about the run that is not captured in the other columns. You can add that information after generating the Study Doc template. How to Handle Errors and Warnings encountered on the Start Page The Upload Start page is the only tool in the submission process that checks for conflicts between your peak annotation files. If any errors or warnings are encountered on that page, they must be fixed in the downloaded Study Doc. The Validate page will not bring them up again (unless they refer specifically to the otherwise hidden Peak Group Conflicts sheet). If an error or warning encountered on the Start page is not enough to know what to do to fix it, it may help to look up a more detailed explanation of what the exception means, what can cause it, or how to fix it. Every current custom TraceBase exception is provided in the Errors and Warnings Reference . You can use it to search for the exception name to see what extra guidance it provides.","title":"How to Start an Upload"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#how-to-start-an-upload","text":"","title":"How to Start an Upload"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#how-to-leverage-peak-annotation-files-to-jump-start-a-data-submission","text":"TraceBase accepts mass spectrometry data that has been corrected for the natural abundance of isotopomers. Specifically, TraceBase supports the output from 3 popular tools for natural abundance correction: AccuCor ( AccuCor on GitHub ) IsoCor ( isocorr13C15N on GitHub ) Iso-AutoCor Therefore, a typical workflow to put data on TraceBase could be: Select peaks from a set of .mzXML files using either of these peak-picking tools Maven El-Maven Correct for natural abundance using AccuCor or IsoCor Upload data to TraceBase to generate a submission template TraceBase uses an Excel spreadsheet called a Study Doc to label and organize submission data. The Upload Start page does not save your uploaded peak annotation files in TraceBase. Its only purpose is to create a Study Doc from scratch using your peak annotation files, so feel free to submit any combination of the files mentioned above as either a: Microsoft Excel Spreadsheet Corrected data sheet only in one of 2 plain text formats (e.g. using NotePad or TextEdit): CSV (comma separated values) TSV (tab separated values) The default file name of a study doc generated by the Upload Start page is study.xlsx . It is suggested that you rename this file using the study name (without spaces), but any name is acceptable. Ensure that each peak annotation file is annotated with the Mass Spec Run information using the fields next to each file.","title":"How to Leverage Peak Annotation Files to Jump Start a Data Submission"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#how-to-label-mass-spec-run-information","text":"The Start page interface provides form elements to enter metadata about the MS Run associated with each peak annotation file. Each field has a drop-down, but any value can be entered. MS Operator Instrument LC Protocol Run Date Since it is expected that multiple peak annotation files will have much of the same metadata, you can enter terms common to all the files you intend to drop. After dropping the files, you can enter the specific values relevant to each specific file. The fields next to the drop area will apply to every file dropped, but they must be filled in before you drop them , as the form fields next to the drop area are ignored when the form is submitted. Only the values next to each individually dropped file are submitted in the final form. You can edit those associated with each individual file using the form rows that appear below the drop area for each dropped file. For example: In this example, the operator, instrument, and LC protocol were filled in before dropping and the date was left empty because each was run on a different date, to be filled in after dropping in the forms that appear below the drag and drop area. The metadata entered about each Mass Spectrometry Run is distilled into unique rows and saved in the Sequences sheet in the Study Doc. There is no succinct ID/Name for each of these rows, so an Excel formula is used to generate one that is available in drop-downs in 2 other sheets: The Peak Annotation Files sheet, which denotes a \"default\" associated run associated with a peak annotation file The Peak Annotation Details sheet, whose values can override the default set in the Peak Annotation Files sheet. All of these values will be automatically populated when you supply the metadata on the Upload page's Start tab. Read on for details about each tracked piece of MS Run metadata.","title":"How to Label Mass Spec Run Information"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#run-date","text":"Date that the sequence was run on the mass spec instrument in YYYY-MM-DD format. The drop-down on the Upload Start page provides selections for the past 2 weeks, but any date can be entered.","title":"Run Date"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#instrument","text":"The instrument (model) that was used for the MS Run. Note that there is no distinction made between 2 instruments of the same model. Current options: HILIC QE QE2 QEPlus QEHF Exploris240 Exploris480 unknown A new instrument model can be entered and the select list will automatically include the new model in the future after the study is loaded.","title":"Instrument"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#operator","text":"The name of the researcher who prepared samples for MS and ran them on the instrument. A drop-down is provided on the Upload Start page to mitigate name variants.","title":"Operator"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#lc-protocol","text":"Name of the Liquid Chromatography LS Protocol used. polar-HILIC-25-min polar-reversed-phase-ion-pairing-25-min polar-reversed-phase-25-min lipid-reversed-phase-25-min SCFA-reversed-phase-22-min unknown Any novel LS Protocol can be entered and will appear in the LC Protocols sheet in the Study Doc, but names should have no spaces (only dashes), start with the LC Method, end with -min , have a run length greater than 0 , and appear in the following format: MYNAME-0-min Example: lipid-reversed-phase-25-min This method involves the analysis of lipids using reversed-phase chromatography on C18 columns, coupled with high resolution mass spectrometry. It is mainly used for the analysis of lipids. If you need to edit the protocol in the Study Doc, do not edit the Name column. Edit the other columns in the sheet and copy the formula from the first unpopulated row in the Name column to paste on the edited row.","title":"LC Protocol"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#polarity-and-scan-range","text":"Note that polarity and scan range are not recorded in the Study Doc. This information is only ever automatically extracted from the mzXML files, if supplied with your final submission.","title":"Polarity and Scan Range"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#notes","text":"The Study Doc's Sequences sheet has a Notes column if you want to add any extra information about the run that is not captured in the other columns. You can add that information after generating the Study Doc template.","title":"Notes"},{"location":"Upload/How%20to%20Build%20a%20Submission/1%20-%20How%20to%20Start%20an%20Upload/#how-to-handle-errors-and-warnings-encountered-on-the-start-page","text":"The Upload Start page is the only tool in the submission process that checks for conflicts between your peak annotation files. If any errors or warnings are encountered on that page, they must be fixed in the downloaded Study Doc. The Validate page will not bring them up again (unless they refer specifically to the otherwise hidden Peak Group Conflicts sheet). If an error or warning encountered on the Start page is not enough to know what to do to fix it, it may help to look up a more detailed explanation of what the exception means, what can cause it, or how to fix it. Every current custom TraceBase exception is provided in the Errors and Warnings Reference . You can use it to search for the exception name to see what extra guidance it provides.","title":"How to Handle Errors and Warnings encountered on the Start Page"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/","text":"How to Fill In the Study Doc The Researcher uploading data supplies sample information into a submission template (a.k.a. the \"Study Doc\") to describe the samples to be included in TraceBase. Sample information in TraceBase is kept consistent with existing data in TraceBase. This document describes in detail where sample information should be stored and how it should be formatted. It also describes what happens if you have new sample information (i.e. new Diet, Compound, etc). General Tips When in doubt, wing it If you are unsure of how to label something and the Study Doc's header comment seems ambiguous, enter whatever you think fits, and leave it for the validation step to see if you get any errors. If you get an error during validation that still doesn't clarify what is needed, indicate what you are unsure about in the final google submission form. A curator will check the data and help you work out what is needed. Fill in the sheets from left to right Each sheet can reference one or more other sheets, usually by the other sheet's first column. Example: The Samples sheet's Animal column references the Name column of the Animals sheet. Those referencing columns, unless they were automatically filled from the Start tab, will have drop-downs that are populated by the contents of the referenced sheet, but those drop-downs will be empty if the referenced sheet has not yet been filled in. Thus, the order in which you fill in the sheets in the Study Doc affects how easy it is to fill in other sheets. **Pro Tip: The inter-sheet referencing columns allow each sheet to stand alone. A study doc can contain any subset of the contained sheets and still be loaded by itself, as long as the data it references in any other sheet has been previously loaded. If you forgot a peak annotation file or made a mistake on the Start page, start over If during the process of filling in the Study Doc, you discover that you omitted a peak annotation file (e.g. AccuCor file) or made a mistake in your original submission, it is recommended that you start over^ and upload all peak annotations on the Start page together with the corrected information again. If you had already spent time filling in the study doc, carefully copy over data from the previous version. This is recommended for 2 reasons. The Start page performs cross-peak annotation checks that the validation page does not do, the main one being checks for multiple representations of compounds in a sample. Due to the auto-filled inter-sheet references, adding new samples and/or compounds will likely end up causing incomplete sheets that are laborious to fix manually. ^ There is a feature planned that will allow the Start page to update an existing Study Doc, but until that is implemented, starting over is much less error-prone. Fill in blue, ignore gray, and pay attention to columns that affect FCirc Calculations Columns with blue headers are required. Gray columns are controlled by Excel formulas. Formulas usually only extend a few rows past the auto-filled rows, so if you need more, use excel's fill-down feature. The validation process on the next page does not preserve formulas, so it can be helpful to keep the original Start page download to retrieve formulas. While some columns are optional for loading, in order for TraceBase to display accurate FCirc Rates, make sure to fill in the optional columns mentioned in FCirc Rates to ensure that the FCirc calculations will be able to be completed. Don't fill in the mzXML column in the Peak Annotation Details sheet mzXML filenames can be automatically matched to the sample headers in the peak annotation (e.g. AccuCor ) files. The loading code is even smart enough to handle filenames that were modified to add \"pos\", \"neg\", \"scan1\", \"scan2\", etc - which are referred to as \"scan labels\". This column is not automatically populated^ due to the frequent presence of empty mzXML files and the impracticality of uploading those files for mapping, but the loading code works this all out on the fly. The only time you have to fill mzXML files in, is when the filenames differ from the sample headers outside of the scan labels. ^ There is a feature planned that will allow a user to drop an entire Study directory on the Start page to map just the mzXML file names to the peak annotation file sample headers based on common parent directories, and auto-fill the mzXML column in the Peak Annotation Details sheet. Study Doc Sheet and Column Details Unless your study includes some novel compounds, tissues, or protocols, or didn't use the Mass Spec fields on the Upload Start page, you will likely only need to fill in the first 5 sheets (the first 3 of which should be pretty lightweight). Thus, the main focus of your efforts will be the Animals and Samples sheets. Study Sheet Name A name/identifier for an \"experiment\" or collection of animals. This column is used to populate drop-downs in the Study column of the Animals sheet, so fill this sheet out before filling out the Animals sheet. Study Description A long form description of the study. Describe here, the experimental design, citations (if the data is published), or any other relevant information that a researcher might need to consider when looking at the data from this study. Tracers Sheet Note: Individual tracer definitions can be spread across multiple rows, depending on how many different kinds of labeled elements they have. The thing that links the rows together for a single tracer is the value in the Tracer Row Group column._ The tracers sheet is pre-populated with extisting TraceBase tracer entries whose compounds match the compounds extracted from your peak annotation files , but it is not uncommon for those tracers to not include the tracers in your study, so you may need to enter them manually. You may remove any tracer rows that are unrelated to your study, if you wish. In doing so, you do not need to ensure that the Tracer Row Group s are sequential, but if you remove a row, make sure to remove every row with the same Tracer Row Group . Tracer Row Group Arbitrary number that identifies every row containing a label that belongs to a tracer. Each row defines 1 label and this value links them together. The values in this column are not loaded into the database. It is only used to populate the Tracer Name column using an excel formula. All rows having the same Tracer Row Group are used to build the Tracer Name column values. Compound Primary name of the compound for which this is a tracer. The dropdown menus in this column are populated by the Compound column in the Compounds sheet. If the compound you need is not in the dropdown, go to the Compounds sheet to enter it, then come back to select it in this column's automatically updated drop-down menu. Mass Number The sum of the number of protons and neutrons of the labeled atom, a.k.a. 'isotope', e.g. Carbon 14. The number of protons identifies the element that this tracer is an isotope of. The number of neutrons in the element equals the number of protons, but in an isotope, the number of neutrons will be less than or greater than the number of protons. Note, this differs from the 'atomic number' which indicates the number of protons only. Element The type of atom that is labeled in the tracer compound. Select a 'Element' from the dropdowns in this column. Valid values are: C , N , H , O , S , P . For Deuterium, use H and ensure the Mass Number is accurate. Label Count The number of labeled atoms (M+) in the tracer compound supplied to this animal. Note that the count must be greater than or equal to the number of positions. Label Positions A comma-delimited string of integers indicating the labeled atom positions in the compound. The number of known labeled positions must be less than or equal to the Label Count . The positions of Deuterium atoms are relative to the atoms they are covalently bonded to, (which means that the position numbers can repeat when multiple deuterium atoms are bonded to the same Carbon). Tracer Name This is a read-only column that is populated by Excel formula, representing a unique name or lab identifier of the tracer, e.g. leucine-[13C6] . The values in this column are referenced by the Tracer column in the Infusates sheet. Infusates Sheet Note: Individual infusate definitions can be spread across multiple rows, depending on how many different tracers an infusate has. The thing that links the rows together for a single tracer is the value in the Infusate Row Group column. The infusates sheet is pre-populated with extisting TraceBase infusate entries whose compounds match the compounds extracted from your peak annotation files , but it is not uncommon for those infusates to not include the infusates in your study, so you may need to enter them manually. You may remove any infusate rows that are unrelated to your study, if you wish. In doing so, you do not need to ensure that the Infusate Row Group s are sequential, but if you remove a row, make sure to remove every row with the same Infusate Row Group . Infusate Row Group Arbitrary number that identifies every row containing a tracer that belongs to a single infusate. Each row defines 1 tracer (at a particular concentration) and this value links them together. The values in this column are not loaded into the database. It is only used to populate the Infusate Name column using an excel formula. All rows having the same Infusate Row Group are used to build the Infusate Name column values. Tracer Group Name A short name or lab identifier of refering to a group of tracer compounds, e.g 6eaas . There may be multiple infusate records with this group name, each referring to the same tracers at different concentrations. You can select a Tracer Group Name from the dropdowns in this column, which contains existing values in TraceBase, or enter a new value. Tracer Name of a tracer in this infusate at a specific Tracer Concentration. Select a 'Tracer' from the dropdowns in this column. The dropdowns are populated by the Tracer Name column in the Tracers sheet, so if the dropdowns are empty, add rows to the Tracers sheet. Tracer Concentration The millimolar (mM) concentration of the tracer in a specific infusate 'recipe'. Infusate Name This is a read-only column that is populated by Excel formula, representing a unique name or lab identifier of the infusate 'recipe' containing 1 or more tracer compounds at specific concentrations. While this column is automatically populated by excel formula, the following describes the formula output. Individual tracer compounds will be formatted as: compound_name-[weight element count,weight element count] example: valine-[13C5,15N1] Mixtures of compounds will be formatted as: tracer_group_name {tracer[conc]; tracer[conc]} example: BCAAs {isoleucine-[13C6,15N1][23.2];leucine-[13C6,15N1][100];valine-[13C5,15N1][0.9]} Note that the concentrations in the name are limited to 3 significant figures, but the saved value is as entered. The values in this column are referenced by the Infusate column in the Animals sheet. Animals Sheet Animal Name A unique identifier for the animal. See recommendations for how to name an animal in Recommended Practices for Organizing Data . Age Age in weeks when the infusion started Sex \"male\" or \"female\" Genotype Most specific genotype possible. The column in the Animals sheet will have a drop-down containing the existing options on TraceBase. You can also consult the Animals page on TraceBase, where the Genotype column also contains a select list with the current unique genotypes in TraceBase. If necessary, indicate genotype as \"unknown\" (e.g. if the animal is a mixed background wildtype). Weight Weight in grams of the animal at the start time of infusion. Infusate The cells in this column are entered via drop-down and the content of the drop-down is populated using the Infusates and (indirectly) Tracers sheets. Consult the notes on those sheets for details on how to add new infusates/tracers. Keep reading to understand the values in the dropdown. The infusate values in this column are a formatted description of the infusion solution (a.k.a. cocktail) given to an animal, including a shorthand name for the included tracers, an encoded tracer that includes the compound with a description of its labels, and the Millimolar (mM) concentration of each tracer in the solution. Consult the description of the Infusate Name column in the Infusates sheet documentation above for a format description. Infusion Rate Volume of infusate solution infused (microliters (ul) per minute per gram of animal body weight). Diet Description of animal diet used. Include the manufacturer identification and short description where possible. The column in the Animals sheet will have a drop-down containing the existing options on TraceBase. You can also consult the Animals page on TraceBase, where the Diet column also contains a select list with the current unique diets in TraceBase. Feeding Status fasted fed refed Indicate the length of fasting/feeding in the Treatments sheet's Treatment Description column or in the Study sheet's Description column. Treatment A Short, unique identifier for animal treatment protocol. Details are provided in the \"Treatment Description\" field on the \"Treatments\" sheet. Example: T3 in drinking water Default: no treatment Note that unique diets and feeding status are indicated elsewhere, and considered distinct from \"animal treatments\". Study The cells in this column are entered via drop-down and the content of the drop-down is populated using the Name column of the Study sheet. A name/identifier for the \"experiment\" that an animal belongs to. If an animal belongs to multiple studies in this submission, manually enter them in one cell, delimited by semicolons ( ; ). Every row in the Animals sheet should represent a unique animal. See Recommended Practices for Organizing Data Samples Sheet Sample Unique identifier for the biological sample. Generally, the sample names should match the sample headers in the AccuCor/IsoCor files, but often, such a sample header may differ from peak annotation file to peak annotation file, due to modifications of the mzXML filename for uniqueness, or it indicate the scan's polarily or range. TraceBase removes these \"scan labels\" from the sample names when it automatically populates this column. The original sample header in each peak annotation file is preserved in the Peak Annotation Details sheet. See Recommended Practices for Organizing Data for suggestions on how to name samples Date Collected Date sample was collected (YYYY-MM-DD). Researcher Name FIRST LAST Researcher primarily responsible for collection of this sample. Secondary people (PI, collaborator, etc) should be mentioned in the study description. Tissue Type of tissue. A tissue can be selected via drop-down menu. If the desired tissue is not in the drop-down, enter it in the Tissues sheet, then come back and select it in the automatically updated drop-down in this column. The list of tissues in TraceBase can also be viewed on the TraceBase site's Tissues page. Collection Time Minutes after the start of the infusion when the tissue was collected. Collection Time for samples collected before the infusion should be <= 0. Animal The animal from which this sample was collected. The animals is selected via drop-down menu. If the desired animal is not in the drop-down, enter it in the Name column of the Animals sheet, then come back and select it in the automatically updated drop-down in this column. Sequences Sheet Sequence Name This is a read-only column that is populated by Excel formula, representing a unique name for an MS Run Sequence. Note that an MS Run Sequence is unique to a researcher, protocol, instrument (model), and date. If a researcher performs multiple such Mass Spec Runs on the same day, this single MS Run Sequence record will represent multiple runs. Comma-delimited string combining the values from these columns in this order: Operator LC Protocol Name Instrument Date The values in this column are referenced by the 'Default Sequence' column in the 'Peak Annotation Files' sheet and the Sequence column in the Peak Annotation Details sheet. If you used all of the metadata fields on the Upload Start page, this column will have been automatically populated. If you edit any information in the columns controlled by the excel formula, this column will update, unless the formulas were stripped by using the downloaded file from the Upload Validate page, in which case, you may be able to copy a formula from the first enpty row and paste it into the stale valued cell. Operator FIRST LAST Researcher who operated the Mass Spec instrument. If you used the metadata fields on the Upload Start page, this column will have been automatically populated. Select an 'Operator' from the dropdowns in this column or enter a new researcher. If the new researcher was also the sample handler, ensure the names match. LC Protocol Name Unique laboratory-defined name of the liquid chromatography method.(e.g. polar- HILIC-25-min). If you used the metadata fields on the Upload Start page, this column will have been automatically populated. Select an 'LC Protocol Name' from the dropdowns in this column. The dropdowns are populated by the Name column in the LC Protocols sheet, so if the dropdowns are empty, add rows to the LC Protocols sheet. Instrument The model name of the mass spectrometer. Select an instrument from the dropdowns in this column. Valid values are: QE QE2 QEPlus QEHF Exploris240 Exploris480 ExplorisMX unknown You may enter a new model, if necessary. Date The date that the mass spectrometer was run. Format: YYYY-MM-DD Notes Freeform notes on this mass spectrometer run sequence. Peak Annotation Files Sheet Peak Annotation File Peak annotation file, e.g. AccuCor, IsoCorr, etc. If the file will not be in the top level of the study directory, include a POSIX path (where the path delimiter is a forward slash / ) relative to the study directory. The values in this column are referenced by the Peak Annotation File Name column in the Peak Annotation Details sheet. File Format Peak annotation file format. Default: automatically detected. Select a format from the dropdowns in this column. Valid values are: isocorr accucor isoautocorr unicorr ^ ^ unicorr is an internal format that the common elements of the other formats are converted into for loading. There is currently no way to save an excel file in this format, so please ignore this option. Default Sequence The default Sequence to use to associate peak groups with the file they were derived from, when loading a Peak Annotation File. This default can be overridden by values supplied in the Peak Annotation File Name column in the Peak Annotation Details sheet. Refer to the Sequence Name column in the Sequences sheet for format details. Select a Default Sequence from the dropdowns in this column. The dropdowns are populated by the Sequence Name column in the Sequences sheet, so if the dropdowns are empty, add rows to the Sequences sheet. Peak Annotation Details Sheet Sample Name A sample that was injected at least once during a mass spectrometer sequence. Select a Sample Name from the dropdowns in this column. The dropdowns are populated by the Sample column in the Samples sheet, so if the dropdowns are empty, add rows to the Samples sheet. Sample Data Header Sample header from the Peak Annotation File. Note, this column is only conditionally required with mzXML File Name . I.e. one of these 2 columns is required. mzXML File Name A file representing a subset of data extracted from the raw file (e.g. an mzXML file). Note, you can load any/all mzXML File Name s for a Sample Name before the Peak Annotation File is ready to load, in which case you can just leave this value empty. Note, this column is only conditionally required with Sample Data Header . I.e. an mzXML File Name can be loaded without a Peak Annotation File Name value. Peak Annotation File Name Name of the peak annotation file . If the sample on any given row was included in a Peak Annotation File, add the name of that file here. Select a Peak Annotation File Name from the dropdowns in this column. The dropdowns are populated by the Peak Annotation File column in the Peak Annotation Files sheet, so if the dropdowns are empty, add rows to the Peak Annotation Files sheet. Sequence The Sequence associated with the Sample Name , Sample Data Header , and/or mzXML File Name on this row. Refer to the Sequence Name column in the Sequences sheet for format details. Select a Sequence from the dropdowns in this column. The dropdowns are populated by the Sequence Name column in the Sequences sheet, so if the dropdowns are empty, add rows to the Sequences sheet. Skip Whether to load data associated with this sample, e.g. a blank sample. Enter 'skip' to skip loading of the sample and peak annotation data. The mzXML file will be saved if supplied, but it will not be associated with an MSRunSample or MSRunSequence, since the Sample record will not be created. Note that the Sample Name , Sample Data Header , and Sequence columns must still have a unique combo value (for file validation, even though they won't be used). Boolean: skip or '' (i.e. empty). Peak Group Conflicts Sheet This sheet is hidden unless peak group conflicts were detected when the Upload Start page generated the Study Doc template. TraceBase will accept only one peak group measurement for each compound in a given sample. Sometimes a compound can show up in multiple scans (e.g. in positive and negative mode scans). If the same compound was picked for the same sample in El Maven and used to generate multiple peak annotation files, the preferred peak annotation file to represent that compound must be selected. That's the purpose this sheet serves. Peak Group Conflict Peak group name, composed of 1 or more compound synonyms, delimited by / , e.g. citrate/isocitrate . (Note, synonym(s) may confer information about the compound that is not recorded in the compound record, such as a specific stereoisomer.) A peak group that exists in multiple peak annotation files containing common samples. Only 1 peak group may represent each compound per sample. Note that different synonymns of the same compound are treated as qualitatively different compounds (to support for example, stereo-isomers). Note that the order and case of the compound synonyms could differ in each file. Selected Peak Annotation File TraceBase will accept only one peak group measurement for each compound in a given sample. Sometimes a compound can show up in multiple scans (e.g. in positive and negative mode scans). You must select the file containing the best representation of each compound. Using the provided drop-downs, select the peak annotation file from which this peak group should be loaded for the listed samples. That compound in the remaining files will be skipped for those samples. Note, each drop-down contains only the peak annotation files containing the peak group compound for that row. The values in this column are referenced by the Peak Annotation File column in the Peak Annotation Files sheet. Common Sample Count The number of Common Samples among the files listed for the given peak group compound. Example Samples This column contains a sampling of the Common Samples between the files in the Selected Peak Annotation File drop-down. A string of sample names delimited by ; . Common Samples This column contains a sorted list of sample names that multiple peak annotation files have in common, and each measure the same peak group compound. A string of sample names delimited by ; . Treatments Sheet Animal Treatment Short, unique identifier for animal treatment protocol. Must match the same value in Samples sheet. Treatment Description A thorough description of an animal treatment protocol. This will be useful for searching and filtering, so use standard terms and be as complete as possible. Any difference in treatment should be indicated by a new Animal Treatment . Example: different doses of drug Animal Treatment Treatment Description no treatment No treatment was applied. Animal was housed at room temperature with a normal light cycle. T3 in drinking water T3 was provided in drinking water at 0.5 mg/L for two weeks prior to infusion. T3 in drinking water (1.5 mg/L) T3 was provided in drinking water at 1.5 mg/L for two weeks prior to infusion. Tissues Sheet Tissue Short identifier used by TraceBase. Use the most specific identifier applicable to your samples. If your data contains a tissue not already listed here, create a new row. Description Long form description of TraceBase tissue. Compounds Sheet Note that the Upload Start page will add the Compound and Formula , as extracted from the peak annotation files if the compound name does not exist in TraceBase as either a primary compound name or synonym. It will also add all^ complete compound records with matching formulas so that you can check if any novel compound name from the peak annotation files should be a synonym of an existing compound._ ^ \" all \" existing compounds from TraceBase are added to the Compounds sheet, based on the Formula with one caveat: The formulas in peak annotation files often represent the ionized version of the compound, in which case, an existing compound in TraceBase may not be included in the Compounds sheet because its formula is not an exact match. In this case, after adding an HMDB ID , you will encounter a duplicate record error. Unfortunately, the only current way to resolve this is to consult the TraceBase site to copy over the record to the Compounds sheet. Compound A unique compound name that is commonly used in the laboratory (e.g. glucose , C16:0 , etc.). The values in this column are referenced by the Compound column in the Tracers sheet. HMDB ID A unique identifier for this compound in the Human Metabolome Database . Formula The molecular formula of the compound (e.g. C6H12O6 , C16H32O2 , etc.). Synonyms A semicolon-delimited list of unique synonymous names for a compound that is commonly used within the laboratory. (e.g. palmitic acid , hexadecanoic acid , C16 , and palmitate might also be synonyms for C16:0 ). LC Protocols Sheet LC Protocol This is a read-only column that is populated by Excel formula, representing a unique laboratory-defined name for a liquid chromatography method that also indicates the run length. E.g. polar- HILIC-25-min While this column is automatically populated by Excel formula, the following describes the formula output, if you wish to manually enter it. E.g. 'LC Protocol'-'Run Length'-min The values in this column are referenced by the Sequence Name column in the Sequences sheet. Run Length Time duration to complete a sample run through the liquid chromatography method. Units: minutes . Example: 25 Select a Run Length from the dropdowns in this column or enter a new value. Description Unique full-text description of the liquid chromatography method.","title":"How to Fill In the Study Doc"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#how-to-fill-in-the-study-doc","text":"The Researcher uploading data supplies sample information into a submission template (a.k.a. the \"Study Doc\") to describe the samples to be included in TraceBase. Sample information in TraceBase is kept consistent with existing data in TraceBase. This document describes in detail where sample information should be stored and how it should be formatted. It also describes what happens if you have new sample information (i.e. new Diet, Compound, etc).","title":"How to Fill In the Study Doc"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#general-tips","text":"When in doubt, wing it If you are unsure of how to label something and the Study Doc's header comment seems ambiguous, enter whatever you think fits, and leave it for the validation step to see if you get any errors. If you get an error during validation that still doesn't clarify what is needed, indicate what you are unsure about in the final google submission form. A curator will check the data and help you work out what is needed. Fill in the sheets from left to right Each sheet can reference one or more other sheets, usually by the other sheet's first column. Example: The Samples sheet's Animal column references the Name column of the Animals sheet. Those referencing columns, unless they were automatically filled from the Start tab, will have drop-downs that are populated by the contents of the referenced sheet, but those drop-downs will be empty if the referenced sheet has not yet been filled in. Thus, the order in which you fill in the sheets in the Study Doc affects how easy it is to fill in other sheets. **Pro Tip: The inter-sheet referencing columns allow each sheet to stand alone. A study doc can contain any subset of the contained sheets and still be loaded by itself, as long as the data it references in any other sheet has been previously loaded. If you forgot a peak annotation file or made a mistake on the Start page, start over If during the process of filling in the Study Doc, you discover that you omitted a peak annotation file (e.g. AccuCor file) or made a mistake in your original submission, it is recommended that you start over^ and upload all peak annotations on the Start page together with the corrected information again. If you had already spent time filling in the study doc, carefully copy over data from the previous version. This is recommended for 2 reasons. The Start page performs cross-peak annotation checks that the validation page does not do, the main one being checks for multiple representations of compounds in a sample. Due to the auto-filled inter-sheet references, adding new samples and/or compounds will likely end up causing incomplete sheets that are laborious to fix manually. ^ There is a feature planned that will allow the Start page to update an existing Study Doc, but until that is implemented, starting over is much less error-prone. Fill in blue, ignore gray, and pay attention to columns that affect FCirc Calculations Columns with blue headers are required. Gray columns are controlled by Excel formulas. Formulas usually only extend a few rows past the auto-filled rows, so if you need more, use excel's fill-down feature. The validation process on the next page does not preserve formulas, so it can be helpful to keep the original Start page download to retrieve formulas. While some columns are optional for loading, in order for TraceBase to display accurate FCirc Rates, make sure to fill in the optional columns mentioned in FCirc Rates to ensure that the FCirc calculations will be able to be completed. Don't fill in the mzXML column in the Peak Annotation Details sheet mzXML filenames can be automatically matched to the sample headers in the peak annotation (e.g. AccuCor ) files. The loading code is even smart enough to handle filenames that were modified to add \"pos\", \"neg\", \"scan1\", \"scan2\", etc - which are referred to as \"scan labels\". This column is not automatically populated^ due to the frequent presence of empty mzXML files and the impracticality of uploading those files for mapping, but the loading code works this all out on the fly. The only time you have to fill mzXML files in, is when the filenames differ from the sample headers outside of the scan labels. ^ There is a feature planned that will allow a user to drop an entire Study directory on the Start page to map just the mzXML file names to the peak annotation file sample headers based on common parent directories, and auto-fill the mzXML column in the Peak Annotation Details sheet.","title":"General Tips"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#study-doc-sheet-and-column-details","text":"Unless your study includes some novel compounds, tissues, or protocols, or didn't use the Mass Spec fields on the Upload Start page, you will likely only need to fill in the first 5 sheets (the first 3 of which should be pretty lightweight). Thus, the main focus of your efforts will be the Animals and Samples sheets.","title":"Study Doc Sheet and Column Details"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#study-sheet","text":"Name A name/identifier for an \"experiment\" or collection of animals. This column is used to populate drop-downs in the Study column of the Animals sheet, so fill this sheet out before filling out the Animals sheet. Study Description A long form description of the study. Describe here, the experimental design, citations (if the data is published), or any other relevant information that a researcher might need to consider when looking at the data from this study.","title":"Study Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#tracers-sheet","text":"Note: Individual tracer definitions can be spread across multiple rows, depending on how many different kinds of labeled elements they have. The thing that links the rows together for a single tracer is the value in the Tracer Row Group column._ The tracers sheet is pre-populated with extisting TraceBase tracer entries whose compounds match the compounds extracted from your peak annotation files , but it is not uncommon for those tracers to not include the tracers in your study, so you may need to enter them manually. You may remove any tracer rows that are unrelated to your study, if you wish. In doing so, you do not need to ensure that the Tracer Row Group s are sequential, but if you remove a row, make sure to remove every row with the same Tracer Row Group . Tracer Row Group Arbitrary number that identifies every row containing a label that belongs to a tracer. Each row defines 1 label and this value links them together. The values in this column are not loaded into the database. It is only used to populate the Tracer Name column using an excel formula. All rows having the same Tracer Row Group are used to build the Tracer Name column values. Compound Primary name of the compound for which this is a tracer. The dropdown menus in this column are populated by the Compound column in the Compounds sheet. If the compound you need is not in the dropdown, go to the Compounds sheet to enter it, then come back to select it in this column's automatically updated drop-down menu. Mass Number The sum of the number of protons and neutrons of the labeled atom, a.k.a. 'isotope', e.g. Carbon 14. The number of protons identifies the element that this tracer is an isotope of. The number of neutrons in the element equals the number of protons, but in an isotope, the number of neutrons will be less than or greater than the number of protons. Note, this differs from the 'atomic number' which indicates the number of protons only. Element The type of atom that is labeled in the tracer compound. Select a 'Element' from the dropdowns in this column. Valid values are: C , N , H , O , S , P . For Deuterium, use H and ensure the Mass Number is accurate. Label Count The number of labeled atoms (M+) in the tracer compound supplied to this animal. Note that the count must be greater than or equal to the number of positions. Label Positions A comma-delimited string of integers indicating the labeled atom positions in the compound. The number of known labeled positions must be less than or equal to the Label Count . The positions of Deuterium atoms are relative to the atoms they are covalently bonded to, (which means that the position numbers can repeat when multiple deuterium atoms are bonded to the same Carbon). Tracer Name This is a read-only column that is populated by Excel formula, representing a unique name or lab identifier of the tracer, e.g. leucine-[13C6] . The values in this column are referenced by the Tracer column in the Infusates sheet.","title":"Tracers Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#infusates-sheet","text":"Note: Individual infusate definitions can be spread across multiple rows, depending on how many different tracers an infusate has. The thing that links the rows together for a single tracer is the value in the Infusate Row Group column. The infusates sheet is pre-populated with extisting TraceBase infusate entries whose compounds match the compounds extracted from your peak annotation files , but it is not uncommon for those infusates to not include the infusates in your study, so you may need to enter them manually. You may remove any infusate rows that are unrelated to your study, if you wish. In doing so, you do not need to ensure that the Infusate Row Group s are sequential, but if you remove a row, make sure to remove every row with the same Infusate Row Group . Infusate Row Group Arbitrary number that identifies every row containing a tracer that belongs to a single infusate. Each row defines 1 tracer (at a particular concentration) and this value links them together. The values in this column are not loaded into the database. It is only used to populate the Infusate Name column using an excel formula. All rows having the same Infusate Row Group are used to build the Infusate Name column values. Tracer Group Name A short name or lab identifier of refering to a group of tracer compounds, e.g 6eaas . There may be multiple infusate records with this group name, each referring to the same tracers at different concentrations. You can select a Tracer Group Name from the dropdowns in this column, which contains existing values in TraceBase, or enter a new value. Tracer Name of a tracer in this infusate at a specific Tracer Concentration. Select a 'Tracer' from the dropdowns in this column. The dropdowns are populated by the Tracer Name column in the Tracers sheet, so if the dropdowns are empty, add rows to the Tracers sheet. Tracer Concentration The millimolar (mM) concentration of the tracer in a specific infusate 'recipe'. Infusate Name This is a read-only column that is populated by Excel formula, representing a unique name or lab identifier of the infusate 'recipe' containing 1 or more tracer compounds at specific concentrations. While this column is automatically populated by excel formula, the following describes the formula output. Individual tracer compounds will be formatted as: compound_name-[weight element count,weight element count] example: valine-[13C5,15N1] Mixtures of compounds will be formatted as: tracer_group_name {tracer[conc]; tracer[conc]} example: BCAAs {isoleucine-[13C6,15N1][23.2];leucine-[13C6,15N1][100];valine-[13C5,15N1][0.9]} Note that the concentrations in the name are limited to 3 significant figures, but the saved value is as entered. The values in this column are referenced by the Infusate column in the Animals sheet.","title":"Infusates Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#animals-sheet","text":"Animal Name A unique identifier for the animal. See recommendations for how to name an animal in Recommended Practices for Organizing Data . Age Age in weeks when the infusion started Sex \"male\" or \"female\" Genotype Most specific genotype possible. The column in the Animals sheet will have a drop-down containing the existing options on TraceBase. You can also consult the Animals page on TraceBase, where the Genotype column also contains a select list with the current unique genotypes in TraceBase. If necessary, indicate genotype as \"unknown\" (e.g. if the animal is a mixed background wildtype). Weight Weight in grams of the animal at the start time of infusion. Infusate The cells in this column are entered via drop-down and the content of the drop-down is populated using the Infusates and (indirectly) Tracers sheets. Consult the notes on those sheets for details on how to add new infusates/tracers. Keep reading to understand the values in the dropdown. The infusate values in this column are a formatted description of the infusion solution (a.k.a. cocktail) given to an animal, including a shorthand name for the included tracers, an encoded tracer that includes the compound with a description of its labels, and the Millimolar (mM) concentration of each tracer in the solution. Consult the description of the Infusate Name column in the Infusates sheet documentation above for a format description. Infusion Rate Volume of infusate solution infused (microliters (ul) per minute per gram of animal body weight). Diet Description of animal diet used. Include the manufacturer identification and short description where possible. The column in the Animals sheet will have a drop-down containing the existing options on TraceBase. You can also consult the Animals page on TraceBase, where the Diet column also contains a select list with the current unique diets in TraceBase. Feeding Status fasted fed refed Indicate the length of fasting/feeding in the Treatments sheet's Treatment Description column or in the Study sheet's Description column. Treatment A Short, unique identifier for animal treatment protocol. Details are provided in the \"Treatment Description\" field on the \"Treatments\" sheet. Example: T3 in drinking water Default: no treatment Note that unique diets and feeding status are indicated elsewhere, and considered distinct from \"animal treatments\". Study The cells in this column are entered via drop-down and the content of the drop-down is populated using the Name column of the Study sheet. A name/identifier for the \"experiment\" that an animal belongs to. If an animal belongs to multiple studies in this submission, manually enter them in one cell, delimited by semicolons ( ; ). Every row in the Animals sheet should represent a unique animal. See Recommended Practices for Organizing Data","title":"Animals Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#samples-sheet","text":"Sample Unique identifier for the biological sample. Generally, the sample names should match the sample headers in the AccuCor/IsoCor files, but often, such a sample header may differ from peak annotation file to peak annotation file, due to modifications of the mzXML filename for uniqueness, or it indicate the scan's polarily or range. TraceBase removes these \"scan labels\" from the sample names when it automatically populates this column. The original sample header in each peak annotation file is preserved in the Peak Annotation Details sheet. See Recommended Practices for Organizing Data for suggestions on how to name samples Date Collected Date sample was collected (YYYY-MM-DD). Researcher Name FIRST LAST Researcher primarily responsible for collection of this sample. Secondary people (PI, collaborator, etc) should be mentioned in the study description. Tissue Type of tissue. A tissue can be selected via drop-down menu. If the desired tissue is not in the drop-down, enter it in the Tissues sheet, then come back and select it in the automatically updated drop-down in this column. The list of tissues in TraceBase can also be viewed on the TraceBase site's Tissues page. Collection Time Minutes after the start of the infusion when the tissue was collected. Collection Time for samples collected before the infusion should be <= 0. Animal The animal from which this sample was collected. The animals is selected via drop-down menu. If the desired animal is not in the drop-down, enter it in the Name column of the Animals sheet, then come back and select it in the automatically updated drop-down in this column.","title":"Samples Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#sequences-sheet","text":"Sequence Name This is a read-only column that is populated by Excel formula, representing a unique name for an MS Run Sequence. Note that an MS Run Sequence is unique to a researcher, protocol, instrument (model), and date. If a researcher performs multiple such Mass Spec Runs on the same day, this single MS Run Sequence record will represent multiple runs. Comma-delimited string combining the values from these columns in this order: Operator LC Protocol Name Instrument Date The values in this column are referenced by the 'Default Sequence' column in the 'Peak Annotation Files' sheet and the Sequence column in the Peak Annotation Details sheet. If you used all of the metadata fields on the Upload Start page, this column will have been automatically populated. If you edit any information in the columns controlled by the excel formula, this column will update, unless the formulas were stripped by using the downloaded file from the Upload Validate page, in which case, you may be able to copy a formula from the first enpty row and paste it into the stale valued cell. Operator FIRST LAST Researcher who operated the Mass Spec instrument. If you used the metadata fields on the Upload Start page, this column will have been automatically populated. Select an 'Operator' from the dropdowns in this column or enter a new researcher. If the new researcher was also the sample handler, ensure the names match. LC Protocol Name Unique laboratory-defined name of the liquid chromatography method.(e.g. polar- HILIC-25-min). If you used the metadata fields on the Upload Start page, this column will have been automatically populated. Select an 'LC Protocol Name' from the dropdowns in this column. The dropdowns are populated by the Name column in the LC Protocols sheet, so if the dropdowns are empty, add rows to the LC Protocols sheet. Instrument The model name of the mass spectrometer. Select an instrument from the dropdowns in this column. Valid values are: QE QE2 QEPlus QEHF Exploris240 Exploris480 ExplorisMX unknown You may enter a new model, if necessary. Date The date that the mass spectrometer was run. Format: YYYY-MM-DD Notes Freeform notes on this mass spectrometer run sequence.","title":"Sequences Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#peak-annotation-files-sheet","text":"Peak Annotation File Peak annotation file, e.g. AccuCor, IsoCorr, etc. If the file will not be in the top level of the study directory, include a POSIX path (where the path delimiter is a forward slash / ) relative to the study directory. The values in this column are referenced by the Peak Annotation File Name column in the Peak Annotation Details sheet. File Format Peak annotation file format. Default: automatically detected. Select a format from the dropdowns in this column. Valid values are: isocorr accucor isoautocorr unicorr ^ ^ unicorr is an internal format that the common elements of the other formats are converted into for loading. There is currently no way to save an excel file in this format, so please ignore this option. Default Sequence The default Sequence to use to associate peak groups with the file they were derived from, when loading a Peak Annotation File. This default can be overridden by values supplied in the Peak Annotation File Name column in the Peak Annotation Details sheet. Refer to the Sequence Name column in the Sequences sheet for format details. Select a Default Sequence from the dropdowns in this column. The dropdowns are populated by the Sequence Name column in the Sequences sheet, so if the dropdowns are empty, add rows to the Sequences sheet.","title":"Peak Annotation Files Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#peak-annotation-details-sheet","text":"Sample Name A sample that was injected at least once during a mass spectrometer sequence. Select a Sample Name from the dropdowns in this column. The dropdowns are populated by the Sample column in the Samples sheet, so if the dropdowns are empty, add rows to the Samples sheet. Sample Data Header Sample header from the Peak Annotation File. Note, this column is only conditionally required with mzXML File Name . I.e. one of these 2 columns is required. mzXML File Name A file representing a subset of data extracted from the raw file (e.g. an mzXML file). Note, you can load any/all mzXML File Name s for a Sample Name before the Peak Annotation File is ready to load, in which case you can just leave this value empty. Note, this column is only conditionally required with Sample Data Header . I.e. an mzXML File Name can be loaded without a Peak Annotation File Name value. Peak Annotation File Name Name of the peak annotation file . If the sample on any given row was included in a Peak Annotation File, add the name of that file here. Select a Peak Annotation File Name from the dropdowns in this column. The dropdowns are populated by the Peak Annotation File column in the Peak Annotation Files sheet, so if the dropdowns are empty, add rows to the Peak Annotation Files sheet. Sequence The Sequence associated with the Sample Name , Sample Data Header , and/or mzXML File Name on this row. Refer to the Sequence Name column in the Sequences sheet for format details. Select a Sequence from the dropdowns in this column. The dropdowns are populated by the Sequence Name column in the Sequences sheet, so if the dropdowns are empty, add rows to the Sequences sheet. Skip Whether to load data associated with this sample, e.g. a blank sample. Enter 'skip' to skip loading of the sample and peak annotation data. The mzXML file will be saved if supplied, but it will not be associated with an MSRunSample or MSRunSequence, since the Sample record will not be created. Note that the Sample Name , Sample Data Header , and Sequence columns must still have a unique combo value (for file validation, even though they won't be used). Boolean: skip or '' (i.e. empty).","title":"Peak Annotation Details Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#peak-group-conflicts-sheet","text":"This sheet is hidden unless peak group conflicts were detected when the Upload Start page generated the Study Doc template. TraceBase will accept only one peak group measurement for each compound in a given sample. Sometimes a compound can show up in multiple scans (e.g. in positive and negative mode scans). If the same compound was picked for the same sample in El Maven and used to generate multiple peak annotation files, the preferred peak annotation file to represent that compound must be selected. That's the purpose this sheet serves. Peak Group Conflict Peak group name, composed of 1 or more compound synonyms, delimited by / , e.g. citrate/isocitrate . (Note, synonym(s) may confer information about the compound that is not recorded in the compound record, such as a specific stereoisomer.) A peak group that exists in multiple peak annotation files containing common samples. Only 1 peak group may represent each compound per sample. Note that different synonymns of the same compound are treated as qualitatively different compounds (to support for example, stereo-isomers). Note that the order and case of the compound synonyms could differ in each file. Selected Peak Annotation File TraceBase will accept only one peak group measurement for each compound in a given sample. Sometimes a compound can show up in multiple scans (e.g. in positive and negative mode scans). You must select the file containing the best representation of each compound. Using the provided drop-downs, select the peak annotation file from which this peak group should be loaded for the listed samples. That compound in the remaining files will be skipped for those samples. Note, each drop-down contains only the peak annotation files containing the peak group compound for that row. The values in this column are referenced by the Peak Annotation File column in the Peak Annotation Files sheet. Common Sample Count The number of Common Samples among the files listed for the given peak group compound. Example Samples This column contains a sampling of the Common Samples between the files in the Selected Peak Annotation File drop-down. A string of sample names delimited by ; . Common Samples This column contains a sorted list of sample names that multiple peak annotation files have in common, and each measure the same peak group compound. A string of sample names delimited by ; .","title":"Peak Group Conflicts Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#treatments-sheet","text":"Animal Treatment Short, unique identifier for animal treatment protocol. Must match the same value in Samples sheet. Treatment Description A thorough description of an animal treatment protocol. This will be useful for searching and filtering, so use standard terms and be as complete as possible. Any difference in treatment should be indicated by a new Animal Treatment . Example: different doses of drug Animal Treatment Treatment Description no treatment No treatment was applied. Animal was housed at room temperature with a normal light cycle. T3 in drinking water T3 was provided in drinking water at 0.5 mg/L for two weeks prior to infusion. T3 in drinking water (1.5 mg/L) T3 was provided in drinking water at 1.5 mg/L for two weeks prior to infusion.","title":"Treatments Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#tissues-sheet","text":"Tissue Short identifier used by TraceBase. Use the most specific identifier applicable to your samples. If your data contains a tissue not already listed here, create a new row. Description Long form description of TraceBase tissue.","title":"Tissues Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#compounds-sheet","text":"Note that the Upload Start page will add the Compound and Formula , as extracted from the peak annotation files if the compound name does not exist in TraceBase as either a primary compound name or synonym. It will also add all^ complete compound records with matching formulas so that you can check if any novel compound name from the peak annotation files should be a synonym of an existing compound._ ^ \" all \" existing compounds from TraceBase are added to the Compounds sheet, based on the Formula with one caveat: The formulas in peak annotation files often represent the ionized version of the compound, in which case, an existing compound in TraceBase may not be included in the Compounds sheet because its formula is not an exact match. In this case, after adding an HMDB ID , you will encounter a duplicate record error. Unfortunately, the only current way to resolve this is to consult the TraceBase site to copy over the record to the Compounds sheet. Compound A unique compound name that is commonly used in the laboratory (e.g. glucose , C16:0 , etc.). The values in this column are referenced by the Compound column in the Tracers sheet. HMDB ID A unique identifier for this compound in the Human Metabolome Database . Formula The molecular formula of the compound (e.g. C6H12O6 , C16H32O2 , etc.). Synonyms A semicolon-delimited list of unique synonymous names for a compound that is commonly used within the laboratory. (e.g. palmitic acid , hexadecanoic acid , C16 , and palmitate might also be synonyms for C16:0 ).","title":"Compounds Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/2%20-%20How%20to%20Fill%20In%20the%20Study%20Doc/#lc-protocols-sheet","text":"LC Protocol This is a read-only column that is populated by Excel formula, representing a unique laboratory-defined name for a liquid chromatography method that also indicates the run length. E.g. polar- HILIC-25-min While this column is automatically populated by Excel formula, the following describes the formula output, if you wish to manually enter it. E.g. 'LC Protocol'-'Run Length'-min The values in this column are referenced by the Sequence Name column in the Sequences sheet. Run Length Time duration to complete a sample run through the liquid chromatography method. Units: minutes . Example: 25 Select a Run Length from the dropdowns in this column or enter a new value. Description Unique full-text description of the liquid chromatography method.","title":"LC Protocols Sheet"},{"location":"Upload/How%20to%20Build%20a%20Submission/3%20-%20How%20to%20Validate%20a%20Study%20Doc/","text":"How to Validate a Study Doc TraceBase empowers researchers by giving them the tools control all of the data associated with their work. You are the owner of the data, after all. But it also gives you the flexibility to engage with the data issues at a level that is entirely your own discretion. Given the complex relationships of the data inherent in the Tracebase database, there are any number of cryptic database errors that can arise, so we went to the effort to encapsulate common problems in custom error messages that are understandable and actionable to an end user. To that end, if you encounter any errors or warnings that are difficult to understand, we would value your feedback on what errors are difficult to understand or your suggestions on how they could be improved. Here's an example of a few of the errors you might expect to see: General Tips and Strategies for Fixing Errors After you run the validation and receive a status report detailing issues found in the Study Doc, you can fix those issues in the Study Doc itself and resubmit to see if the error or warning goes away. Here are some suggestion that will make this process go quickly and smoothly. Make most of your edits to your uploaded file instead of the \"repaired\" version that is downloaded The validation page always exports a copy of your study doc, potentially with some minor repairs, but in most cases, you should conduct your manual repairs on the originally uploaded Study Doc and throw out the downloaded version, mainly because the exported study doc that gets downloaded does not preserve excel formulas, such as those that generate the intersheet drop-down menus. Thus, changing any of those values to address an error in the downloaded copy becomes more laborious because the dropdowns are gone. If anything is actually repaired, a warning will inform you that data was either added or removed. Focus your efforts on manually repairing other issues first in your original uploaded Study Doc and leave the automatically repaired issues for last. In most cases, these automatically repaired issues are to add rows for broken inter-sheet references or remove rows, like blanks in the Samples sheet that are not loaded. For example, if you enter a novel tissue in the tissue column of the Samples sheet that is not listed in the Tissues sheet, a row with that tissue name will be added to the tissues sheet. If you have a repair warning that says data was added after all other issues are addressed, switch to the downloaded file. Ignore cryptic errors, if you encounter them Most errors you are likely to encounter are ones that have been customized and summarized with descriptions intended to be understood and actionable by a user. Often, the end of the error will contain a suggested fix. If an error seems cryptic or technical, it is likely one that we haven't encountered before. Feel free to leave such errors for a curator to resolve. Validate frequently and often Validating is an iterative process. After fixing any number of reported issues, you can submit to validate again to see if your fixes worked. The validation page tries to find as many issues as it can, however sometimes the existence of one issue will occlude another, so don't be surprised if after fixing one issue, a new issue appears upon subsequent validation. Fix the first of repeated or similar errors and then revalidate The validation page tries to limit cascades of errors that all stem from a root cause, but it's not perfect, so if you see repeated errors or errors that make no sense, fix the first one or as many as you can and then revalidate to see if the root cause has been addressed and the repeated errors disappear. Use the Errors and Warnings Reference Sometimes, an error or warning encountered in the submission process may not be enough to know what to do to fix it. If that's the case, it may help to look up a more detailed explanation of what the exception means, what can cause it, or how to fix it. Every current custom TraceBase exception is provided in the Errors and Warnings Reference . You can use it to search for the exception name to see what extra guidance it provides.","title":"How to Validate a Study Doc"},{"location":"Upload/How%20to%20Build%20a%20Submission/3%20-%20How%20to%20Validate%20a%20Study%20Doc/#how-to-validate-a-study-doc","text":"TraceBase empowers researchers by giving them the tools control all of the data associated with their work. You are the owner of the data, after all. But it also gives you the flexibility to engage with the data issues at a level that is entirely your own discretion. Given the complex relationships of the data inherent in the Tracebase database, there are any number of cryptic database errors that can arise, so we went to the effort to encapsulate common problems in custom error messages that are understandable and actionable to an end user. To that end, if you encounter any errors or warnings that are difficult to understand, we would value your feedback on what errors are difficult to understand or your suggestions on how they could be improved. Here's an example of a few of the errors you might expect to see:","title":"How to Validate a Study Doc"},{"location":"Upload/How%20to%20Build%20a%20Submission/3%20-%20How%20to%20Validate%20a%20Study%20Doc/#general-tips-and-strategies-for-fixing-errors","text":"After you run the validation and receive a status report detailing issues found in the Study Doc, you can fix those issues in the Study Doc itself and resubmit to see if the error or warning goes away. Here are some suggestion that will make this process go quickly and smoothly. Make most of your edits to your uploaded file instead of the \"repaired\" version that is downloaded The validation page always exports a copy of your study doc, potentially with some minor repairs, but in most cases, you should conduct your manual repairs on the originally uploaded Study Doc and throw out the downloaded version, mainly because the exported study doc that gets downloaded does not preserve excel formulas, such as those that generate the intersheet drop-down menus. Thus, changing any of those values to address an error in the downloaded copy becomes more laborious because the dropdowns are gone. If anything is actually repaired, a warning will inform you that data was either added or removed. Focus your efforts on manually repairing other issues first in your original uploaded Study Doc and leave the automatically repaired issues for last. In most cases, these automatically repaired issues are to add rows for broken inter-sheet references or remove rows, like blanks in the Samples sheet that are not loaded. For example, if you enter a novel tissue in the tissue column of the Samples sheet that is not listed in the Tissues sheet, a row with that tissue name will be added to the tissues sheet. If you have a repair warning that says data was added after all other issues are addressed, switch to the downloaded file. Ignore cryptic errors, if you encounter them Most errors you are likely to encounter are ones that have been customized and summarized with descriptions intended to be understood and actionable by a user. Often, the end of the error will contain a suggested fix. If an error seems cryptic or technical, it is likely one that we haven't encountered before. Feel free to leave such errors for a curator to resolve. Validate frequently and often Validating is an iterative process. After fixing any number of reported issues, you can submit to validate again to see if your fixes worked. The validation page tries to find as many issues as it can, however sometimes the existence of one issue will occlude another, so don't be surprised if after fixing one issue, a new issue appears upon subsequent validation. Fix the first of repeated or similar errors and then revalidate The validation page tries to limit cascades of errors that all stem from a root cause, but it's not perfect, so if you see repeated errors or errors that make no sense, fix the first one or as many as you can and then revalidate to see if the root cause has been addressed and the repeated errors disappear. Use the Errors and Warnings Reference Sometimes, an error or warning encountered in the submission process may not be enough to know what to do to fix it. If that's the case, it may help to look up a more detailed explanation of what the exception means, what can cause it, or how to fix it. Every current custom TraceBase exception is provided in the Errors and Warnings Reference . You can use it to search for the exception name to see what extra guidance it provides.","title":"General Tips and Strategies for Fixing Errors"},{"location":"Upload/How%20to%20Build%20a%20Submission/4%20-%20How%20to%20Submit%20Data/","text":"How to Submit Data The Upload Submit page instructs researchers on where to put their data and how to npotify curators that data is ready to be checked and loaded by a TraceBase curator. It also describes a recommended directory structure for their submission. Submissions include a mix of the following types of files: Study Doc (an Excel file) Peak annotation files mzXML and RAW files General File Guidelines The name of the Study Doc should reflect the name of the study, but there are no strict guidelines. It is suggested that all file and directory names should avoid spaces, when possible. Refrain from editing the content of the Peak Annotation Files Other files are allowed, but are not used in the load. Associating mzXML / RAW Files with Peak Annotation Files You can arrange the study directory however you want , but where possible, it is best to colocate peak annotation files (e.g. AccoCor files) with the raw files that were used to generate them, ideally with one peak annotation file per directory. This will make resolving which same-named mzXML files go with which peak annotation files easier. Peak annotation files are automatically associated only with the mzXML / RAW files in the immediate directory (not those in subdirectories), however there are exceptions. If a peak annotation file was generated with a mix of mzXML files, some (but not all) of which were used to generate other peak annotation files , place the peak annotation files in a common parent directory, under which multiple subdirectories contain all of its mzXML / RAW files, even though it may include unassociated raw files. Arranging them this way will usually avoid the ambiguities created by multiple mzXML files with the same name, but only having 1 file of that name under the peak annotation file 's current directory. If 2 mzXML files of the same name exist under a parent directory that contains a peak annotation file in which one of the 2 was used, a curator will populate the mzXML file names column in the Peak Annotation Details sheet of the Study Doc for you, to contain the relative path of the one that was used to generate the peak annotation file , but they may need to reach out to you to know which same-named mzXML goes with which peak annotation file .","title":"How to Submit Data"},{"location":"Upload/How%20to%20Build%20a%20Submission/4%20-%20How%20to%20Submit%20Data/#how-to-submit-data","text":"The Upload Submit page instructs researchers on where to put their data and how to npotify curators that data is ready to be checked and loaded by a TraceBase curator. It also describes a recommended directory structure for their submission. Submissions include a mix of the following types of files: Study Doc (an Excel file) Peak annotation files mzXML and RAW files","title":"How to Submit Data"},{"location":"Upload/How%20to%20Build%20a%20Submission/4%20-%20How%20to%20Submit%20Data/#general-file-guidelines","text":"The name of the Study Doc should reflect the name of the study, but there are no strict guidelines. It is suggested that all file and directory names should avoid spaces, when possible. Refrain from editing the content of the Peak Annotation Files Other files are allowed, but are not used in the load.","title":"General File Guidelines"},{"location":"Upload/How%20to%20Build%20a%20Submission/4%20-%20How%20to%20Submit%20Data/#associating-mzxmlraw-files-with-peak-annotation-files","text":"You can arrange the study directory however you want , but where possible, it is best to colocate peak annotation files (e.g. AccoCor files) with the raw files that were used to generate them, ideally with one peak annotation file per directory. This will make resolving which same-named mzXML files go with which peak annotation files easier. Peak annotation files are automatically associated only with the mzXML / RAW files in the immediate directory (not those in subdirectories), however there are exceptions. If a peak annotation file was generated with a mix of mzXML files, some (but not all) of which were used to generate other peak annotation files , place the peak annotation files in a common parent directory, under which multiple subdirectories contain all of its mzXML / RAW files, even though it may include unassociated raw files. Arranging them this way will usually avoid the ambiguities created by multiple mzXML files with the same name, but only having 1 file of that name under the peak annotation file 's current directory. If 2 mzXML files of the same name exist under a parent directory that contains a peak annotation file in which one of the 2 was used, a curator will populate the mzXML file names column in the Peak Annotation Details sheet of the Study Doc for you, to contain the relative path of the one that was used to generate the peak annotation file , but they may need to reach out to you to know which same-named mzXML goes with which peak annotation file .","title":"Associating mzXML/RAW Files with Peak Annotation Files"},{"location":"Values/Calculated%20Values%20Glossary/","text":"Calculated Values Glossary Terms and calculations in TraceBase are based on Bartman, TeSlaa and Rabinowitz \"Quantitative flux analysis in mammals\" . The following list of calculated values includes a short definition, pseudocode of calcuations, examples, and a GitHub link to the code where the term is calculated. They are organized according to the type of Output table where they are found. PeakData Corrected Abundance Fraction PeakGroups Total Abundance Normalized Labeling Serum Tracers Enrichment Fraction Enrichment of a Label in a Measured Compound in a PeakGroup Enrichment Fraction Enrichment Abundance Enrichment Example FCirc Intact FCirc Per Gram Intact Weight Normalized Rate of Disappearance ( Rd_intact_g ) Intact Weight Normalized Rate of Appearance ( Ra_intact_g ) Per Animal Intact Animal Normalized Rate of Disappearance ( Rd_intact ) Intact Animal Normalized Rate of Appearance ( Ra_intact ) Average FCirc Per Gram Average Weight Normalized Rate of Disappearance ( Rd_avg_g ) Average Weight Normalized Rate of Appearance ( Ra_avg_g ) Per Animal Average Animal Normalized Rate of Disappearance ( Rd_avg ) Average Animal Normalized Rate of Appearance ( Ra_avg )","title":"Calculated Values Glossary"},{"location":"Values/Calculated%20Values%20Glossary/#calculated-values-glossary","text":"Terms and calculations in TraceBase are based on Bartman, TeSlaa and Rabinowitz \"Quantitative flux analysis in mammals\" . The following list of calculated values includes a short definition, pseudocode of calcuations, examples, and a GitHub link to the code where the term is calculated. They are organized according to the type of Output table where they are found.","title":"Calculated Values Glossary"},{"location":"Values/Calculated%20Values%20Glossary/#peakdata","text":"Corrected Abundance Fraction","title":"PeakData"},{"location":"Values/Calculated%20Values%20Glossary/#peakgroups","text":"Total Abundance Normalized Labeling Serum Tracers Enrichment Fraction Enrichment of a Label in a Measured Compound in a PeakGroup Enrichment Fraction Enrichment Abundance Enrichment Example","title":"PeakGroups"},{"location":"Values/Calculated%20Values%20Glossary/#fcirc","text":"Intact FCirc Per Gram Intact Weight Normalized Rate of Disappearance ( Rd_intact_g ) Intact Weight Normalized Rate of Appearance ( Ra_intact_g ) Per Animal Intact Animal Normalized Rate of Disappearance ( Rd_intact ) Intact Animal Normalized Rate of Appearance ( Ra_intact ) Average FCirc Per Gram Average Weight Normalized Rate of Disappearance ( Rd_avg_g ) Average Weight Normalized Rate of Appearance ( Ra_avg_g ) Per Animal Average Animal Normalized Rate of Disappearance ( Rd_avg ) Average Animal Normalized Rate of Appearance ( Ra_avg )","title":"FCirc"},{"location":"Values/Corrected%20Abundance/","text":"Corrected Abundance Found in the PeakData data format. Ion counts for this isotopomer corrected for natural abundance of heavy isotopes. Analagous to the \"Corrected\" tab in AccuCor output. No calculations are performed by TraceBase for this value. The value is determined by any of the supported peak correction tools ( AccuCor , IsoCor , or Iso-AutoCor ) and imported.","title":"Corrected Abundance"},{"location":"Values/Corrected%20Abundance/#corrected-abundance","text":"Found in the PeakData data format. Ion counts for this isotopomer corrected for natural abundance of heavy isotopes. Analagous to the \"Corrected\" tab in AccuCor output. No calculations are performed by TraceBase for this value. The value is determined by any of the supported peak correction tools ( AccuCor , IsoCor , or Iso-AutoCor ) and imported.","title":"Corrected Abundance"},{"location":"Values/Enrichment%20Abundance/","text":"Enrichment Abundance source Found in the PeakGroups data format. The abundance (ion counts) of a labeled atom in a compound detected in a particular sample. enrichment_abundance = total_abundance * enrichment_fraction See: Total Abundance Enrichment Fraction See the Enrichment Abundance column of the PeakGroup table in this Enrichment Example .","title":"Enrichment Abundance"},{"location":"Values/Enrichment%20Abundance/#enrichment-abundance","text":"source Found in the PeakGroups data format. The abundance (ion counts) of a labeled atom in a compound detected in a particular sample. enrichment_abundance = total_abundance * enrichment_fraction See: Total Abundance Enrichment Fraction See the Enrichment Abundance column of the PeakGroup table in this Enrichment Example .","title":"Enrichment Abundance"},{"location":"Values/Enrichment%20Example/","text":"Enrichment Example This is an example for a measured compound alanine (C3H7NO2) measured with 13C and 15N labeling showing the enrichment fraction and enrichment abundance calculations. PeakData Labeled Element:Count Corrected Abundance Fraction C:0; N:0 1090437 0.633529 C:0; N:1 154827.9 0.089953 C:1; N:0 0 0 C:1; N:1 0 0 C:2; N:0 3105.043 0.001804 C:2; N:1 0 0 C:3; N:0 33989.78 0.019748 C:3; N:1 438849.7 0.254966 PeakGroup Sample Tissue Measured Compound Labeled Element Total Abundance Enrichment Fraction Enrichment Abundance sampleid serum_plasma_tail alanine C 1721209.0 0.2759 474909.4989 sampleid serum_plasma_tail alanine N 1721209.0 0.3449 593677.6307 Note that PeakGroup data is split into a separate row for each element.","title":"Enrichment Example"},{"location":"Values/Enrichment%20Example/#enrichment-example","text":"This is an example for a measured compound alanine (C3H7NO2) measured with 13C and 15N labeling showing the enrichment fraction and enrichment abundance calculations.","title":"Enrichment Example"},{"location":"Values/Enrichment%20Example/#peakdata","text":"Labeled Element:Count Corrected Abundance Fraction C:0; N:0 1090437 0.633529 C:0; N:1 154827.9 0.089953 C:1; N:0 0 0 C:1; N:1 0 0 C:2; N:0 3105.043 0.001804 C:2; N:1 0 0 C:3; N:0 33989.78 0.019748 C:3; N:1 438849.7 0.254966","title":"PeakData"},{"location":"Values/Enrichment%20Example/#peakgroup","text":"Sample Tissue Measured Compound Labeled Element Total Abundance Enrichment Fraction Enrichment Abundance sampleid serum_plasma_tail alanine C 1721209.0 0.2759 474909.4989 sampleid serum_plasma_tail alanine N 1721209.0 0.3449 593677.6307 Note that PeakGroup data is split into a separate row for each element.","title":"PeakGroup"},{"location":"Values/Enrichment%20Fraction/","text":"Enrichment Fraction source Found in the PeakGroups data format. A weighted average of the fraction of labeled atoms across all peaks in a PeakGroup detected in a particular sample. E.g. The fraction of labeled carbons in lysine detected in a spleen sample. enrichment_fraction = \u2211_peak(fraction * labeled_count) / element_count Where: \u2211_peak stands for the sum across all peaks in a PeakGroup for a particular compound. fraction : See Fraction labeled_count is the number of labeled atoms (i.e. isotopomers) of a particular element in any one peak. element_count is the total number of atoms of a particular element in any one compound (labeled or not). See the Enrichment Fraction column of the PeakGroup table in this Enrichment Example .","title":"Enrichment Fraction"},{"location":"Values/Enrichment%20Fraction/#enrichment-fraction","text":"source Found in the PeakGroups data format. A weighted average of the fraction of labeled atoms across all peaks in a PeakGroup detected in a particular sample. E.g. The fraction of labeled carbons in lysine detected in a spleen sample. enrichment_fraction = \u2211_peak(fraction * labeled_count) / element_count Where: \u2211_peak stands for the sum across all peaks in a PeakGroup for a particular compound. fraction : See Fraction labeled_count is the number of labeled atoms (i.e. isotopomers) of a particular element in any one peak. element_count is the total number of atoms of a particular element in any one compound (labeled or not). See the Enrichment Fraction column of the PeakGroup table in this Enrichment Example .","title":"Enrichment Fraction"},{"location":"Values/FCirc%20Rates/","text":"FCirc Rates Each FCirc calculation is performed per labeled element, and requires the following values/metadata to have been supplied by the researcher: Animal Body Weight Infusion Rate MS Run Date Note: reruns take precedence over previous runs If this date is not provided, and the last serum sample was run multiple times, an arbitrary run is selected At least 1 serum sample, with: tissue name containing \"serum\". collection time A peak group for every tracer the animal was infused with Note: The intact FCirc calculations require the detection of a fully labeled tracer in each of the infused tracers' PeakGroups. Rates of Appearance/Disappearance ( Ra / Rd ) For more information of the variables in the equations below: animal_body_weight enrichment_fraction fraction infusion_rate tracer_concentration Intact Per Gram Rd_intact_g = infusion_rate * tracer_concentration / fraction ( source ) Ra_intact_g = Rd_intact_g - infusion_rate * tracer_concentration ( source ) Per Animal Rd_intact = Rd_intact_g * animal_body_weight ( source ) Ra_intact = Ra_intact_g * animal_body_weight ( source ) Average Per Gram Rd_avg_g = infusion_rate * tracer_concentration / enrichment_fraction ( source ) Ra_avg_g = Rd_avg_g - infusion_rate * tracer_concentration ( source ) Per Animal Rd_avg = Rd_avg_g * animal_body_weight ( source ) Ra_avg = Ra_avg_g * animal_body_weight ( source )","title":"FCirc Rates"},{"location":"Values/FCirc%20Rates/#fcirc-rates","text":"Each FCirc calculation is performed per labeled element, and requires the following values/metadata to have been supplied by the researcher: Animal Body Weight Infusion Rate MS Run Date Note: reruns take precedence over previous runs If this date is not provided, and the last serum sample was run multiple times, an arbitrary run is selected At least 1 serum sample, with: tissue name containing \"serum\". collection time A peak group for every tracer the animal was infused with Note: The intact FCirc calculations require the detection of a fully labeled tracer in each of the infused tracers' PeakGroups.","title":"FCirc Rates"},{"location":"Values/FCirc%20Rates/#rates-of-appearancedisappearance-rard","text":"For more information of the variables in the equations below: animal_body_weight enrichment_fraction fraction infusion_rate tracer_concentration","title":"Rates of Appearance/Disappearance (Ra/Rd)"},{"location":"Values/FCirc%20Rates/#intact","text":"","title":"Intact"},{"location":"Values/FCirc%20Rates/#per-gram","text":"Rd_intact_g = infusion_rate * tracer_concentration / fraction ( source ) Ra_intact_g = Rd_intact_g - infusion_rate * tracer_concentration ( source )","title":"Per Gram"},{"location":"Values/FCirc%20Rates/#per-animal","text":"Rd_intact = Rd_intact_g * animal_body_weight ( source ) Ra_intact = Ra_intact_g * animal_body_weight ( source )","title":"Per Animal"},{"location":"Values/FCirc%20Rates/#average","text":"","title":"Average"},{"location":"Values/FCirc%20Rates/#per-gram_1","text":"Rd_avg_g = infusion_rate * tracer_concentration / enrichment_fraction ( source ) Ra_avg_g = Rd_avg_g - infusion_rate * tracer_concentration ( source )","title":"Per Gram"},{"location":"Values/FCirc%20Rates/#per-animal_1","text":"Rd_avg = Rd_avg_g * animal_body_weight ( source ) Ra_avg = Ra_avg_g * animal_body_weight ( source )","title":"Per Animal"},{"location":"Values/Fraction/","text":"Fraction source Found in the PeakData data format. The corrected abundance of the labeled element in this PeakData as a fraction of the total abundance of this isotopomer in a PeakGroup for a particular compound. AccuCor calculates this as \"Normalized\", but Tracebase calculates this value as fraction to avoid confusion with other variables like normalized_labeling . fraction = corrected_abundance / total_abundance See: Corrected Abundance Total Abundance Example Alanine (C3H7NO2) measured with 13C and 15N labeling: Labeled Element:Count Corrected Abundance Fraction C:0; N:0 1090437 0.633529 C:0; N:1 154827.9 0.089953 C:1; N:0 0 0 C:1; N:1 0 0 C:2; N:0 3105.043 0.001804 C:2; N:1 0 0 C:3; N:0 33989.78 0.019748 C:3; N:1 438849.7 0.254966","title":"Fraction"},{"location":"Values/Fraction/#fraction","text":"source Found in the PeakData data format. The corrected abundance of the labeled element in this PeakData as a fraction of the total abundance of this isotopomer in a PeakGroup for a particular compound. AccuCor calculates this as \"Normalized\", but Tracebase calculates this value as fraction to avoid confusion with other variables like normalized_labeling . fraction = corrected_abundance / total_abundance See: Corrected Abundance Total Abundance","title":"Fraction"},{"location":"Values/Fraction/#example","text":"Alanine (C3H7NO2) measured with 13C and 15N labeling: Labeled Element:Count Corrected Abundance Fraction C:0; N:0 1090437 0.633529 C:0; N:1 154827.9 0.089953 C:1; N:0 0 0 C:1; N:1 0 0 C:2; N:0 3105.043 0.001804 C:2; N:1 0 0 C:3; N:0 33989.78 0.019748 C:3; N:1 438849.7 0.254966","title":"Example"},{"location":"Values/Normalized%20Labeling/","text":"Normalized Labeling source Found in the PeakGroups data format. Normalized labeling is the enrichment in a compound normalized to the enrichment among the tracer compound(s) from the final serum timepoint from the same animal. normalized_labeling = enrichment_fraction / serum_tracers_enrichment_fraction See: Enrichment Fraction Serum Tracers Enrichment Fraction section below Example Normalized labeling in alanine (C3H7NO2) and glutamate (C5H9NO4) measured in the final serum sample and one tissue (quadricep) sample from an infusion of [13C3-15N]-alanine: Tissue Measured Compound(s) Labeled Element Total Abundance Enrichment Fraction Enrichment Abundance Normalized Labeling serum_plasma_tail alanine C 1721209 0.275916 474909.5 1 serum_plasma_tail alanine N 1721209 0.344919 593677.6 1 serum_plasma_tail glutamate C 242215.7 0.018 4359.787 0.065236 serum_plasma_tail glutamate N 242215.7 0.053935 13063.83 0.156369 quadricep alanine C 97694902 0.006183 604078.4 0.02241 quadricep alanine N 97694902 0.019993 1953218 0.057964 quadricep glutamate C 14251992 0.007268 103580.9 0.026341 quadricep glutamate N 14251992 0.087257 1243586 0.252978 In some cases, a labeled element present in a tracer is not found in a measured compound, and Normalized Labeling is not reported. For example, lactate (C3H6O3) can be measured in samples from an animal infused with N-labeled glutamine (C5H10N2O3), but no nitrogen enrichment or normalized labeling is reported for lactate. For infusates with multiple tracers, the serum tracers enrichment fraction is the average of enrichment in each serum tracer group. The selection of the serum tracer peak groups to use, when multiple instances have been picked, depends on the following: If multiple serum samples were collected on the same date and same minutes after the start of infusion, (i.e. they are biological replicates), the specific tracer peak group selected for each tracer is arbitrary. If a serum tracer peak group is present in multiple MSruns (appears in multiple AccuCor files), the most recently uploaded data is selected. Serum Tracers Enrichment Fraction source Normalized labeling relies on the calculation of a weighted average of the enrichment fraction of labeled atoms among of all of the infused tracers in the animal's final serum sample. E.g. The fraction of labeled carbons among all the final serum sample's tracer compounds. This calculation is performed for a single labeled element in the following manner: The label enrichment is summed for all of the tracers in the last serum sample, and is divided by the total count of the element among all the tracers' formulas (labeled or not). serum_tracers_enrichment_fraction = \u2211_tracer_peak(fraction * labeled_count) / element_count Where: \u2211_tracer_peak stands for the sum across all tracer peaks/observations. labeled_count refers to the number of labeled elements in a single tracer observation (/peak). element_count is the number of occurrences the element summed across all tracers' formulas (labeled or not). fraction : See Fraction","title":"Normalized Labeling"},{"location":"Values/Normalized%20Labeling/#normalized-labeling","text":"source Found in the PeakGroups data format. Normalized labeling is the enrichment in a compound normalized to the enrichment among the tracer compound(s) from the final serum timepoint from the same animal. normalized_labeling = enrichment_fraction / serum_tracers_enrichment_fraction See: Enrichment Fraction Serum Tracers Enrichment Fraction section below","title":"Normalized Labeling"},{"location":"Values/Normalized%20Labeling/#example","text":"Normalized labeling in alanine (C3H7NO2) and glutamate (C5H9NO4) measured in the final serum sample and one tissue (quadricep) sample from an infusion of [13C3-15N]-alanine: Tissue Measured Compound(s) Labeled Element Total Abundance Enrichment Fraction Enrichment Abundance Normalized Labeling serum_plasma_tail alanine C 1721209 0.275916 474909.5 1 serum_plasma_tail alanine N 1721209 0.344919 593677.6 1 serum_plasma_tail glutamate C 242215.7 0.018 4359.787 0.065236 serum_plasma_tail glutamate N 242215.7 0.053935 13063.83 0.156369 quadricep alanine C 97694902 0.006183 604078.4 0.02241 quadricep alanine N 97694902 0.019993 1953218 0.057964 quadricep glutamate C 14251992 0.007268 103580.9 0.026341 quadricep glutamate N 14251992 0.087257 1243586 0.252978 In some cases, a labeled element present in a tracer is not found in a measured compound, and Normalized Labeling is not reported. For example, lactate (C3H6O3) can be measured in samples from an animal infused with N-labeled glutamine (C5H10N2O3), but no nitrogen enrichment or normalized labeling is reported for lactate. For infusates with multiple tracers, the serum tracers enrichment fraction is the average of enrichment in each serum tracer group. The selection of the serum tracer peak groups to use, when multiple instances have been picked, depends on the following: If multiple serum samples were collected on the same date and same minutes after the start of infusion, (i.e. they are biological replicates), the specific tracer peak group selected for each tracer is arbitrary. If a serum tracer peak group is present in multiple MSruns (appears in multiple AccuCor files), the most recently uploaded data is selected.","title":"Example"},{"location":"Values/Normalized%20Labeling/#serum-tracers-enrichment-fraction","text":"source Normalized labeling relies on the calculation of a weighted average of the enrichment fraction of labeled atoms among of all of the infused tracers in the animal's final serum sample. E.g. The fraction of labeled carbons among all the final serum sample's tracer compounds. This calculation is performed for a single labeled element in the following manner: The label enrichment is summed for all of the tracers in the last serum sample, and is divided by the total count of the element among all the tracers' formulas (labeled or not). serum_tracers_enrichment_fraction = \u2211_tracer_peak(fraction * labeled_count) / element_count Where: \u2211_tracer_peak stands for the sum across all tracer peaks/observations. labeled_count refers to the number of labeled elements in a single tracer observation (/peak). element_count is the number of occurrences the element summed across all tracers' formulas (labeled or not). fraction : See Fraction","title":"Serum Tracers Enrichment Fraction"},{"location":"Values/Total%20Abundance/","text":"Total Abundance source Found in the PeakGroups data format. Total ion counts for this compound. AccuCor provides this in the tab \"pool size\". Sum of the corrected_abundance of all peaks (i.e. PeakData) for this PeakGroup representing the compound. total_abundance = \u2211_peak(corrected_abundance) Where: \u2211_peak stands for the sum across all peaks in a PeakGroup for a particular compound. See Corrected Abundance","title":"Total Abundance"},{"location":"Values/Total%20Abundance/#total-abundance","text":"source Found in the PeakGroups data format. Total ion counts for this compound. AccuCor provides this in the tab \"pool size\". Sum of the corrected_abundance of all peaks (i.e. PeakData) for this PeakGroup representing the compound. total_abundance = \u2211_peak(corrected_abundance) Where: \u2211_peak stands for the sum across all peaks in a PeakGroup for a particular compound. See Corrected Abundance","title":"Total Abundance"}]}